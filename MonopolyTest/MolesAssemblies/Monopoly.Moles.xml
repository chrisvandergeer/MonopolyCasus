<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Monopoly.Moles</name>
    </assembly>
    <members>
        <member name="T:Monopoly.AI.VoorzichtigeHuisjesmelker.Moles.MAIDecider">
            <summary>Mole type of <see cref="T:Monopoly.AI.VoorzichtigeHuisjesmelker.AIDecider"/>
            .</summary>
        </member>
        <member name="M:Monopoly.AI.VoorzichtigeHuisjesmelker.Moles.MAIDecider.#ctor">
            <summary>Initializes a new mole</summary>
        </member>
        <member name="M:Monopoly.AI.VoorzichtigeHuisjesmelker.Moles.MAIDecider.#ctor(Monopoly.AI.VoorzichtigeHuisjesmelker.AIDecider)">
            <summary>Initializes a new mole for the given instance</summary>
        </member>
        <member name="M:Monopoly.AI.VoorzichtigeHuisjesmelker.Moles.MAIDecider.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:Monopoly.AI.VoorzichtigeHuisjesmelker.Moles.MAIDecider.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:Monopoly.AI.VoorzichtigeHuisjesmelker.Moles.MAIDecider.Bind(Monopoly.AI.IAIDecider)">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="P:Monopoly.AI.VoorzichtigeHuisjesmelker.Moles.MAIDecider.AddDecisionStringIDecision">
            <summary>Sets the mole of <see cref="M:Monopoly.AI.VoorzichtigeHuisjesmelker.AIDecider.AddDecision(System.String,Monopoly.AI.IDecision)"/>
            </summary>
        </member>
        <member name="P:Monopoly.AI.VoorzichtigeHuisjesmelker.Moles.MAIDecider.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Monopoly.AI.VoorzichtigeHuisjesmelker.Moles.MAIDecider.Constructor">
            <summary>Sets the mole of <see cref="M:Monopoly.AI.VoorzichtigeHuisjesmelker.AIDecider.#ctor"/>
            </summary>
        </member>
        <member name="P:Monopoly.AI.VoorzichtigeHuisjesmelker.Moles.MAIDecider.DecideMonopolyspel">
            <summary>Sets the mole of <see cref="M:Monopoly.AI.VoorzichtigeHuisjesmelker.AIDecider.Decide(Monopoly.domein.Monopolyspel)"/>
            </summary>
        </member>
        <member name="P:Monopoly.AI.VoorzichtigeHuisjesmelker.Moles.MAIDecider.DecideSpelerString">
            <summary>Sets the mole of <see cref="M:Monopoly.AI.VoorzichtigeHuisjesmelker.AIDecider.Decide(Monopoly.domein.Speler,System.String)"/>
            </summary>
        </member>
        <member name="P:Monopoly.AI.VoorzichtigeHuisjesmelker.Moles.MAIDecider.DecisionsGet">
            <summary>Sets the mole of <see cref="P:Monopoly.AI.VoorzichtigeHuisjesmelker.AIDecider.Decisions"/>
            </summary>
        </member>
        <member name="P:Monopoly.AI.VoorzichtigeHuisjesmelker.Moles.MAIDecider.DecisionsSetDictionaryOfStringIDecision">
            <summary>Sets the mole of <see cref="P:Monopoly.AI.VoorzichtigeHuisjesmelker.AIDecider.Decisions"/>
            </summary>
        </member>
        <member name="P:Monopoly.AI.VoorzichtigeHuisjesmelker.Moles.MAIDecider.DefaultDecisionGet">
            <summary>Sets the mole of <see cref="P:Monopoly.AI.VoorzichtigeHuisjesmelker.AIDecider.DefaultDecision"/>
            </summary>
        </member>
        <member name="P:Monopoly.AI.VoorzichtigeHuisjesmelker.Moles.MAIDecider.DefaultDecisionSetIDecision">
            <summary>Sets the mole of <see cref="P:Monopoly.AI.VoorzichtigeHuisjesmelker.AIDecider.DefaultDecision"/>
            </summary>
        </member>
        <member name="P:Monopoly.AI.VoorzichtigeHuisjesmelker.Moles.MAIDecider.GetDecisionString">
            <summary>Sets the mole of <see cref="M:Monopoly.AI.VoorzichtigeHuisjesmelker.AIDecider.GetDecision(System.String)"/>
            </summary>
        </member>
        <member name="P:Monopoly.AI.VoorzichtigeHuisjesmelker.Moles.MAIDecider.IsUitvoerbaarSpelerString">
            <summary>Sets the mole of <see cref="M:Monopoly.AI.VoorzichtigeHuisjesmelker.AIDecider.IsUitvoerbaar(Monopoly.domein.Speler,System.String)"/>
            </summary>
        </member>
        <member name="T:Monopoly.AI.VoorzichtigeHuisjesmelker.Moles.MAIDecider.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="P:Monopoly.AI.VoorzichtigeHuisjesmelker.Moles.MAIDecider.AllInstances.AddDecisionStringIDecision">
            <summary>Sets the mole of <see cref="M:Monopoly.AI.VoorzichtigeHuisjesmelker.AIDecider.AddDecision(System.String,Monopoly.AI.IDecision)"/>
            </summary>
        </member>
        <member name="P:Monopoly.AI.VoorzichtigeHuisjesmelker.Moles.MAIDecider.AllInstances.DecideMonopolyspel">
            <summary>Sets the mole of <see cref="M:Monopoly.AI.VoorzichtigeHuisjesmelker.AIDecider.Decide(Monopoly.domein.Monopolyspel)"/>
            </summary>
        </member>
        <member name="P:Monopoly.AI.VoorzichtigeHuisjesmelker.Moles.MAIDecider.AllInstances.DecideSpelerString">
            <summary>Sets the mole of <see cref="M:Monopoly.AI.VoorzichtigeHuisjesmelker.AIDecider.Decide(Monopoly.domein.Speler,System.String)"/>
            </summary>
        </member>
        <member name="P:Monopoly.AI.VoorzichtigeHuisjesmelker.Moles.MAIDecider.AllInstances.DecisionsGet">
            <summary>Sets the mole of <see cref="P:Monopoly.AI.VoorzichtigeHuisjesmelker.AIDecider.Decisions"/>
            </summary>
        </member>
        <member name="P:Monopoly.AI.VoorzichtigeHuisjesmelker.Moles.MAIDecider.AllInstances.DecisionsSetDictionaryOfStringIDecision">
            <summary>Sets the mole of <see cref="P:Monopoly.AI.VoorzichtigeHuisjesmelker.AIDecider.Decisions"/>
            </summary>
        </member>
        <member name="P:Monopoly.AI.VoorzichtigeHuisjesmelker.Moles.MAIDecider.AllInstances.DefaultDecisionGet">
            <summary>Sets the mole of <see cref="P:Monopoly.AI.VoorzichtigeHuisjesmelker.AIDecider.DefaultDecision"/>
            </summary>
        </member>
        <member name="P:Monopoly.AI.VoorzichtigeHuisjesmelker.Moles.MAIDecider.AllInstances.DefaultDecisionSetIDecision">
            <summary>Sets the mole of <see cref="P:Monopoly.AI.VoorzichtigeHuisjesmelker.AIDecider.DefaultDecision"/>
            </summary>
        </member>
        <member name="P:Monopoly.AI.VoorzichtigeHuisjesmelker.Moles.MAIDecider.AllInstances.GetDecisionString">
            <summary>Sets the mole of <see cref="M:Monopoly.AI.VoorzichtigeHuisjesmelker.AIDecider.GetDecision(System.String)"/>
            </summary>
        </member>
        <member name="P:Monopoly.AI.VoorzichtigeHuisjesmelker.Moles.MAIDecider.AllInstances.IsUitvoerbaarSpelerString">
            <summary>Sets the mole of <see cref="M:Monopoly.AI.VoorzichtigeHuisjesmelker.AIDecider.IsUitvoerbaar(Monopoly.domein.Speler,System.String)"/>
            </summary>
        </member>
        <member name="T:Monopoly.AI.RisicoNemendeGrondAankoper.Moles.MAIDecider01">
            <summary>Mole type of <see cref="T:Monopoly.AI.RisicoNemendeGrondAankoper.AIDecider"/>
            .</summary>
        </member>
        <member name="M:Monopoly.AI.RisicoNemendeGrondAankoper.Moles.MAIDecider01.#ctor">
            <summary>Initializes a new mole</summary>
        </member>
        <member name="M:Monopoly.AI.RisicoNemendeGrondAankoper.Moles.MAIDecider01.#ctor(Monopoly.AI.RisicoNemendeGrondAankoper.AIDecider)">
            <summary>Initializes a new mole for the given instance</summary>
        </member>
        <member name="M:Monopoly.AI.RisicoNemendeGrondAankoper.Moles.MAIDecider01.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:Monopoly.AI.RisicoNemendeGrondAankoper.Moles.MAIDecider01.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:Monopoly.AI.RisicoNemendeGrondAankoper.Moles.MAIDecider01.Bind(Monopoly.AI.IAIDecider)">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="P:Monopoly.AI.RisicoNemendeGrondAankoper.Moles.MAIDecider01.AddDecisionStringIDecision">
            <summary>Sets the mole of <see cref="M:Monopoly.AI.RisicoNemendeGrondAankoper.AIDecider.AddDecision(System.String,Monopoly.AI.IDecision)"/>
            </summary>
        </member>
        <member name="P:Monopoly.AI.RisicoNemendeGrondAankoper.Moles.MAIDecider01.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Monopoly.AI.RisicoNemendeGrondAankoper.Moles.MAIDecider01.Constructor">
            <summary>Sets the mole of <see cref="M:Monopoly.AI.RisicoNemendeGrondAankoper.AIDecider.#ctor"/>
            </summary>
        </member>
        <member name="P:Monopoly.AI.RisicoNemendeGrondAankoper.Moles.MAIDecider01.DecideMonopolyspel">
            <summary>Sets the mole of <see cref="M:Monopoly.AI.RisicoNemendeGrondAankoper.AIDecider.Decide(Monopoly.domein.Monopolyspel)"/>
            </summary>
        </member>
        <member name="P:Monopoly.AI.RisicoNemendeGrondAankoper.Moles.MAIDecider01.DecideSpelerString">
            <summary>Sets the mole of <see cref="M:Monopoly.AI.RisicoNemendeGrondAankoper.AIDecider.Decide(Monopoly.domein.Speler,System.String)"/>
            </summary>
        </member>
        <member name="P:Monopoly.AI.RisicoNemendeGrondAankoper.Moles.MAIDecider01.DecisionsGet">
            <summary>Sets the mole of <see cref="P:Monopoly.AI.RisicoNemendeGrondAankoper.AIDecider.Decisions"/>
            </summary>
        </member>
        <member name="P:Monopoly.AI.RisicoNemendeGrondAankoper.Moles.MAIDecider01.DecisionsSetDictionaryOfStringIDecision">
            <summary>Sets the mole of <see cref="P:Monopoly.AI.RisicoNemendeGrondAankoper.AIDecider.Decisions"/>
            </summary>
        </member>
        <member name="P:Monopoly.AI.RisicoNemendeGrondAankoper.Moles.MAIDecider01.DefaultDecisionGet">
            <summary>Sets the mole of <see cref="P:Monopoly.AI.RisicoNemendeGrondAankoper.AIDecider.DefaultDecision"/>
            </summary>
        </member>
        <member name="P:Monopoly.AI.RisicoNemendeGrondAankoper.Moles.MAIDecider01.DefaultDecisionSetIDecision">
            <summary>Sets the mole of <see cref="P:Monopoly.AI.RisicoNemendeGrondAankoper.AIDecider.DefaultDecision"/>
            </summary>
        </member>
        <member name="P:Monopoly.AI.RisicoNemendeGrondAankoper.Moles.MAIDecider01.GetDecisionString">
            <summary>Sets the mole of <see cref="M:Monopoly.AI.RisicoNemendeGrondAankoper.AIDecider.GetDecision(System.String)"/>
            </summary>
        </member>
        <member name="P:Monopoly.AI.RisicoNemendeGrondAankoper.Moles.MAIDecider01.IsUitvoerbaarSpelerString">
            <summary>Sets the mole of <see cref="M:Monopoly.AI.RisicoNemendeGrondAankoper.AIDecider.IsUitvoerbaar(Monopoly.domein.Speler,System.String)"/>
            </summary>
        </member>
        <member name="T:Monopoly.AI.RisicoNemendeGrondAankoper.Moles.MAIDecider01.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="P:Monopoly.AI.RisicoNemendeGrondAankoper.Moles.MAIDecider01.AllInstances.AddDecisionStringIDecision">
            <summary>Sets the mole of <see cref="M:Monopoly.AI.RisicoNemendeGrondAankoper.AIDecider.AddDecision(System.String,Monopoly.AI.IDecision)"/>
            </summary>
        </member>
        <member name="P:Monopoly.AI.RisicoNemendeGrondAankoper.Moles.MAIDecider01.AllInstances.DecideMonopolyspel">
            <summary>Sets the mole of <see cref="M:Monopoly.AI.RisicoNemendeGrondAankoper.AIDecider.Decide(Monopoly.domein.Monopolyspel)"/>
            </summary>
        </member>
        <member name="P:Monopoly.AI.RisicoNemendeGrondAankoper.Moles.MAIDecider01.AllInstances.DecideSpelerString">
            <summary>Sets the mole of <see cref="M:Monopoly.AI.RisicoNemendeGrondAankoper.AIDecider.Decide(Monopoly.domein.Speler,System.String)"/>
            </summary>
        </member>
        <member name="P:Monopoly.AI.RisicoNemendeGrondAankoper.Moles.MAIDecider01.AllInstances.DecisionsGet">
            <summary>Sets the mole of <see cref="P:Monopoly.AI.RisicoNemendeGrondAankoper.AIDecider.Decisions"/>
            </summary>
        </member>
        <member name="P:Monopoly.AI.RisicoNemendeGrondAankoper.Moles.MAIDecider01.AllInstances.DecisionsSetDictionaryOfStringIDecision">
            <summary>Sets the mole of <see cref="P:Monopoly.AI.RisicoNemendeGrondAankoper.AIDecider.Decisions"/>
            </summary>
        </member>
        <member name="P:Monopoly.AI.RisicoNemendeGrondAankoper.Moles.MAIDecider01.AllInstances.DefaultDecisionGet">
            <summary>Sets the mole of <see cref="P:Monopoly.AI.RisicoNemendeGrondAankoper.AIDecider.DefaultDecision"/>
            </summary>
        </member>
        <member name="P:Monopoly.AI.RisicoNemendeGrondAankoper.Moles.MAIDecider01.AllInstances.DefaultDecisionSetIDecision">
            <summary>Sets the mole of <see cref="P:Monopoly.AI.RisicoNemendeGrondAankoper.AIDecider.DefaultDecision"/>
            </summary>
        </member>
        <member name="P:Monopoly.AI.RisicoNemendeGrondAankoper.Moles.MAIDecider01.AllInstances.GetDecisionString">
            <summary>Sets the mole of <see cref="M:Monopoly.AI.RisicoNemendeGrondAankoper.AIDecider.GetDecision(System.String)"/>
            </summary>
        </member>
        <member name="P:Monopoly.AI.RisicoNemendeGrondAankoper.Moles.MAIDecider01.AllInstances.IsUitvoerbaarSpelerString">
            <summary>Sets the mole of <see cref="M:Monopoly.AI.RisicoNemendeGrondAankoper.AIDecider.IsUitvoerbaar(Monopoly.domein.Speler,System.String)"/>
            </summary>
        </member>
        <member name="T:Monopoly.builders.Moles.MAlgemeenFondsKaartenbuilder">
            <summary>Mole type of <see cref="T:Monopoly.builders.AlgemeenFondsKaartenbuilder"/>
            .</summary>
        </member>
        <member name="M:Monopoly.builders.Moles.MAlgemeenFondsKaartenbuilder.#ctor">
            <summary>Initializes a new mole</summary>
        </member>
        <member name="M:Monopoly.builders.Moles.MAlgemeenFondsKaartenbuilder.#ctor(Monopoly.builders.AlgemeenFondsKaartenbuilder)">
            <summary>Initializes a new mole for the given instance</summary>
        </member>
        <member name="M:Monopoly.builders.Moles.MAlgemeenFondsKaartenbuilder.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:Monopoly.builders.Moles.MAlgemeenFondsKaartenbuilder.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Monopoly.builders.Moles.MAlgemeenFondsKaartenbuilder.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Monopoly.builders.Moles.MAlgemeenFondsKaartenbuilder.BordGet">
            <summary>Sets the mole of <see cref="P:Monopoly.builders.AlgemeenFondsKaartenbuilder.Bord"/>
            </summary>
        </member>
        <member name="P:Monopoly.builders.Moles.MAlgemeenFondsKaartenbuilder.BordSetSpelbord">
            <summary>Sets the mole of <see cref="P:Monopoly.builders.AlgemeenFondsKaartenbuilder.Bord"/>
            </summary>
        </member>
        <member name="P:Monopoly.builders.Moles.MAlgemeenFondsKaartenbuilder.ConstructorSpelbord">
            <summary>Sets the mole of <see cref="M:Monopoly.builders.AlgemeenFondsKaartenbuilder.#ctor(Monopoly.domein.Spelbord)"/>
            </summary>
        </member>
        <member name="P:Monopoly.builders.Moles.MAlgemeenFondsKaartenbuilder.build">
            <summary>Sets the mole of <see cref="M:Monopoly.builders.AlgemeenFondsKaartenbuilder.build"/>
            </summary>
        </member>
        <member name="T:Monopoly.builders.Moles.MAlgemeenFondsKaartenbuilder.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="P:Monopoly.builders.Moles.MAlgemeenFondsKaartenbuilder.AllInstances.BordGet">
            <summary>Sets the mole of <see cref="P:Monopoly.builders.AlgemeenFondsKaartenbuilder.Bord"/>
            </summary>
        </member>
        <member name="P:Monopoly.builders.Moles.MAlgemeenFondsKaartenbuilder.AllInstances.BordSetSpelbord">
            <summary>Sets the mole of <see cref="P:Monopoly.builders.AlgemeenFondsKaartenbuilder.Bord"/>
            </summary>
        </member>
        <member name="P:Monopoly.builders.Moles.MAlgemeenFondsKaartenbuilder.AllInstances.build">
            <summary>Sets the mole of <see cref="M:Monopoly.builders.AlgemeenFondsKaartenbuilder.build"/>
            </summary>
        </member>
        <member name="T:Monopoly.domein.velden.Moles.MBedrijf">
            <summary>Mole type of <see cref="T:Monopoly.domein.velden.Bedrijf"/>
            .</summary>
        </member>
        <member name="M:Monopoly.domein.velden.Moles.MBedrijf.#ctor">
            <summary>Initializes a new mole</summary>
        </member>
        <member name="M:Monopoly.domein.velden.Moles.MBedrijf.#ctor(Monopoly.domein.velden.Bedrijf)">
            <summary>Initializes a new mole for the given instance</summary>
        </member>
        <member name="M:Monopoly.domein.velden.Moles.MBedrijf.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:Monopoly.domein.velden.Moles.MBedrijf.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:Monopoly.domein.velden.Moles.MBedrijf.Bind(Monopoly.domein.velden.IHuurObservable)">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="M:Monopoly.domein.velden.Moles.MBedrijf.Bind(Monopoly.domein.velden.IHypotheekveld)">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="M:Monopoly.domein.velden.Moles.MBedrijf.Bind(Monopoly.domein.velden.IVeld)">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="P:Monopoly.domein.velden.Moles.MBedrijf.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Monopoly.domein.velden.Moles.MBedrijf.BepaalGebeurtenis">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.velden.Bedrijf.BepaalGebeurtenis"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.velden.Moles.MBedrijf.BepaalHuurprijs">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.velden.Bedrijf.BepaalHuurprijs"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.velden.Moles.MBedrijf.ConstructorStringInt32IHuurprijsBepaler">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.velden.Bedrijf.#ctor(System.String,System.Int32,Monopoly.domein.IHuurprijsBepaler)"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.velden.Moles.MBedrijf.EigenaarGet">
            <summary>Sets the mole of <see cref="P:Monopoly.domein.velden.Bedrijf.Eigenaar"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.velden.Moles.MBedrijf.EigenaarSetSpeler">
            <summary>Sets the mole of <see cref="P:Monopoly.domein.velden.Bedrijf.Eigenaar"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.velden.Moles.MBedrijf.HuurprijsBepalerGet">
            <summary>Sets the mole of <see cref="P:Monopoly.domein.velden.Bedrijf.HuurprijsBepaler"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.velden.Moles.MBedrijf.HuurprijsBepalerSetIHuurprijsBepaler">
            <summary>Sets the mole of <see cref="P:Monopoly.domein.velden.Bedrijf.HuurprijsBepaler"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.velden.Moles.MBedrijf.HypotheekGet">
            <summary>Sets the mole of <see cref="P:Monopoly.domein.velden.Bedrijf.Hypotheek"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.velden.Moles.MBedrijf.HypotheekSetHypotheek">
            <summary>Sets the mole of <see cref="P:Monopoly.domein.velden.Bedrijf.Hypotheek"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.velden.Moles.MBedrijf.KoopprijsGet">
            <summary>Sets the mole of <see cref="P:Monopoly.domein.velden.Bedrijf.Koopprijs"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.velden.Moles.MBedrijf.KoopprijsSetInt32">
            <summary>Sets the mole of <see cref="P:Monopoly.domein.velden.Bedrijf.Koopprijs"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.velden.Moles.MBedrijf.VerkoopSpeler">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.velden.Bedrijf.Verkoop(Monopoly.domein.Speler)"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.velden.Moles.MBedrijf._signalHuurUpdateb__0IHuurObserver">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.velden.Bedrijf.&lt;signalHuurUpdate&gt;b__0(Monopoly.domein.velden.IHuurObserver)"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.velden.Moles.MBedrijf.addObserverIHuurObserver">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.velden.Bedrijf.addObserver(Monopoly.domein.velden.IHuurObserver)"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.velden.Moles.MBedrijf.signalHuurUpdate">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.velden.Bedrijf.signalHuurUpdate"/>
            </summary>
        </member>
        <member name="T:Monopoly.domein.velden.Moles.MBedrijf.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="P:Monopoly.domein.velden.Moles.MBedrijf.AllInstances.BepaalGebeurtenis">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.velden.Bedrijf.BepaalGebeurtenis"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.velden.Moles.MBedrijf.AllInstances.BepaalHuurprijs">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.velden.Bedrijf.BepaalHuurprijs"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.velden.Moles.MBedrijf.AllInstances.EigenaarGet">
            <summary>Sets the mole of <see cref="P:Monopoly.domein.velden.Bedrijf.Eigenaar"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.velden.Moles.MBedrijf.AllInstances.EigenaarSetSpeler">
            <summary>Sets the mole of <see cref="P:Monopoly.domein.velden.Bedrijf.Eigenaar"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.velden.Moles.MBedrijf.AllInstances.HuurprijsBepalerGet">
            <summary>Sets the mole of <see cref="P:Monopoly.domein.velden.Bedrijf.HuurprijsBepaler"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.velden.Moles.MBedrijf.AllInstances.HuurprijsBepalerSetIHuurprijsBepaler">
            <summary>Sets the mole of <see cref="P:Monopoly.domein.velden.Bedrijf.HuurprijsBepaler"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.velden.Moles.MBedrijf.AllInstances.HypotheekGet">
            <summary>Sets the mole of <see cref="P:Monopoly.domein.velden.Bedrijf.Hypotheek"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.velden.Moles.MBedrijf.AllInstances.HypotheekSetHypotheek">
            <summary>Sets the mole of <see cref="P:Monopoly.domein.velden.Bedrijf.Hypotheek"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.velden.Moles.MBedrijf.AllInstances.KoopprijsGet">
            <summary>Sets the mole of <see cref="P:Monopoly.domein.velden.Bedrijf.Koopprijs"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.velden.Moles.MBedrijf.AllInstances.KoopprijsSetInt32">
            <summary>Sets the mole of <see cref="P:Monopoly.domein.velden.Bedrijf.Koopprijs"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.velden.Moles.MBedrijf.AllInstances.VerkoopSpeler">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.velden.Bedrijf.Verkoop(Monopoly.domein.Speler)"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.velden.Moles.MBedrijf.AllInstances._signalHuurUpdateb__0IHuurObserver">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.velden.Bedrijf.&lt;signalHuurUpdate&gt;b__0(Monopoly.domein.velden.IHuurObserver)"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.velden.Moles.MBedrijf.AllInstances.addObserverIHuurObserver">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.velden.Bedrijf.addObserver(Monopoly.domein.velden.IHuurObserver)"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.velden.Moles.MBedrijf.AllInstances.signalHuurUpdate">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.velden.Bedrijf.signalHuurUpdate"/>
            </summary>
        </member>
        <member name="T:Monopoly.domein.Moles.MBezittingen">
            <summary>Mole type of <see cref="T:Monopoly.domein.Bezittingen"/>
            .</summary>
        </member>
        <member name="M:Monopoly.domein.Moles.MBezittingen.#ctor">
            <summary>Initializes a new mole</summary>
        </member>
        <member name="M:Monopoly.domein.Moles.MBezittingen.#ctor(Monopoly.domein.Bezittingen)">
            <summary>Initializes a new mole for the given instance</summary>
        </member>
        <member name="M:Monopoly.domein.Moles.MBezittingen.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:Monopoly.domein.Moles.MBezittingen.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MBezittingen.AantalHuizen">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.Bezittingen.AantalHuizen"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MBezittingen.AantalHypotheekvelden">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.Bezittingen.AantalHypotheekvelden"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MBezittingen.AantalVeldenMetHypotheek">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.Bezittingen.AantalVeldenMetHypotheek"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MBezittingen.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MBezittingen.BetaalInt32">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.Bezittingen.Betaal(System.Int32)"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MBezittingen.BetaalInt32Speler">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.Bezittingen.Betaal(System.Int32,Monopoly.domein.Speler)"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MBezittingen.Constructor">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.Bezittingen.#ctor"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MBezittingen.GeefBebouwbareStraten">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.Bezittingen.GeefBebouwbareStraten"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MBezittingen.GeefBebouwdeStraten">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.Bezittingen.GeefBebouwdeStraten"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MBezittingen.GeefStedenMetStraatInBezit">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.Bezittingen.GeefStedenMetStraatInBezit"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MBezittingen.HeeftBebouwdeStraten">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.Bezittingen.HeeftBebouwdeStraten"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MBezittingen.HypotheekveldenGet">
            <summary>Sets the mole of <see cref="P:Monopoly.domein.Bezittingen.Hypotheekvelden"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MBezittingen.HypotheekveldenSetListOfIHypotheekveld">
            <summary>Sets the mole of <see cref="P:Monopoly.domein.Bezittingen.Hypotheekvelden"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MBezittingen.IHypotheek2StraatIHypotheekveld">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.Bezittingen.IHypotheek2Straat(Monopoly.domein.velden.IHypotheekveld)"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MBezittingen.KasgeldGet">
            <summary>Sets the mole of <see cref="P:Monopoly.domein.Bezittingen.Kasgeld"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MBezittingen.KasgeldSetInt32">
            <summary>Sets the mole of <see cref="P:Monopoly.domein.Bezittingen.Kasgeld"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MBezittingen.OntvangGeldInt32">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.Bezittingen.OntvangGeld(System.Int32)"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MBezittingen.Straten">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.Bezittingen.Straten"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MBezittingen._AantalVeldenMetHypotheekb__4IHypotheekveld">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.Bezittingen.&lt;AantalVeldenMetHypotheek&gt;b__4(Monopoly.domein.velden.IHypotheekveld)"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MBezittingen._GeefBebouwbareStratenb__2Straat">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.Bezittingen.&lt;GeefBebouwbareStraten&gt;b__2(Monopoly.domein.velden.Straat)"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MBezittingen._GeefBebouwdeStratenb__9Straat">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.Bezittingen.&lt;GeefBebouwdeStraten&gt;b__9(Monopoly.domein.velden.Straat)"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MBezittingen._Stratenb__0IHypotheekveld">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.Bezittingen.&lt;Straten&gt;b__0(Monopoly.domein.velden.IHypotheekveld)"/>
            </summary>
        </member>
        <member name="T:Monopoly.domein.Moles.MBezittingen.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MBezittingen.AllInstances.AantalHuizen">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.Bezittingen.AantalHuizen"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MBezittingen.AllInstances.AantalHypotheekvelden">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.Bezittingen.AantalHypotheekvelden"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MBezittingen.AllInstances.AantalVeldenMetHypotheek">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.Bezittingen.AantalVeldenMetHypotheek"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MBezittingen.AllInstances.BetaalInt32">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.Bezittingen.Betaal(System.Int32)"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MBezittingen.AllInstances.BetaalInt32Speler">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.Bezittingen.Betaal(System.Int32,Monopoly.domein.Speler)"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MBezittingen.AllInstances.GeefBebouwbareStraten">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.Bezittingen.GeefBebouwbareStraten"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MBezittingen.AllInstances.GeefBebouwdeStraten">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.Bezittingen.GeefBebouwdeStraten"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MBezittingen.AllInstances.GeefStedenMetStraatInBezit">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.Bezittingen.GeefStedenMetStraatInBezit"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MBezittingen.AllInstances.HeeftBebouwdeStraten">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.Bezittingen.HeeftBebouwdeStraten"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MBezittingen.AllInstances.HypotheekveldenGet">
            <summary>Sets the mole of <see cref="P:Monopoly.domein.Bezittingen.Hypotheekvelden"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MBezittingen.AllInstances.HypotheekveldenSetListOfIHypotheekveld">
            <summary>Sets the mole of <see cref="P:Monopoly.domein.Bezittingen.Hypotheekvelden"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MBezittingen.AllInstances.KasgeldGet">
            <summary>Sets the mole of <see cref="P:Monopoly.domein.Bezittingen.Kasgeld"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MBezittingen.AllInstances.KasgeldSetInt32">
            <summary>Sets the mole of <see cref="P:Monopoly.domein.Bezittingen.Kasgeld"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MBezittingen.AllInstances.OntvangGeldInt32">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.Bezittingen.OntvangGeld(System.Int32)"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MBezittingen.AllInstances.Straten">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.Bezittingen.Straten"/>
            </summary>
        </member>
        <member name="T:Monopoly.AI.Moles.MDefaultDecider">
            <summary>Mole type of <see cref="T:Monopoly.AI.DefaultDecider"/>
            .</summary>
        </member>
        <member name="M:Monopoly.AI.Moles.MDefaultDecider.#ctor">
            <summary>Initializes a new mole</summary>
        </member>
        <member name="M:Monopoly.AI.Moles.MDefaultDecider.#ctor(Monopoly.AI.DefaultDecider)">
            <summary>Initializes a new mole for the given instance</summary>
        </member>
        <member name="M:Monopoly.AI.Moles.MDefaultDecider.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:Monopoly.AI.Moles.MDefaultDecider.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:Monopoly.AI.Moles.MDefaultDecider.Bind(Monopoly.AI.IAIDecider)">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="P:Monopoly.AI.Moles.MDefaultDecider.AddDecisionStringIDecision">
            <summary>Sets the mole of <see cref="M:Monopoly.AI.DefaultDecider.AddDecision(System.String,Monopoly.AI.IDecision)"/>
            </summary>
        </member>
        <member name="P:Monopoly.AI.Moles.MDefaultDecider.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Monopoly.AI.Moles.MDefaultDecider.Constructor">
            <summary>Sets the mole of <see cref="M:Monopoly.AI.DefaultDecider.#ctor"/>
            </summary>
        </member>
        <member name="P:Monopoly.AI.Moles.MDefaultDecider.DecideMonopolyspel">
            <summary>Sets the mole of <see cref="M:Monopoly.AI.DefaultDecider.Decide(Monopoly.domein.Monopolyspel)"/>
            </summary>
        </member>
        <member name="P:Monopoly.AI.Moles.MDefaultDecider.DecideSpelerString">
            <summary>Sets the mole of <see cref="M:Monopoly.AI.DefaultDecider.Decide(Monopoly.domein.Speler,System.String)"/>
            </summary>
        </member>
        <member name="P:Monopoly.AI.Moles.MDefaultDecider.DecisionsGet">
            <summary>Sets the mole of <see cref="P:Monopoly.AI.DefaultDecider.Decisions"/>
            </summary>
        </member>
        <member name="P:Monopoly.AI.Moles.MDefaultDecider.DecisionsSetDictionaryOfStringIDecision">
            <summary>Sets the mole of <see cref="P:Monopoly.AI.DefaultDecider.Decisions"/>
            </summary>
        </member>
        <member name="P:Monopoly.AI.Moles.MDefaultDecider.DefaultDecisionGet">
            <summary>Sets the mole of <see cref="P:Monopoly.AI.DefaultDecider.DefaultDecision"/>
            </summary>
        </member>
        <member name="P:Monopoly.AI.Moles.MDefaultDecider.DefaultDecisionSetIDecision">
            <summary>Sets the mole of <see cref="P:Monopoly.AI.DefaultDecider.DefaultDecision"/>
            </summary>
        </member>
        <member name="P:Monopoly.AI.Moles.MDefaultDecider.GetDecisionString">
            <summary>Sets the mole of <see cref="M:Monopoly.AI.DefaultDecider.GetDecision(System.String)"/>
            </summary>
        </member>
        <member name="P:Monopoly.AI.Moles.MDefaultDecider.IsUitvoerbaarSpelerString">
            <summary>Sets the mole of <see cref="M:Monopoly.AI.DefaultDecider.IsUitvoerbaar(Monopoly.domein.Speler,System.String)"/>
            </summary>
        </member>
        <member name="T:Monopoly.AI.Moles.MDefaultDecider.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="P:Monopoly.AI.Moles.MDefaultDecider.AllInstances.AddDecisionStringIDecision">
            <summary>Sets the mole of <see cref="M:Monopoly.AI.DefaultDecider.AddDecision(System.String,Monopoly.AI.IDecision)"/>
            </summary>
        </member>
        <member name="P:Monopoly.AI.Moles.MDefaultDecider.AllInstances.DecideMonopolyspel">
            <summary>Sets the mole of <see cref="M:Monopoly.AI.DefaultDecider.Decide(Monopoly.domein.Monopolyspel)"/>
            </summary>
        </member>
        <member name="P:Monopoly.AI.Moles.MDefaultDecider.AllInstances.DecideSpelerString">
            <summary>Sets the mole of <see cref="M:Monopoly.AI.DefaultDecider.Decide(Monopoly.domein.Speler,System.String)"/>
            </summary>
        </member>
        <member name="P:Monopoly.AI.Moles.MDefaultDecider.AllInstances.DecisionsGet">
            <summary>Sets the mole of <see cref="P:Monopoly.AI.DefaultDecider.Decisions"/>
            </summary>
        </member>
        <member name="P:Monopoly.AI.Moles.MDefaultDecider.AllInstances.DecisionsSetDictionaryOfStringIDecision">
            <summary>Sets the mole of <see cref="P:Monopoly.AI.DefaultDecider.Decisions"/>
            </summary>
        </member>
        <member name="P:Monopoly.AI.Moles.MDefaultDecider.AllInstances.DefaultDecisionGet">
            <summary>Sets the mole of <see cref="P:Monopoly.AI.DefaultDecider.DefaultDecision"/>
            </summary>
        </member>
        <member name="P:Monopoly.AI.Moles.MDefaultDecider.AllInstances.DefaultDecisionSetIDecision">
            <summary>Sets the mole of <see cref="P:Monopoly.AI.DefaultDecider.DefaultDecision"/>
            </summary>
        </member>
        <member name="P:Monopoly.AI.Moles.MDefaultDecider.AllInstances.GetDecisionString">
            <summary>Sets the mole of <see cref="M:Monopoly.AI.DefaultDecider.GetDecision(System.String)"/>
            </summary>
        </member>
        <member name="P:Monopoly.AI.Moles.MDefaultDecider.AllInstances.IsUitvoerbaarSpelerString">
            <summary>Sets the mole of <see cref="M:Monopoly.AI.DefaultDecider.IsUitvoerbaar(Monopoly.domein.Speler,System.String)"/>
            </summary>
        </member>
        <member name="T:Monopoly.AI.Moles.MDefaultDecision">
            <summary>Mole type of <see cref="T:Monopoly.AI.DefaultDecision"/>
            .</summary>
        </member>
        <member name="M:Monopoly.AI.Moles.MDefaultDecision.#ctor">
            <summary>Initializes a new mole</summary>
        </member>
        <member name="M:Monopoly.AI.Moles.MDefaultDecision.#ctor(Monopoly.AI.DefaultDecision)">
            <summary>Initializes a new mole for the given instance</summary>
        </member>
        <member name="M:Monopoly.AI.Moles.MDefaultDecision.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:Monopoly.AI.Moles.MDefaultDecision.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:Monopoly.AI.Moles.MDefaultDecision.Bind(Monopoly.AI.IDecision)">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="P:Monopoly.AI.Moles.MDefaultDecision.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Monopoly.AI.Moles.MDefaultDecision.Constructor">
            <summary>Sets the mole of <see cref="M:Monopoly.AI.DefaultDecision.#ctor"/>
            </summary>
        </member>
        <member name="P:Monopoly.AI.Moles.MDefaultDecision.decideSpelerIGebeurtenis">
            <summary>Sets the mole of <see cref="M:Monopoly.AI.DefaultDecision.decide(Monopoly.domein.Speler,Monopoly.domein.IGebeurtenis)"/>
            </summary>
        </member>
        <member name="T:Monopoly.AI.Moles.MDefaultDecision.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="P:Monopoly.AI.Moles.MDefaultDecision.AllInstances.decideSpelerIGebeurtenis">
            <summary>Sets the mole of <see cref="M:Monopoly.AI.DefaultDecision.decide(Monopoly.domein.Speler,Monopoly.domein.IGebeurtenis)"/>
            </summary>
        </member>
        <member name="T:Monopoly.AI.RisicoNemendeGrondAankoper.Moles.MDoeBodOpAndermansStraatDecision">
            <summary>Mole type of <see cref="T:Monopoly.AI.RisicoNemendeGrondAankoper.DoeBodOpAndermansStraatDecision"/>
            .</summary>
        </member>
        <member name="M:Monopoly.AI.RisicoNemendeGrondAankoper.Moles.MDoeBodOpAndermansStraatDecision.#ctor">
            <summary>Initializes a new mole</summary>
        </member>
        <member name="M:Monopoly.AI.RisicoNemendeGrondAankoper.Moles.MDoeBodOpAndermansStraatDecision.#ctor(Monopoly.AI.RisicoNemendeGrondAankoper.DoeBodOpAndermansStraatDecision)">
            <summary>Initializes a new mole for the given instance</summary>
        </member>
        <member name="M:Monopoly.AI.RisicoNemendeGrondAankoper.Moles.MDoeBodOpAndermansStraatDecision.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:Monopoly.AI.RisicoNemendeGrondAankoper.Moles.MDoeBodOpAndermansStraatDecision.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:Monopoly.AI.RisicoNemendeGrondAankoper.Moles.MDoeBodOpAndermansStraatDecision.Bind(Monopoly.AI.IDecision)">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="P:Monopoly.AI.RisicoNemendeGrondAankoper.Moles.MDoeBodOpAndermansStraatDecision.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Monopoly.AI.RisicoNemendeGrondAankoper.Moles.MDoeBodOpAndermansStraatDecision.Constructor">
            <summary>Sets the mole of <see cref="M:Monopoly.AI.RisicoNemendeGrondAankoper.DoeBodOpAndermansStraatDecision.#ctor"/>
            </summary>
        </member>
        <member name="P:Monopoly.AI.RisicoNemendeGrondAankoper.Moles.MDoeBodOpAndermansStraatDecision.decideSpelerIGebeurtenis">
            <summary>Sets the mole of <see cref="M:Monopoly.AI.RisicoNemendeGrondAankoper.DoeBodOpAndermansStraatDecision.decide(Monopoly.domein.Speler,Monopoly.domein.IGebeurtenis)"/>
            </summary>
        </member>
        <member name="T:Monopoly.AI.RisicoNemendeGrondAankoper.Moles.MDoeBodOpAndermansStraatDecision.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="P:Monopoly.AI.RisicoNemendeGrondAankoper.Moles.MDoeBodOpAndermansStraatDecision.AllInstances.decideSpelerIGebeurtenis">
            <summary>Sets the mole of <see cref="M:Monopoly.AI.RisicoNemendeGrondAankoper.DoeBodOpAndermansStraatDecision.decide(Monopoly.domein.Speler,Monopoly.domein.IGebeurtenis)"/>
            </summary>
        </member>
        <member name="T:Monopoly.AI.VoorzichtigeHuisjesmelker.Moles.MDoeBodOpAndermansStraatDecision01">
            <summary>Mole type of <see cref="T:Monopoly.AI.VoorzichtigeHuisjesmelker.DoeBodOpAndermansStraatDecision"/>
            .</summary>
        </member>
        <member name="M:Monopoly.AI.VoorzichtigeHuisjesmelker.Moles.MDoeBodOpAndermansStraatDecision01.#ctor">
            <summary>Initializes a new mole</summary>
        </member>
        <member name="M:Monopoly.AI.VoorzichtigeHuisjesmelker.Moles.MDoeBodOpAndermansStraatDecision01.#ctor(Monopoly.AI.VoorzichtigeHuisjesmelker.DoeBodOpAndermansStraatDecision)">
            <summary>Initializes a new mole for the given instance</summary>
        </member>
        <member name="M:Monopoly.AI.VoorzichtigeHuisjesmelker.Moles.MDoeBodOpAndermansStraatDecision01.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:Monopoly.AI.VoorzichtigeHuisjesmelker.Moles.MDoeBodOpAndermansStraatDecision01.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:Monopoly.AI.VoorzichtigeHuisjesmelker.Moles.MDoeBodOpAndermansStraatDecision01.Bind(Monopoly.AI.IDecision)">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="P:Monopoly.AI.VoorzichtigeHuisjesmelker.Moles.MDoeBodOpAndermansStraatDecision01.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Monopoly.AI.VoorzichtigeHuisjesmelker.Moles.MDoeBodOpAndermansStraatDecision01.Constructor">
            <summary>Sets the mole of <see cref="M:Monopoly.AI.VoorzichtigeHuisjesmelker.DoeBodOpAndermansStraatDecision.#ctor"/>
            </summary>
        </member>
        <member name="P:Monopoly.AI.VoorzichtigeHuisjesmelker.Moles.MDoeBodOpAndermansStraatDecision01.decideSpelerIGebeurtenis">
            <summary>Sets the mole of <see cref="M:Monopoly.AI.VoorzichtigeHuisjesmelker.DoeBodOpAndermansStraatDecision.decide(Monopoly.domein.Speler,Monopoly.domein.IGebeurtenis)"/>
            </summary>
        </member>
        <member name="T:Monopoly.AI.VoorzichtigeHuisjesmelker.Moles.MDoeBodOpAndermansStraatDecision01.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="P:Monopoly.AI.VoorzichtigeHuisjesmelker.Moles.MDoeBodOpAndermansStraatDecision01.AllInstances.decideSpelerIGebeurtenis">
            <summary>Sets the mole of <see cref="M:Monopoly.AI.VoorzichtigeHuisjesmelker.DoeBodOpAndermansStraatDecision.decide(Monopoly.domein.Speler,Monopoly.domein.IGebeurtenis)"/>
            </summary>
        </member>
        <member name="T:Monopoly.domein.gebeurtenissen.Moles.MDoeBodOpAndersmansStraat">
            <summary>Mole type of <see cref="T:Monopoly.domein.gebeurtenissen.DoeBodOpAndersmansStraat"/>
            .</summary>
        </member>
        <member name="M:Monopoly.domein.gebeurtenissen.Moles.MDoeBodOpAndersmansStraat.#ctor">
            <summary>Initializes a new mole</summary>
        </member>
        <member name="M:Monopoly.domein.gebeurtenissen.Moles.MDoeBodOpAndersmansStraat.#ctor(Monopoly.domein.gebeurtenissen.DoeBodOpAndersmansStraat)">
            <summary>Initializes a new mole for the given instance</summary>
        </member>
        <member name="M:Monopoly.domein.gebeurtenissen.Moles.MDoeBodOpAndersmansStraat.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:Monopoly.domein.gebeurtenissen.Moles.MDoeBodOpAndersmansStraat.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:Monopoly.domein.gebeurtenissen.Moles.MDoeBodOpAndersmansStraat.Bind(Monopoly.domein.IGebeurtenis)">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="P:Monopoly.domein.gebeurtenissen.Moles.MDoeBodOpAndersmansStraat.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Monopoly.domein.gebeurtenissen.Moles.MDoeBodOpAndersmansStraat.Constructor">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.gebeurtenissen.DoeBodOpAndersmansStraat.#ctor"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.gebeurtenissen.Moles.MDoeBodOpAndersmansStraat.IsUitvoerbaarSpeler">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.gebeurtenissen.DoeBodOpAndersmansStraat.IsUitvoerbaar(Monopoly.domein.Speler)"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.gebeurtenissen.Moles.MDoeBodOpAndersmansStraat.IsVerplicht">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.gebeurtenissen.DoeBodOpAndersmansStraat.IsVerplicht"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.gebeurtenissen.Moles.MDoeBodOpAndersmansStraat.StedenOmTeBiedenSpeler">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.gebeurtenissen.DoeBodOpAndersmansStraat.StedenOmTeBieden(Monopoly.domein.Speler)"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.gebeurtenissen.Moles.MDoeBodOpAndersmansStraat.VoeruitSpeler">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.gebeurtenissen.DoeBodOpAndersmansStraat.Voeruit(Monopoly.domein.Speler)"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.gebeurtenissen.Moles.MDoeBodOpAndersmansStraat._StedenOmTeBiedenb__3Stad">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.gebeurtenissen.DoeBodOpAndersmansStraat.&lt;StedenOmTeBieden&gt;b__3(Monopoly.domein.Stad)"/>
            </summary>
        </member>
        <member name="T:Monopoly.domein.gebeurtenissen.Moles.MDoeBodOpAndersmansStraat.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="P:Monopoly.domein.gebeurtenissen.Moles.MDoeBodOpAndersmansStraat.AllInstances.IsUitvoerbaarSpeler">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.gebeurtenissen.DoeBodOpAndersmansStraat.IsUitvoerbaar(Monopoly.domein.Speler)"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.gebeurtenissen.Moles.MDoeBodOpAndersmansStraat.AllInstances.IsVerplicht">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.gebeurtenissen.DoeBodOpAndersmansStraat.IsVerplicht"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.gebeurtenissen.Moles.MDoeBodOpAndersmansStraat.AllInstances.StedenOmTeBiedenSpeler">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.gebeurtenissen.DoeBodOpAndersmansStraat.StedenOmTeBieden(Monopoly.domein.Speler)"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.gebeurtenissen.Moles.MDoeBodOpAndersmansStraat.AllInstances.VoeruitSpeler">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.gebeurtenissen.DoeBodOpAndersmansStraat.Voeruit(Monopoly.domein.Speler)"/>
            </summary>
        </member>
        <member name="T:Monopoly.domein.gebeurtenissen.Moles.MEindeBeurt">
            <summary>Mole type of <see cref="T:Monopoly.domein.gebeurtenissen.EindeBeurt"/>
            .</summary>
        </member>
        <member name="M:Monopoly.domein.gebeurtenissen.Moles.MEindeBeurt.#ctor">
            <summary>Initializes a new mole</summary>
        </member>
        <member name="M:Monopoly.domein.gebeurtenissen.Moles.MEindeBeurt.#ctor(Monopoly.domein.gebeurtenissen.EindeBeurt)">
            <summary>Initializes a new mole for the given instance</summary>
        </member>
        <member name="M:Monopoly.domein.gebeurtenissen.Moles.MEindeBeurt.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:Monopoly.domein.gebeurtenissen.Moles.MEindeBeurt.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:Monopoly.domein.gebeurtenissen.Moles.MEindeBeurt.Bind(Monopoly.domein.IGebeurtenis)">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="P:Monopoly.domein.gebeurtenissen.Moles.MEindeBeurt.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Monopoly.domein.gebeurtenissen.Moles.MEindeBeurt.Constructor">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.gebeurtenissen.EindeBeurt.#ctor"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.gebeurtenissen.Moles.MEindeBeurt.IsUitvoerbaarSpeler">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.gebeurtenissen.EindeBeurt.IsUitvoerbaar(Monopoly.domein.Speler)"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.gebeurtenissen.Moles.MEindeBeurt.IsVerplicht">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.gebeurtenissen.EindeBeurt.IsVerplicht"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.gebeurtenissen.Moles.MEindeBeurt.VoeruitSpeler">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.gebeurtenissen.EindeBeurt.Voeruit(Monopoly.domein.Speler)"/>
            </summary>
        </member>
        <member name="T:Monopoly.domein.gebeurtenissen.Moles.MEindeBeurt.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="P:Monopoly.domein.gebeurtenissen.Moles.MEindeBeurt.AllInstances.IsUitvoerbaarSpeler">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.gebeurtenissen.EindeBeurt.IsUitvoerbaar(Monopoly.domein.Speler)"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.gebeurtenissen.Moles.MEindeBeurt.AllInstances.IsVerplicht">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.gebeurtenissen.EindeBeurt.IsVerplicht"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.gebeurtenissen.Moles.MEindeBeurt.AllInstances.VoeruitSpeler">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.gebeurtenissen.EindeBeurt.Voeruit(Monopoly.domein.Speler)"/>
            </summary>
        </member>
        <member name="T:Monopoly.domein.gebeurtenissen.Moles.MGaDirectNaarDeGevangenis">
            <summary>Mole type of <see cref="T:Monopoly.domein.gebeurtenissen.GaDirectNaarDeGevangenis"/>
            .</summary>
        </member>
        <member name="M:Monopoly.domein.gebeurtenissen.Moles.MGaDirectNaarDeGevangenis.#ctor">
            <summary>Initializes a new mole</summary>
        </member>
        <member name="M:Monopoly.domein.gebeurtenissen.Moles.MGaDirectNaarDeGevangenis.#ctor(Monopoly.domein.gebeurtenissen.GaDirectNaarDeGevangenis)">
            <summary>Initializes a new mole for the given instance</summary>
        </member>
        <member name="M:Monopoly.domein.gebeurtenissen.Moles.MGaDirectNaarDeGevangenis.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:Monopoly.domein.gebeurtenissen.Moles.MGaDirectNaarDeGevangenis.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:Monopoly.domein.gebeurtenissen.Moles.MGaDirectNaarDeGevangenis.Bind(Monopoly.domein.IGebeurtenis)">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="P:Monopoly.domein.gebeurtenissen.Moles.MGaDirectNaarDeGevangenis.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Monopoly.domein.gebeurtenissen.Moles.MGaDirectNaarDeGevangenis.Constructor">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.gebeurtenissen.GaDirectNaarDeGevangenis.#ctor"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.gebeurtenissen.Moles.MGaDirectNaarDeGevangenis.IsUitvoerbaarSpeler">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.gebeurtenissen.GaDirectNaarDeGevangenis.IsUitvoerbaar(Monopoly.domein.Speler)"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.gebeurtenissen.Moles.MGaDirectNaarDeGevangenis.IsVerplicht">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.gebeurtenissen.GaDirectNaarDeGevangenis.IsVerplicht"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.gebeurtenissen.Moles.MGaDirectNaarDeGevangenis.VoeruitSpeler">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.gebeurtenissen.GaDirectNaarDeGevangenis.Voeruit(Monopoly.domein.Speler)"/>
            </summary>
        </member>
        <member name="T:Monopoly.domein.gebeurtenissen.Moles.MGaDirectNaarDeGevangenis.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="P:Monopoly.domein.gebeurtenissen.Moles.MGaDirectNaarDeGevangenis.AllInstances.IsUitvoerbaarSpeler">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.gebeurtenissen.GaDirectNaarDeGevangenis.IsUitvoerbaar(Monopoly.domein.Speler)"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.gebeurtenissen.Moles.MGaDirectNaarDeGevangenis.AllInstances.IsVerplicht">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.gebeurtenissen.GaDirectNaarDeGevangenis.IsVerplicht"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.gebeurtenissen.Moles.MGaDirectNaarDeGevangenis.AllInstances.VoeruitSpeler">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.gebeurtenissen.GaDirectNaarDeGevangenis.Voeruit(Monopoly.domein.Speler)"/>
            </summary>
        </member>
        <member name="T:Monopoly.domein.gebeurtenissen.Moles.MGebeurtenis">
            <summary>Mole type of <see cref="T:Monopoly.domein.gebeurtenissen.Gebeurtenis"/>
            .</summary>
        </member>
        <member name="M:Monopoly.domein.gebeurtenissen.Moles.MGebeurtenis.#ctor(Monopoly.domein.gebeurtenissen.Gebeurtenis)">
            <summary>Initializes a new mole for the given instance</summary>
        </member>
        <member name="M:Monopoly.domein.gebeurtenissen.Moles.MGebeurtenis.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:Monopoly.domein.gebeurtenissen.Moles.MGebeurtenis.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:Monopoly.domein.gebeurtenissen.Moles.MGebeurtenis.Bind(Monopoly.domein.IGebeurtenis)">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="P:Monopoly.domein.gebeurtenissen.Moles.MGebeurtenis.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Monopoly.domein.gebeurtenissen.Moles.MGebeurtenis.ConstructorString">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.gebeurtenissen.Gebeurtenis.#ctor(System.String)"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.gebeurtenissen.Moles.MGebeurtenis.EqualsObject">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.gebeurtenissen.Gebeurtenis.Equals(System.Object)"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.gebeurtenissen.Moles.MGebeurtenis.GetHashCode">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.gebeurtenissen.Gebeurtenis.GetHashCode"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.gebeurtenissen.Moles.MGebeurtenis.NaamGet">
            <summary>Sets the mole of <see cref="P:Monopoly.domein.gebeurtenissen.Gebeurtenis.Naam"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.gebeurtenissen.Moles.MGebeurtenis.NaamSetString">
            <summary>Sets the mole of <see cref="P:Monopoly.domein.gebeurtenissen.Gebeurtenis.Naam"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.gebeurtenissen.Moles.MGebeurtenis.SetResultGebeurtenislijstObjectArray">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.gebeurtenissen.Gebeurtenis.SetResult(Monopoly.domein.Gebeurtenislijst,System.Object[])"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.gebeurtenissen.Moles.MGebeurtenis.ToString">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.gebeurtenissen.Gebeurtenis.ToString"/>
            </summary>
        </member>
        <member name="T:Monopoly.domein.gebeurtenissen.Moles.MGebeurtenis.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="P:Monopoly.domein.gebeurtenissen.Moles.MGebeurtenis.AllInstances.EqualsObject">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.gebeurtenissen.Gebeurtenis.Equals(System.Object)"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.gebeurtenissen.Moles.MGebeurtenis.AllInstances.GetHashCode01">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.gebeurtenissen.Gebeurtenis.GetHashCode"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.gebeurtenissen.Moles.MGebeurtenis.AllInstances.NaamGet">
            <summary>Sets the mole of <see cref="P:Monopoly.domein.gebeurtenissen.Gebeurtenis.Naam"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.gebeurtenissen.Moles.MGebeurtenis.AllInstances.NaamSetString">
            <summary>Sets the mole of <see cref="P:Monopoly.domein.gebeurtenissen.Gebeurtenis.Naam"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.gebeurtenissen.Moles.MGebeurtenis.AllInstances.SetResultGebeurtenislijstObjectArray">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.gebeurtenissen.Gebeurtenis.SetResult(Monopoly.domein.Gebeurtenislijst,System.Object[])"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.gebeurtenissen.Moles.MGebeurtenis.AllInstances.ToString01">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.gebeurtenissen.Gebeurtenis.ToString"/>
            </summary>
        </member>
        <member name="T:Monopoly.domein.labels.Moles.MGebeurtenisMelding">
            <summary>Mole type of <see cref="T:Monopoly.domein.labels.GebeurtenisMelding"/>
            .</summary>
        </member>
        <member name="M:Monopoly.domein.labels.Moles.MGebeurtenisMelding.#ctor">
            <summary>Initializes a new mole</summary>
        </member>
        <member name="M:Monopoly.domein.labels.Moles.MGebeurtenisMelding.#ctor(Monopoly.domein.labels.GebeurtenisMelding)">
            <summary>Initializes a new mole for the given instance</summary>
        </member>
        <member name="M:Monopoly.domein.labels.Moles.MGebeurtenisMelding.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:Monopoly.domein.labels.Moles.MGebeurtenisMelding.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Monopoly.domein.labels.Moles.MGebeurtenisMelding.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Monopoly.domein.labels.Moles.MGebeurtenisMelding.Constructor">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.labels.GebeurtenisMelding.#ctor"/>
            </summary>
        </member>
        <member name="T:Monopoly.domein.labels.Moles.MGebeurtenisMelding.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="T:Monopoly.domein.gebeurtenissen.Moles.MGebeurtenisStapel">
            <summary>Mole type of <see cref="T:Monopoly.domein.gebeurtenissen.GebeurtenisStapel"/>
            .</summary>
        </member>
        <member name="M:Monopoly.domein.gebeurtenissen.Moles.MGebeurtenisStapel.#ctor">
            <summary>Initializes a new mole</summary>
        </member>
        <member name="M:Monopoly.domein.gebeurtenissen.Moles.MGebeurtenisStapel.#ctor(Monopoly.domein.gebeurtenissen.GebeurtenisStapel)">
            <summary>Initializes a new mole for the given instance</summary>
        </member>
        <member name="M:Monopoly.domein.gebeurtenissen.Moles.MGebeurtenisStapel.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:Monopoly.domein.gebeurtenissen.Moles.MGebeurtenisStapel.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:Monopoly.domein.gebeurtenissen.Moles.MGebeurtenisStapel.Bind(Monopoly.domein.IGebeurtenis)">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="P:Monopoly.domein.gebeurtenissen.Moles.MGebeurtenisStapel.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Monopoly.domein.gebeurtenissen.Moles.MGebeurtenisStapel.ConstructorListOfIGebeurtenisString">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.gebeurtenissen.GebeurtenisStapel.#ctor(System.Collections.Generic.List`1{Monopoly.domein.IGebeurtenis},System.String)"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.gebeurtenissen.Moles.MGebeurtenisStapel.IsUitvoerbaarSpeler">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.gebeurtenissen.GebeurtenisStapel.IsUitvoerbaar(Monopoly.domein.Speler)"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.gebeurtenissen.Moles.MGebeurtenisStapel.IsVerplicht">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.gebeurtenissen.GebeurtenisStapel.IsVerplicht"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.gebeurtenissen.Moles.MGebeurtenisStapel.VoeruitSpeler">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.gebeurtenissen.GebeurtenisStapel.Voeruit(Monopoly.domein.Speler)"/>
            </summary>
        </member>
        <member name="T:Monopoly.domein.gebeurtenissen.Moles.MGebeurtenisStapel.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="P:Monopoly.domein.gebeurtenissen.Moles.MGebeurtenisStapel.AllInstances.IsUitvoerbaarSpeler">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.gebeurtenissen.GebeurtenisStapel.IsUitvoerbaar(Monopoly.domein.Speler)"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.gebeurtenissen.Moles.MGebeurtenisStapel.AllInstances.IsVerplicht">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.gebeurtenissen.GebeurtenisStapel.IsVerplicht"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.gebeurtenissen.Moles.MGebeurtenisStapel.AllInstances.VoeruitSpeler">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.gebeurtenissen.GebeurtenisStapel.Voeruit(Monopoly.domein.Speler)"/>
            </summary>
        </member>
        <member name="T:Monopoly.domein.Moles.MGebeurtenislijst">
            <summary>Mole type of <see cref="T:Monopoly.domein.Gebeurtenislijst"/>
            .</summary>
        </member>
        <member name="M:Monopoly.domein.Moles.MGebeurtenislijst.#ctor">
            <summary>Initializes a new mole</summary>
        </member>
        <member name="M:Monopoly.domein.Moles.MGebeurtenislijst.#ctor(Monopoly.domein.Gebeurtenislijst)">
            <summary>Initializes a new mole for the given instance</summary>
        </member>
        <member name="M:Monopoly.domein.Moles.MGebeurtenislijst.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:Monopoly.domein.Moles.MGebeurtenislijst.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MGebeurtenislijst.AantalVerplichtUitTeVoerenGebeurtenissen">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.Gebeurtenislijst.AantalVerplichtUitTeVoerenGebeurtenissen"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MGebeurtenislijst.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MGebeurtenislijst.BevatGebeurtenisString">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.Gebeurtenislijst.BevatGebeurtenis(System.String)"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MGebeurtenislijst.BevatNogUitTeVoerenGebeurtenissen">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.Gebeurtenislijst.BevatNogUitTeVoerenGebeurtenissen"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MGebeurtenislijst.BevatNogUitTeVoerenVerplichteGebeurtenissen">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.Gebeurtenislijst.BevatNogUitTeVoerenVerplichteGebeurtenissen"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MGebeurtenislijst.BevatUitgevoerdeGebeurtenissen">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.Gebeurtenislijst.BevatUitgevoerdeGebeurtenissen"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MGebeurtenislijst.ConstructorSpeler">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.Gebeurtenislijst.#ctor(Monopoly.domein.Speler)"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MGebeurtenislijst.ConstructorSpelerListOfIGebeurtenis">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.Gebeurtenislijst.#ctor(Monopoly.domein.Speler,System.Collections.Generic.List`1{Monopoly.domein.IGebeurtenis})"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MGebeurtenislijst.GebeurtenissenGet">
            <summary>Sets the mole of <see cref="P:Monopoly.domein.Gebeurtenislijst.Gebeurtenissen"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MGebeurtenislijst.GebeurtenissenSetListOfIGebeurtenis">
            <summary>Sets the mole of <see cref="P:Monopoly.domein.Gebeurtenislijst.Gebeurtenissen"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MGebeurtenislijst.GeefGebeurtenisInt32">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.Gebeurtenislijst.GeefGebeurtenis(System.Int32)"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MGebeurtenislijst.GeefGebeurtenisString">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.Gebeurtenislijst.GeefGebeurtenis(System.String)"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MGebeurtenislijst.MaakLeeg">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.Gebeurtenislijst.MaakLeeg"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MGebeurtenislijst.ResultGet">
            <summary>Sets the mole of <see cref="P:Monopoly.domein.Gebeurtenislijst.Result"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MGebeurtenislijst.ResultSetListOfGebeurtenisresult">
            <summary>Sets the mole of <see cref="P:Monopoly.domein.Gebeurtenislijst.Result"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MGebeurtenislijst.SpelerGet">
            <summary>Sets the mole of <see cref="P:Monopoly.domein.Gebeurtenislijst.Speler"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MGebeurtenislijst.SpelerSetSpeler">
            <summary>Sets the mole of <see cref="P:Monopoly.domein.Gebeurtenislijst.Speler"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MGebeurtenislijst.UitTeVoerenGebeurtenissenToString">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.Gebeurtenislijst.UitTeVoerenGebeurtenissenToString"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MGebeurtenislijst.UitgevoerdeGebeurtenissenToString">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.Gebeurtenislijst.UitgevoerdeGebeurtenissenToString"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MGebeurtenislijst.VerwijderGebeurtenisIGebeurtenis">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.Gebeurtenislijst.VerwijderGebeurtenis(Monopoly.domein.IGebeurtenis)"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MGebeurtenislijst.VerwijderGebeurtenisResult">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.Gebeurtenislijst.VerwijderGebeurtenisResult"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MGebeurtenislijst.VerwijderNogUitTeVoerenGebeurtenissen">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.Gebeurtenislijst.VerwijderNogUitTeVoerenGebeurtenissen"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MGebeurtenislijst.VindEersteListOfString">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.Gebeurtenislijst.VindEerste(System.Collections.Generic.List`1{System.String})"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MGebeurtenislijst.VoegGebeurtenisToeIGebeurtenis">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.Gebeurtenislijst.VoegGebeurtenisToe(Monopoly.domein.IGebeurtenis)"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MGebeurtenislijst.VoegResultToeGebeurtenisresult">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.Gebeurtenislijst.VoegResultToe(Monopoly.domein.Gebeurtenisresult)"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MGebeurtenislijst._AantalVerplichtUitTeVoerenGebeurtenissenb__fIGebeurtenis">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.Gebeurtenislijst.&lt;AantalVerplichtUitTeVoerenGebeurtenissen&gt;b__f(Monopoly.domein.IGebeurtenis)"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MGebeurtenislijst._BevatNogUitTeVoerenVerplichteGebeurtenissenb__dIGebeurtenis">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.Gebeurtenislijst.&lt;BevatNogUitTeVoerenVerplichteGebeurtenissen&gt;b__d(Monopoly.domein.IGebeurtenis)"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MGebeurtenislijst._UitTeVoerenGebeurtenissenToStringb__3IGebeurtenis">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.Gebeurtenislijst.&lt;UitTeVoerenGebeurtenissenToString&gt;b__3(Monopoly.domein.IGebeurtenis)"/>
            </summary>
        </member>
        <member name="T:Monopoly.domein.Moles.MGebeurtenislijst.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MGebeurtenislijst.AllInstances.AantalVerplichtUitTeVoerenGebeurtenissen">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.Gebeurtenislijst.AantalVerplichtUitTeVoerenGebeurtenissen"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MGebeurtenislijst.AllInstances.BevatGebeurtenisString">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.Gebeurtenislijst.BevatGebeurtenis(System.String)"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MGebeurtenislijst.AllInstances.BevatNogUitTeVoerenGebeurtenissen">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.Gebeurtenislijst.BevatNogUitTeVoerenGebeurtenissen"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MGebeurtenislijst.AllInstances.BevatNogUitTeVoerenVerplichteGebeurtenissen">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.Gebeurtenislijst.BevatNogUitTeVoerenVerplichteGebeurtenissen"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MGebeurtenislijst.AllInstances.BevatUitgevoerdeGebeurtenissen">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.Gebeurtenislijst.BevatUitgevoerdeGebeurtenissen"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MGebeurtenislijst.AllInstances.GebeurtenissenGet">
            <summary>Sets the mole of <see cref="P:Monopoly.domein.Gebeurtenislijst.Gebeurtenissen"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MGebeurtenislijst.AllInstances.GebeurtenissenSetListOfIGebeurtenis">
            <summary>Sets the mole of <see cref="P:Monopoly.domein.Gebeurtenislijst.Gebeurtenissen"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MGebeurtenislijst.AllInstances.GeefGebeurtenisInt32">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.Gebeurtenislijst.GeefGebeurtenis(System.Int32)"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MGebeurtenislijst.AllInstances.GeefGebeurtenisString">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.Gebeurtenislijst.GeefGebeurtenis(System.String)"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MGebeurtenislijst.AllInstances.MaakLeeg">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.Gebeurtenislijst.MaakLeeg"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MGebeurtenislijst.AllInstances.ResultGet">
            <summary>Sets the mole of <see cref="P:Monopoly.domein.Gebeurtenislijst.Result"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MGebeurtenislijst.AllInstances.ResultSetListOfGebeurtenisresult">
            <summary>Sets the mole of <see cref="P:Monopoly.domein.Gebeurtenislijst.Result"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MGebeurtenislijst.AllInstances.SpelerGet">
            <summary>Sets the mole of <see cref="P:Monopoly.domein.Gebeurtenislijst.Speler"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MGebeurtenislijst.AllInstances.SpelerSetSpeler">
            <summary>Sets the mole of <see cref="P:Monopoly.domein.Gebeurtenislijst.Speler"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MGebeurtenislijst.AllInstances.UitTeVoerenGebeurtenissenToString">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.Gebeurtenislijst.UitTeVoerenGebeurtenissenToString"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MGebeurtenislijst.AllInstances.UitgevoerdeGebeurtenissenToString">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.Gebeurtenislijst.UitgevoerdeGebeurtenissenToString"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MGebeurtenislijst.AllInstances.VerwijderGebeurtenisIGebeurtenis">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.Gebeurtenislijst.VerwijderGebeurtenis(Monopoly.domein.IGebeurtenis)"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MGebeurtenislijst.AllInstances.VerwijderGebeurtenisResult">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.Gebeurtenislijst.VerwijderGebeurtenisResult"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MGebeurtenislijst.AllInstances.VerwijderNogUitTeVoerenGebeurtenissen">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.Gebeurtenislijst.VerwijderNogUitTeVoerenGebeurtenissen"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MGebeurtenislijst.AllInstances.VindEersteListOfString">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.Gebeurtenislijst.VindEerste(System.Collections.Generic.List`1{System.String})"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MGebeurtenislijst.AllInstances.VoegGebeurtenisToeIGebeurtenis">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.Gebeurtenislijst.VoegGebeurtenisToe(Monopoly.domein.IGebeurtenis)"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MGebeurtenislijst.AllInstances.VoegResultToeGebeurtenisresult">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.Gebeurtenislijst.VoegResultToe(Monopoly.domein.Gebeurtenisresult)"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MGebeurtenislijst.AllInstances._UitTeVoerenGebeurtenissenToStringb__3IGebeurtenis">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.Gebeurtenislijst.&lt;UitTeVoerenGebeurtenissenToString&gt;b__3(Monopoly.domein.IGebeurtenis)"/>
            </summary>
        </member>
        <member name="T:Monopoly.domein.gebeurtenissen.Moles.MGebeurtenisnamen">
            <summary>Mole type of <see cref="T:Monopoly.domein.gebeurtenissen.Gebeurtenisnamen"/>
            .</summary>
        </member>
        <member name="M:Monopoly.domein.gebeurtenissen.Moles.MGebeurtenisnamen.#ctor">
            <summary>Initializes a new mole</summary>
        </member>
        <member name="M:Monopoly.domein.gebeurtenissen.Moles.MGebeurtenisnamen.#ctor(Monopoly.domein.gebeurtenissen.Gebeurtenisnamen)">
            <summary>Initializes a new mole for the given instance</summary>
        </member>
        <member name="M:Monopoly.domein.gebeurtenissen.Moles.MGebeurtenisnamen.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:Monopoly.domein.gebeurtenissen.Moles.MGebeurtenisnamen.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Monopoly.domein.gebeurtenissen.Moles.MGebeurtenisnamen.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Monopoly.domein.gebeurtenissen.Moles.MGebeurtenisnamen.Constructor">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.gebeurtenissen.Gebeurtenisnamen.#ctor"/>
            </summary>
        </member>
        <member name="T:Monopoly.domein.gebeurtenissen.Moles.MGebeurtenisnamen.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="T:Monopoly.domein.Moles.MGebeurtenisresult">
            <summary>Mole type of <see cref="T:Monopoly.domein.Gebeurtenisresult"/>
            .</summary>
        </member>
        <member name="M:Monopoly.domein.Moles.MGebeurtenisresult.#ctor">
            <summary>Initializes a new mole</summary>
        </member>
        <member name="M:Monopoly.domein.Moles.MGebeurtenisresult.#ctor(Monopoly.domein.Gebeurtenisresult)">
            <summary>Initializes a new mole for the given instance</summary>
        </member>
        <member name="M:Monopoly.domein.Moles.MGebeurtenisresult.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:Monopoly.domein.Moles.MGebeurtenisresult.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MGebeurtenisresult.AppendResultObjectArray">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.Gebeurtenisresult.AppendResult(System.Object[])"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MGebeurtenisresult.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MGebeurtenisresult.BuildTekstObjectArray">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.Gebeurtenisresult.BuildTekst(System.Object[])"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MGebeurtenisresult.Constructor">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.Gebeurtenisresult.#ctor"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MGebeurtenisresult.CreateObjectArray">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.Gebeurtenisresult.Create(System.Object[])"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MGebeurtenisresult.CreateString">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.Gebeurtenisresult.Create(System.String)"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MGebeurtenisresult.IsUitgevoerdGet">
            <summary>Sets the mole of <see cref="P:Monopoly.domein.Gebeurtenisresult.IsUitgevoerd"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MGebeurtenisresult.IsUitgevoerdSetBoolean">
            <summary>Sets the mole of <see cref="P:Monopoly.domein.Gebeurtenisresult.IsUitgevoerd"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MGebeurtenisresult.ResultTekstGet">
            <summary>Sets the mole of <see cref="P:Monopoly.domein.Gebeurtenisresult.ResultTekst"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MGebeurtenisresult.ResultTekstSetString">
            <summary>Sets the mole of <see cref="P:Monopoly.domein.Gebeurtenisresult.ResultTekst"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MGebeurtenisresult.SetNietUitgevoerdObjectArray">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.Gebeurtenisresult.SetNietUitgevoerd(System.Object[])"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MGebeurtenisresult.SetUitgevoerdObjectArray">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.Gebeurtenisresult.SetUitgevoerd(System.Object[])"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MGebeurtenisresult.ToString">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.Gebeurtenisresult.ToString"/>
            </summary>
        </member>
        <member name="T:Monopoly.domein.Moles.MGebeurtenisresult.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MGebeurtenisresult.AllInstances.AppendResultObjectArray">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.Gebeurtenisresult.AppendResult(System.Object[])"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MGebeurtenisresult.AllInstances.BuildTekstObjectArray">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.Gebeurtenisresult.BuildTekst(System.Object[])"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MGebeurtenisresult.AllInstances.IsUitgevoerdGet">
            <summary>Sets the mole of <see cref="P:Monopoly.domein.Gebeurtenisresult.IsUitgevoerd"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MGebeurtenisresult.AllInstances.IsUitgevoerdSetBoolean">
            <summary>Sets the mole of <see cref="P:Monopoly.domein.Gebeurtenisresult.IsUitgevoerd"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MGebeurtenisresult.AllInstances.ResultTekstGet">
            <summary>Sets the mole of <see cref="P:Monopoly.domein.Gebeurtenisresult.ResultTekst"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MGebeurtenisresult.AllInstances.ResultTekstSetString">
            <summary>Sets the mole of <see cref="P:Monopoly.domein.Gebeurtenisresult.ResultTekst"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MGebeurtenisresult.AllInstances.SetNietUitgevoerdObjectArray">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.Gebeurtenisresult.SetNietUitgevoerd(System.Object[])"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MGebeurtenisresult.AllInstances.SetUitgevoerdObjectArray">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.Gebeurtenisresult.SetUitgevoerd(System.Object[])"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MGebeurtenisresult.AllInstances.ToString01">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.Gebeurtenisresult.ToString"/>
            </summary>
        </member>
        <member name="T:Monopoly.domein.velden.Moles.MGebeurtenisveld">
            <summary>Mole type of <see cref="T:Monopoly.domein.velden.Gebeurtenisveld"/>
            .</summary>
        </member>
        <member name="M:Monopoly.domein.velden.Moles.MGebeurtenisveld.#ctor">
            <summary>Initializes a new mole</summary>
        </member>
        <member name="M:Monopoly.domein.velden.Moles.MGebeurtenisveld.#ctor(Monopoly.domein.velden.Gebeurtenisveld)">
            <summary>Initializes a new mole for the given instance</summary>
        </member>
        <member name="M:Monopoly.domein.velden.Moles.MGebeurtenisveld.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:Monopoly.domein.velden.Moles.MGebeurtenisveld.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:Monopoly.domein.velden.Moles.MGebeurtenisveld.Bind(Monopoly.domein.velden.IHuurObservable)">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="M:Monopoly.domein.velden.Moles.MGebeurtenisveld.Bind(Monopoly.domein.velden.IVeld)">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="P:Monopoly.domein.velden.Moles.MGebeurtenisveld.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Monopoly.domein.velden.Moles.MGebeurtenisveld.BepaalGebeurtenis">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.velden.Gebeurtenisveld.BepaalGebeurtenis"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.velden.Moles.MGebeurtenisveld.ConstructorStringIGebeurtenis">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.velden.Gebeurtenisveld.#ctor(System.String,Monopoly.domein.IGebeurtenis)"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.velden.Moles.MGebeurtenisveld.GebeurtenisGet">
            <summary>Sets the mole of <see cref="P:Monopoly.domein.velden.Gebeurtenisveld.Gebeurtenis"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.velden.Moles.MGebeurtenisveld.GebeurtenisSetIGebeurtenis">
            <summary>Sets the mole of <see cref="P:Monopoly.domein.velden.Gebeurtenisveld.Gebeurtenis"/>
            </summary>
        </member>
        <member name="T:Monopoly.domein.velden.Moles.MGebeurtenisveld.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="P:Monopoly.domein.velden.Moles.MGebeurtenisveld.AllInstances.BepaalGebeurtenis">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.velden.Gebeurtenisveld.BepaalGebeurtenis"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.velden.Moles.MGebeurtenisveld.AllInstances.GebeurtenisGet">
            <summary>Sets the mole of <see cref="P:Monopoly.domein.velden.Gebeurtenisveld.Gebeurtenis"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.velden.Moles.MGebeurtenisveld.AllInstances.GebeurtenisSetIGebeurtenis">
            <summary>Sets the mole of <see cref="P:Monopoly.domein.velden.Gebeurtenisveld.Gebeurtenis"/>
            </summary>
        </member>
        <member name="T:Monopoly.builders.Moles.MGebeurtenisveldbuilder">
            <summary>Mole type of <see cref="T:Monopoly.builders.Gebeurtenisveldbuilder"/>
            .</summary>
        </member>
        <member name="M:Monopoly.builders.Moles.MGebeurtenisveldbuilder.#ctor">
            <summary>Initializes a new mole</summary>
        </member>
        <member name="M:Monopoly.builders.Moles.MGebeurtenisveldbuilder.#ctor(Monopoly.builders.Gebeurtenisveldbuilder)">
            <summary>Initializes a new mole for the given instance</summary>
        </member>
        <member name="M:Monopoly.builders.Moles.MGebeurtenisveldbuilder.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:Monopoly.builders.Moles.MGebeurtenisveldbuilder.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Monopoly.builders.Moles.MGebeurtenisveldbuilder.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Monopoly.builders.Moles.MGebeurtenisveldbuilder.BordGet">
            <summary>Sets the mole of <see cref="P:Monopoly.builders.Gebeurtenisveldbuilder.Bord"/>
            </summary>
        </member>
        <member name="P:Monopoly.builders.Moles.MGebeurtenisveldbuilder.BordSetSpelbord">
            <summary>Sets the mole of <see cref="P:Monopoly.builders.Gebeurtenisveldbuilder.Bord"/>
            </summary>
        </member>
        <member name="P:Monopoly.builders.Moles.MGebeurtenisveldbuilder.BuildAlgemeenFonds">
            <summary>Sets the mole of <see cref="M:Monopoly.builders.Gebeurtenisveldbuilder.BuildAlgemeenFonds"/>
            </summary>
        </member>
        <member name="P:Monopoly.builders.Moles.MGebeurtenisveldbuilder.BuildExtraInkomstenBelasting">
            <summary>Sets the mole of <see cref="M:Monopoly.builders.Gebeurtenisveldbuilder.BuildExtraInkomstenBelasting"/>
            </summary>
        </member>
        <member name="P:Monopoly.builders.Moles.MGebeurtenisveldbuilder.BuildGaNaarGevangenis">
            <summary>Sets the mole of <see cref="M:Monopoly.builders.Gebeurtenisveldbuilder.BuildGaNaarGevangenis"/>
            </summary>
        </member>
        <member name="P:Monopoly.builders.Moles.MGebeurtenisveldbuilder.BuildInkomstenBelasting">
            <summary>Sets the mole of <see cref="M:Monopoly.builders.Gebeurtenisveldbuilder.BuildInkomstenBelasting"/>
            </summary>
        </member>
        <member name="P:Monopoly.builders.Moles.MGebeurtenisveldbuilder.BuildKans">
            <summary>Sets the mole of <see cref="M:Monopoly.builders.Gebeurtenisveldbuilder.BuildKans"/>
            </summary>
        </member>
        <member name="P:Monopoly.builders.Moles.MGebeurtenisveldbuilder.BuildStart">
            <summary>Sets the mole of <see cref="M:Monopoly.builders.Gebeurtenisveldbuilder.BuildStart"/>
            </summary>
        </member>
        <member name="P:Monopoly.builders.Moles.MGebeurtenisveldbuilder.BuildVrijParkeren">
            <summary>Sets the mole of <see cref="M:Monopoly.builders.Gebeurtenisveldbuilder.BuildVrijParkeren"/>
            </summary>
        </member>
        <member name="P:Monopoly.builders.Moles.MGebeurtenisveldbuilder.ConstructorSpelbord">
            <summary>Sets the mole of <see cref="M:Monopoly.builders.Gebeurtenisveldbuilder.#ctor(Monopoly.domein.Spelbord)"/>
            </summary>
        </member>
        <member name="T:Monopoly.builders.Moles.MGebeurtenisveldbuilder.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="P:Monopoly.builders.Moles.MGebeurtenisveldbuilder.AllInstances.BordGet">
            <summary>Sets the mole of <see cref="P:Monopoly.builders.Gebeurtenisveldbuilder.Bord"/>
            </summary>
        </member>
        <member name="P:Monopoly.builders.Moles.MGebeurtenisveldbuilder.AllInstances.BordSetSpelbord">
            <summary>Sets the mole of <see cref="P:Monopoly.builders.Gebeurtenisveldbuilder.Bord"/>
            </summary>
        </member>
        <member name="P:Monopoly.builders.Moles.MGebeurtenisveldbuilder.AllInstances.BuildAlgemeenFonds">
            <summary>Sets the mole of <see cref="M:Monopoly.builders.Gebeurtenisveldbuilder.BuildAlgemeenFonds"/>
            </summary>
        </member>
        <member name="P:Monopoly.builders.Moles.MGebeurtenisveldbuilder.AllInstances.BuildExtraInkomstenBelasting">
            <summary>Sets the mole of <see cref="M:Monopoly.builders.Gebeurtenisveldbuilder.BuildExtraInkomstenBelasting"/>
            </summary>
        </member>
        <member name="P:Monopoly.builders.Moles.MGebeurtenisveldbuilder.AllInstances.BuildGaNaarGevangenis">
            <summary>Sets the mole of <see cref="M:Monopoly.builders.Gebeurtenisveldbuilder.BuildGaNaarGevangenis"/>
            </summary>
        </member>
        <member name="P:Monopoly.builders.Moles.MGebeurtenisveldbuilder.AllInstances.BuildInkomstenBelasting">
            <summary>Sets the mole of <see cref="M:Monopoly.builders.Gebeurtenisveldbuilder.BuildInkomstenBelasting"/>
            </summary>
        </member>
        <member name="P:Monopoly.builders.Moles.MGebeurtenisveldbuilder.AllInstances.BuildKans">
            <summary>Sets the mole of <see cref="M:Monopoly.builders.Gebeurtenisveldbuilder.BuildKans"/>
            </summary>
        </member>
        <member name="P:Monopoly.builders.Moles.MGebeurtenisveldbuilder.AllInstances.BuildStart">
            <summary>Sets the mole of <see cref="M:Monopoly.builders.Gebeurtenisveldbuilder.BuildStart"/>
            </summary>
        </member>
        <member name="P:Monopoly.builders.Moles.MGebeurtenisveldbuilder.AllInstances.BuildVrijParkeren">
            <summary>Sets the mole of <see cref="M:Monopoly.builders.Gebeurtenisveldbuilder.BuildVrijParkeren"/>
            </summary>
        </member>
        <member name="T:Monopoly.domein.velden.Moles.MGevangenis">
            <summary>Mole type of <see cref="T:Monopoly.domein.velden.Gevangenis"/>
            .</summary>
        </member>
        <member name="M:Monopoly.domein.velden.Moles.MGevangenis.#ctor">
            <summary>Initializes a new mole</summary>
        </member>
        <member name="M:Monopoly.domein.velden.Moles.MGevangenis.#ctor(Monopoly.domein.velden.Gevangenis)">
            <summary>Initializes a new mole for the given instance</summary>
        </member>
        <member name="M:Monopoly.domein.velden.Moles.MGevangenis.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:Monopoly.domein.velden.Moles.MGevangenis.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:Monopoly.domein.velden.Moles.MGevangenis.Bind(Monopoly.domein.velden.IHuurObservable)">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="M:Monopoly.domein.velden.Moles.MGevangenis.Bind(Monopoly.domein.velden.IVeld)">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="P:Monopoly.domein.velden.Moles.MGevangenis.AddWorpSpelerWorp">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.velden.Gevangenis.AddWorp(Monopoly.domein.Speler,Monopoly.domein.Worp)"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.velden.Moles.MGevangenis.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Monopoly.domein.velden.Moles.MGevangenis.BepaalGebeurtenis">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.velden.Gevangenis.BepaalGebeurtenis"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.velden.Moles.MGevangenis.Constructor">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.velden.Gevangenis.#ctor"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.velden.Moles.MGevangenis.GevangenenGet">
            <summary>Sets the mole of <see cref="P:Monopoly.domein.velden.Gevangenis.Gevangenen"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.velden.Moles.MGevangenis.GevangenenSetDictionaryOfSpelerLaatste3Worpen">
            <summary>Sets the mole of <see cref="P:Monopoly.domein.velden.Gevangenis.Gevangenen"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.velden.Moles.MGevangenis.HandelWorpAfVoorGevangeneSpelerWorp">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.velden.Gevangenis.HandelWorpAfVoorGevangene(Monopoly.domein.Speler,Monopoly.domein.Worp)"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.velden.Moles.MGevangenis.HandelWorpAfVoorVrijeSpelerSpelerWorp">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.velden.Gevangenis.HandelWorpAfVoorVrijeSpeler(Monopoly.domein.Speler,Monopoly.domein.Worp)"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.velden.Moles.MGevangenis.IsGevangeneSpeler">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.velden.Gevangenis.IsGevangene(Monopoly.domein.Speler)"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.velden.Moles.MGevangenis.LaatVrijSpelerGebeurtenisresult">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.velden.Gevangenis.LaatVrij(Monopoly.domein.Speler,Monopoly.domein.Gebeurtenisresult)"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.velden.Moles.MGevangenis.NieuweGevangeneSpelerGebeurtenisresult">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.velden.Gevangenis.NieuweGevangene(Monopoly.domein.Speler,Monopoly.domein.Gebeurtenisresult)"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.velden.Moles.MGevangenis.NotifyWorpSpelerWorp">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.velden.Gevangenis.NotifyWorp(Monopoly.domein.Speler,Monopoly.domein.Worp)"/>
            </summary>
        </member>
        <member name="T:Monopoly.domein.velden.Moles.MGevangenis.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="P:Monopoly.domein.velden.Moles.MGevangenis.AllInstances.AddWorpSpelerWorp">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.velden.Gevangenis.AddWorp(Monopoly.domein.Speler,Monopoly.domein.Worp)"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.velden.Moles.MGevangenis.AllInstances.BepaalGebeurtenis">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.velden.Gevangenis.BepaalGebeurtenis"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.velden.Moles.MGevangenis.AllInstances.GevangenenGet">
            <summary>Sets the mole of <see cref="P:Monopoly.domein.velden.Gevangenis.Gevangenen"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.velden.Moles.MGevangenis.AllInstances.GevangenenSetDictionaryOfSpelerLaatste3Worpen">
            <summary>Sets the mole of <see cref="P:Monopoly.domein.velden.Gevangenis.Gevangenen"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.velden.Moles.MGevangenis.AllInstances.HandelWorpAfVoorGevangeneSpelerWorp">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.velden.Gevangenis.HandelWorpAfVoorGevangene(Monopoly.domein.Speler,Monopoly.domein.Worp)"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.velden.Moles.MGevangenis.AllInstances.HandelWorpAfVoorVrijeSpelerSpelerWorp">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.velden.Gevangenis.HandelWorpAfVoorVrijeSpeler(Monopoly.domein.Speler,Monopoly.domein.Worp)"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.velden.Moles.MGevangenis.AllInstances.IsGevangeneSpeler">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.velden.Gevangenis.IsGevangene(Monopoly.domein.Speler)"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.velden.Moles.MGevangenis.AllInstances.LaatVrijSpelerGebeurtenisresult">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.velden.Gevangenis.LaatVrij(Monopoly.domein.Speler,Monopoly.domein.Gebeurtenisresult)"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.velden.Moles.MGevangenis.AllInstances.NieuweGevangeneSpelerGebeurtenisresult">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.velden.Gevangenis.NieuweGevangene(Monopoly.domein.Speler,Monopoly.domein.Gebeurtenisresult)"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.velden.Moles.MGevangenis.AllInstances.NotifyWorpSpelerWorp">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.velden.Gevangenis.NotifyWorp(Monopoly.domein.Speler,Monopoly.domein.Worp)"/>
            </summary>
        </member>
        <member name="T:Monopoly.domein.gebeurtenissen.Moles.MGooiDobbelstenen">
            <summary>Mole type of <see cref="T:Monopoly.domein.gebeurtenissen.GooiDobbelstenen"/>
            .</summary>
        </member>
        <member name="M:Monopoly.domein.gebeurtenissen.Moles.MGooiDobbelstenen.#ctor">
            <summary>Initializes a new mole</summary>
        </member>
        <member name="M:Monopoly.domein.gebeurtenissen.Moles.MGooiDobbelstenen.#ctor(Monopoly.domein.gebeurtenissen.GooiDobbelstenen)">
            <summary>Initializes a new mole for the given instance</summary>
        </member>
        <member name="M:Monopoly.domein.gebeurtenissen.Moles.MGooiDobbelstenen.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:Monopoly.domein.gebeurtenissen.Moles.MGooiDobbelstenen.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:Monopoly.domein.gebeurtenissen.Moles.MGooiDobbelstenen.Bind(Monopoly.domein.IGebeurtenis)">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="P:Monopoly.domein.gebeurtenissen.Moles.MGooiDobbelstenen.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Monopoly.domein.gebeurtenissen.Moles.MGooiDobbelstenen.Constructor">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.gebeurtenissen.GooiDobbelstenen.#ctor"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.gebeurtenissen.Moles.MGooiDobbelstenen.Is3MaalDubbelGegooit">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.gebeurtenissen.GooiDobbelstenen.Is3MaalDubbelGegooit"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.gebeurtenissen.Moles.MGooiDobbelstenen.IsUitvoerbaarSpeler">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.gebeurtenissen.GooiDobbelstenen.IsUitvoerbaar(Monopoly.domein.Speler)"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.gebeurtenissen.Moles.MGooiDobbelstenen.IsVerplicht">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.gebeurtenissen.GooiDobbelstenen.IsVerplicht"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.gebeurtenissen.Moles.MGooiDobbelstenen.LaatsteWorp">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.gebeurtenissen.GooiDobbelstenen.LaatsteWorp"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.gebeurtenissen.Moles.MGooiDobbelstenen.VoeruitSpeler">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.gebeurtenissen.GooiDobbelstenen.Voeruit(Monopoly.domein.Speler)"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.gebeurtenissen.Moles.MGooiDobbelstenen.WorpenInBeurtGet">
            <summary>Sets the mole of <see cref="P:Monopoly.domein.gebeurtenissen.GooiDobbelstenen.WorpenInBeurt"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.gebeurtenissen.Moles.MGooiDobbelstenen.WorpenInBeurtSetListOfWorp">
            <summary>Sets the mole of <see cref="P:Monopoly.domein.gebeurtenissen.GooiDobbelstenen.WorpenInBeurt"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.gebeurtenissen.Moles.MGooiDobbelstenen._Is3MaalDubbelGegooitb__2Worp">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.gebeurtenissen.GooiDobbelstenen.&lt;Is3MaalDubbelGegooit&gt;b__2(Monopoly.domein.Worp)"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.gebeurtenissen.Moles.MGooiDobbelstenen._IsUitvoerbaarb__0Worp">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.gebeurtenissen.GooiDobbelstenen.&lt;IsUitvoerbaar&gt;b__0(Monopoly.domein.Worp)"/>
            </summary>
        </member>
        <member name="T:Monopoly.domein.gebeurtenissen.Moles.MGooiDobbelstenen.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="P:Monopoly.domein.gebeurtenissen.Moles.MGooiDobbelstenen.AllInstances.Is3MaalDubbelGegooit">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.gebeurtenissen.GooiDobbelstenen.Is3MaalDubbelGegooit"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.gebeurtenissen.Moles.MGooiDobbelstenen.AllInstances.IsUitvoerbaarSpeler">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.gebeurtenissen.GooiDobbelstenen.IsUitvoerbaar(Monopoly.domein.Speler)"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.gebeurtenissen.Moles.MGooiDobbelstenen.AllInstances.IsVerplicht">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.gebeurtenissen.GooiDobbelstenen.IsVerplicht"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.gebeurtenissen.Moles.MGooiDobbelstenen.AllInstances.LaatsteWorp">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.gebeurtenissen.GooiDobbelstenen.LaatsteWorp"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.gebeurtenissen.Moles.MGooiDobbelstenen.AllInstances.VoeruitSpeler">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.gebeurtenissen.GooiDobbelstenen.Voeruit(Monopoly.domein.Speler)"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.gebeurtenissen.Moles.MGooiDobbelstenen.AllInstances.WorpenInBeurtGet">
            <summary>Sets the mole of <see cref="P:Monopoly.domein.gebeurtenissen.GooiDobbelstenen.WorpenInBeurt"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.gebeurtenissen.Moles.MGooiDobbelstenen.AllInstances.WorpenInBeurtSetListOfWorp">
            <summary>Sets the mole of <see cref="P:Monopoly.domein.gebeurtenissen.GooiDobbelstenen.WorpenInBeurt"/>
            </summary>
        </member>
        <member name="T:Monopoly.domein.akties.Moles.MHypotheek">
            <summary>Mole type of <see cref="T:Monopoly.domein.akties.Hypotheek"/>
            .</summary>
        </member>
        <member name="M:Monopoly.domein.akties.Moles.MHypotheek.#ctor">
            <summary>Initializes a new mole</summary>
        </member>
        <member name="M:Monopoly.domein.akties.Moles.MHypotheek.#ctor(Monopoly.domein.akties.Hypotheek)">
            <summary>Initializes a new mole for the given instance</summary>
        </member>
        <member name="M:Monopoly.domein.akties.Moles.MHypotheek.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:Monopoly.domein.akties.Moles.MHypotheek.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:Monopoly.domein.akties.Moles.MHypotheek.Bind(Monopoly.domein.velden.IHuurObservable)">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="P:Monopoly.domein.akties.Moles.MHypotheek.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Monopoly.domein.akties.Moles.MHypotheek.ConstructorIHypotheekveld">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.akties.Hypotheek.#ctor(Monopoly.domein.velden.IHypotheekveld)"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.akties.Moles.MHypotheek.HypotheekAflosbedrag">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.akties.Hypotheek.HypotheekAflosbedrag"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.akties.Moles.MHypotheek.HypotheekObjectGet">
            <summary>Sets the mole of <see cref="P:Monopoly.domein.akties.Hypotheek.HypotheekObject"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.akties.Moles.MHypotheek.HypotheekObjectSetIHypotheekveld">
            <summary>Sets the mole of <see cref="P:Monopoly.domein.akties.Hypotheek.HypotheekObject"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.akties.Moles.MHypotheek.IsOnderHypotheekGet">
            <summary>Sets the mole of <see cref="P:Monopoly.domein.akties.Hypotheek.IsOnderHypotheek"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.akties.Moles.MHypotheek.IsOnderHypotheekSetBoolean">
            <summary>Sets the mole of <see cref="P:Monopoly.domein.akties.Hypotheek.IsOnderHypotheek"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.akties.Moles.MHypotheek.LosHypotheekAf">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.akties.Hypotheek.LosHypotheekAf"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.akties.Moles.MHypotheek.NeemHypotheek">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.akties.Hypotheek.NeemHypotheek"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.akties.Moles.MHypotheek._signalHuurUpdateb__0IHuurObserver">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.akties.Hypotheek.&lt;signalHuurUpdate&gt;b__0(Monopoly.domein.velden.IHuurObserver)"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.akties.Moles.MHypotheek.addObserverIHuurObserver">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.akties.Hypotheek.addObserver(Monopoly.domein.velden.IHuurObserver)"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.akties.Moles.MHypotheek.signalHuurUpdate">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.akties.Hypotheek.signalHuurUpdate"/>
            </summary>
        </member>
        <member name="T:Monopoly.domein.akties.Moles.MHypotheek.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="P:Monopoly.domein.akties.Moles.MHypotheek.AllInstances.HypotheekAflosbedrag">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.akties.Hypotheek.HypotheekAflosbedrag"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.akties.Moles.MHypotheek.AllInstances.HypotheekObjectGet">
            <summary>Sets the mole of <see cref="P:Monopoly.domein.akties.Hypotheek.HypotheekObject"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.akties.Moles.MHypotheek.AllInstances.HypotheekObjectSetIHypotheekveld">
            <summary>Sets the mole of <see cref="P:Monopoly.domein.akties.Hypotheek.HypotheekObject"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.akties.Moles.MHypotheek.AllInstances.IsOnderHypotheekGet">
            <summary>Sets the mole of <see cref="P:Monopoly.domein.akties.Hypotheek.IsOnderHypotheek"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.akties.Moles.MHypotheek.AllInstances.IsOnderHypotheekSetBoolean">
            <summary>Sets the mole of <see cref="P:Monopoly.domein.akties.Hypotheek.IsOnderHypotheek"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.akties.Moles.MHypotheek.AllInstances.LosHypotheekAf">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.akties.Hypotheek.LosHypotheekAf"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.akties.Moles.MHypotheek.AllInstances.NeemHypotheek">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.akties.Hypotheek.NeemHypotheek"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.akties.Moles.MHypotheek.AllInstances.addObserverIHuurObserver">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.akties.Hypotheek.addObserver(Monopoly.domein.velden.IHuurObserver)"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.akties.Moles.MHypotheek.AllInstances.signalHuurUpdate">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.akties.Hypotheek.signalHuurUpdate"/>
            </summary>
        </member>
        <member name="T:Monopoly.builders.Moles.MKansKaartenbuilder">
            <summary>Mole type of <see cref="T:Monopoly.builders.KansKaartenbuilder"/>
            .</summary>
        </member>
        <member name="M:Monopoly.builders.Moles.MKansKaartenbuilder.#ctor">
            <summary>Initializes a new mole</summary>
        </member>
        <member name="M:Monopoly.builders.Moles.MKansKaartenbuilder.#ctor(Monopoly.builders.KansKaartenbuilder)">
            <summary>Initializes a new mole for the given instance</summary>
        </member>
        <member name="M:Monopoly.builders.Moles.MKansKaartenbuilder.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:Monopoly.builders.Moles.MKansKaartenbuilder.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Monopoly.builders.Moles.MKansKaartenbuilder.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Monopoly.builders.Moles.MKansKaartenbuilder.BordGet">
            <summary>Sets the mole of <see cref="P:Monopoly.builders.KansKaartenbuilder.Bord"/>
            </summary>
        </member>
        <member name="P:Monopoly.builders.Moles.MKansKaartenbuilder.BordSetSpelbord">
            <summary>Sets the mole of <see cref="P:Monopoly.builders.KansKaartenbuilder.Bord"/>
            </summary>
        </member>
        <member name="P:Monopoly.builders.Moles.MKansKaartenbuilder.ConstructorSpelbord">
            <summary>Sets the mole of <see cref="M:Monopoly.builders.KansKaartenbuilder.#ctor(Monopoly.domein.Spelbord)"/>
            </summary>
        </member>
        <member name="P:Monopoly.builders.Moles.MKansKaartenbuilder.build">
            <summary>Sets the mole of <see cref="M:Monopoly.builders.KansKaartenbuilder.build"/>
            </summary>
        </member>
        <member name="T:Monopoly.builders.Moles.MKansKaartenbuilder.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="P:Monopoly.builders.Moles.MKansKaartenbuilder.AllInstances.BordGet">
            <summary>Sets the mole of <see cref="P:Monopoly.builders.KansKaartenbuilder.Bord"/>
            </summary>
        </member>
        <member name="P:Monopoly.builders.Moles.MKansKaartenbuilder.AllInstances.BordSetSpelbord">
            <summary>Sets the mole of <see cref="P:Monopoly.builders.KansKaartenbuilder.Bord"/>
            </summary>
        </member>
        <member name="P:Monopoly.builders.Moles.MKansKaartenbuilder.AllInstances.build">
            <summary>Sets the mole of <see cref="M:Monopoly.builders.KansKaartenbuilder.build"/>
            </summary>
        </member>
        <member name="T:Monopoly.AI.VoorzichtigeHuisjesmelker.Moles.MKoopHuisDecision">
            <summary>Mole type of <see cref="T:Monopoly.AI.VoorzichtigeHuisjesmelker.KoopHuisDecision"/>
            .</summary>
        </member>
        <member name="M:Monopoly.AI.VoorzichtigeHuisjesmelker.Moles.MKoopHuisDecision.#ctor">
            <summary>Initializes a new mole</summary>
        </member>
        <member name="M:Monopoly.AI.VoorzichtigeHuisjesmelker.Moles.MKoopHuisDecision.#ctor(Monopoly.AI.VoorzichtigeHuisjesmelker.KoopHuisDecision)">
            <summary>Initializes a new mole for the given instance</summary>
        </member>
        <member name="M:Monopoly.AI.VoorzichtigeHuisjesmelker.Moles.MKoopHuisDecision.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:Monopoly.AI.VoorzichtigeHuisjesmelker.Moles.MKoopHuisDecision.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:Monopoly.AI.VoorzichtigeHuisjesmelker.Moles.MKoopHuisDecision.Bind(Monopoly.AI.IDecision)">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="P:Monopoly.AI.VoorzichtigeHuisjesmelker.Moles.MKoopHuisDecision.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Monopoly.AI.VoorzichtigeHuisjesmelker.Moles.MKoopHuisDecision.Constructor">
            <summary>Sets the mole of <see cref="M:Monopoly.AI.VoorzichtigeHuisjesmelker.KoopHuisDecision.#ctor"/>
            </summary>
        </member>
        <member name="P:Monopoly.AI.VoorzichtigeHuisjesmelker.Moles.MKoopHuisDecision.decideSpelerIGebeurtenis">
            <summary>Sets the mole of <see cref="M:Monopoly.AI.VoorzichtigeHuisjesmelker.KoopHuisDecision.decide(Monopoly.domein.Speler,Monopoly.domein.IGebeurtenis)"/>
            </summary>
        </member>
        <member name="T:Monopoly.AI.VoorzichtigeHuisjesmelker.Moles.MKoopHuisDecision.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="P:Monopoly.AI.VoorzichtigeHuisjesmelker.Moles.MKoopHuisDecision.AllInstances.decideSpelerIGebeurtenis">
            <summary>Sets the mole of <see cref="M:Monopoly.AI.VoorzichtigeHuisjesmelker.KoopHuisDecision.decide(Monopoly.domein.Speler,Monopoly.domein.IGebeurtenis)"/>
            </summary>
        </member>
        <member name="T:Monopoly.AI.RisicoNemendeGrondAankoper.Moles.MKoopHuisDecision01">
            <summary>Mole type of <see cref="T:Monopoly.AI.RisicoNemendeGrondAankoper.KoopHuisDecision"/>
            .</summary>
        </member>
        <member name="M:Monopoly.AI.RisicoNemendeGrondAankoper.Moles.MKoopHuisDecision01.#ctor">
            <summary>Initializes a new mole</summary>
        </member>
        <member name="M:Monopoly.AI.RisicoNemendeGrondAankoper.Moles.MKoopHuisDecision01.#ctor(Monopoly.AI.RisicoNemendeGrondAankoper.KoopHuisDecision)">
            <summary>Initializes a new mole for the given instance</summary>
        </member>
        <member name="M:Monopoly.AI.RisicoNemendeGrondAankoper.Moles.MKoopHuisDecision01.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:Monopoly.AI.RisicoNemendeGrondAankoper.Moles.MKoopHuisDecision01.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:Monopoly.AI.RisicoNemendeGrondAankoper.Moles.MKoopHuisDecision01.Bind(Monopoly.AI.IDecision)">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="P:Monopoly.AI.RisicoNemendeGrondAankoper.Moles.MKoopHuisDecision01.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Monopoly.AI.RisicoNemendeGrondAankoper.Moles.MKoopHuisDecision01.Constructor">
            <summary>Sets the mole of <see cref="M:Monopoly.AI.RisicoNemendeGrondAankoper.KoopHuisDecision.#ctor"/>
            </summary>
        </member>
        <member name="P:Monopoly.AI.RisicoNemendeGrondAankoper.Moles.MKoopHuisDecision01.decideSpelerIGebeurtenis">
            <summary>Sets the mole of <see cref="M:Monopoly.AI.RisicoNemendeGrondAankoper.KoopHuisDecision.decide(Monopoly.domein.Speler,Monopoly.domein.IGebeurtenis)"/>
            </summary>
        </member>
        <member name="T:Monopoly.AI.RisicoNemendeGrondAankoper.Moles.MKoopHuisDecision01.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="P:Monopoly.AI.RisicoNemendeGrondAankoper.Moles.MKoopHuisDecision01.AllInstances.decideSpelerIGebeurtenis">
            <summary>Sets the mole of <see cref="M:Monopoly.AI.RisicoNemendeGrondAankoper.KoopHuisDecision.decide(Monopoly.domein.Speler,Monopoly.domein.IGebeurtenis)"/>
            </summary>
        </member>
        <member name="T:Monopoly.domein.Moles.MLaatste3Worpen">
            <summary>Mole type of <see cref="T:Monopoly.domein.Laatste3Worpen"/>
            .</summary>
        </member>
        <member name="M:Monopoly.domein.Moles.MLaatste3Worpen.#ctor">
            <summary>Initializes a new mole</summary>
        </member>
        <member name="M:Monopoly.domein.Moles.MLaatste3Worpen.#ctor(Monopoly.domein.Laatste3Worpen)">
            <summary>Initializes a new mole for the given instance</summary>
        </member>
        <member name="M:Monopoly.domein.Moles.MLaatste3Worpen.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:Monopoly.domein.Moles.MLaatste3Worpen.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MLaatste3Worpen.AantalWorpen">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.Laatste3Worpen.AantalWorpen"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MLaatste3Worpen.AddWorpWorp">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.Laatste3Worpen.AddWorp(Monopoly.domein.Worp)"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MLaatste3Worpen.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MLaatste3Worpen.Constructor">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.Laatste3Worpen.#ctor"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MLaatste3Worpen.IsDrieWorpenDubbelGegooit">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.Laatste3Worpen.IsDrieWorpenDubbelGegooit"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MLaatste3Worpen.LaatsteWorp">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.Laatste3Worpen.LaatsteWorp"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MLaatste3Worpen.WorpenGet">
            <summary>Sets the mole of <see cref="P:Monopoly.domein.Laatste3Worpen.Worpen"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MLaatste3Worpen.WorpenSetListOfWorp">
            <summary>Sets the mole of <see cref="P:Monopoly.domein.Laatste3Worpen.Worpen"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MLaatste3Worpen._IsDrieWorpenDubbelGegooitb__0Worp">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.Laatste3Worpen.&lt;IsDrieWorpenDubbelGegooit&gt;b__0(Monopoly.domein.Worp)"/>
            </summary>
        </member>
        <member name="T:Monopoly.domein.Moles.MLaatste3Worpen.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MLaatste3Worpen.AllInstances.AantalWorpen">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.Laatste3Worpen.AantalWorpen"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MLaatste3Worpen.AllInstances.AddWorpWorp">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.Laatste3Worpen.AddWorp(Monopoly.domein.Worp)"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MLaatste3Worpen.AllInstances.IsDrieWorpenDubbelGegooit">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.Laatste3Worpen.IsDrieWorpenDubbelGegooit"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MLaatste3Worpen.AllInstances.LaatsteWorp">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.Laatste3Worpen.LaatsteWorp"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MLaatste3Worpen.AllInstances.WorpenGet">
            <summary>Sets the mole of <see cref="P:Monopoly.domein.Laatste3Worpen.Worpen"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MLaatste3Worpen.AllInstances.WorpenSetListOfWorp">
            <summary>Sets the mole of <see cref="P:Monopoly.domein.Laatste3Worpen.Worpen"/>
            </summary>
        </member>
        <member name="T:Monopoly.domein.gebeurtenissen.Moles.MLosHypotheekAf">
            <summary>Mole type of <see cref="T:Monopoly.domein.gebeurtenissen.LosHypotheekAf"/>
            .</summary>
        </member>
        <member name="M:Monopoly.domein.gebeurtenissen.Moles.MLosHypotheekAf.#ctor">
            <summary>Initializes a new mole</summary>
        </member>
        <member name="M:Monopoly.domein.gebeurtenissen.Moles.MLosHypotheekAf.#ctor(Monopoly.domein.gebeurtenissen.LosHypotheekAf)">
            <summary>Initializes a new mole for the given instance</summary>
        </member>
        <member name="M:Monopoly.domein.gebeurtenissen.Moles.MLosHypotheekAf.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:Monopoly.domein.gebeurtenissen.Moles.MLosHypotheekAf.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:Monopoly.domein.gebeurtenissen.Moles.MLosHypotheekAf.Bind(Monopoly.domein.IGebeurtenis)">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="P:Monopoly.domein.gebeurtenissen.Moles.MLosHypotheekAf.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Monopoly.domein.gebeurtenissen.Moles.MLosHypotheekAf.Constructor">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.gebeurtenissen.LosHypotheekAf.#ctor"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.gebeurtenissen.Moles.MLosHypotheekAf.IsUitvoerbaarSpeler">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.gebeurtenissen.LosHypotheekAf.IsUitvoerbaar(Monopoly.domein.Speler)"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.gebeurtenissen.Moles.MLosHypotheekAf.IsVerplicht">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.gebeurtenissen.LosHypotheekAf.IsVerplicht"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.gebeurtenissen.Moles.MLosHypotheekAf.VoeruitSpeler">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.gebeurtenissen.LosHypotheekAf.Voeruit(Monopoly.domein.Speler)"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.gebeurtenissen.Moles.MLosHypotheekAf._IsUitvoerbaarb__0IHypotheekveld">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.gebeurtenissen.LosHypotheekAf.&lt;IsUitvoerbaar&gt;b__0(Monopoly.domein.velden.IHypotheekveld)"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.gebeurtenissen.Moles.MLosHypotheekAf._Voeruitb__2IHypotheekveld">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.gebeurtenissen.LosHypotheekAf.&lt;Voeruit&gt;b__2(Monopoly.domein.velden.IHypotheekveld)"/>
            </summary>
        </member>
        <member name="T:Monopoly.domein.gebeurtenissen.Moles.MLosHypotheekAf.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="P:Monopoly.domein.gebeurtenissen.Moles.MLosHypotheekAf.AllInstances.IsUitvoerbaarSpeler">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.gebeurtenissen.LosHypotheekAf.IsUitvoerbaar(Monopoly.domein.Speler)"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.gebeurtenissen.Moles.MLosHypotheekAf.AllInstances.IsVerplicht">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.gebeurtenissen.LosHypotheekAf.IsVerplicht"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.gebeurtenissen.Moles.MLosHypotheekAf.AllInstances.VoeruitSpeler">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.gebeurtenissen.LosHypotheekAf.Voeruit(Monopoly.domein.Speler)"/>
            </summary>
        </member>
        <member name="T:Monopoly.domein.Moles.MMonopolyspel">
            <summary>Mole type of <see cref="T:Monopoly.domein.Monopolyspel"/>
            .</summary>
        </member>
        <member name="M:Monopoly.domein.Moles.MMonopolyspel.#ctor">
            <summary>Initializes a new mole</summary>
        </member>
        <member name="M:Monopoly.domein.Moles.MMonopolyspel.#ctor(Monopoly.domein.Monopolyspel)">
            <summary>Initializes a new mole for the given instance</summary>
        </member>
        <member name="M:Monopoly.domein.Moles.MMonopolyspel.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:Monopoly.domein.Moles.MMonopolyspel.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MMonopolyspel.Beeindig">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.Monopolyspel.Beeindig"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MMonopolyspel.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MMonopolyspel.BordGet">
            <summary>Sets the mole of <see cref="P:Monopoly.domein.Monopolyspel.Bord"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MMonopolyspel.BordSetSpelbord">
            <summary>Sets the mole of <see cref="P:Monopoly.domein.Monopolyspel.Bord"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MMonopolyspel.Constructor">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.Monopolyspel.#ctor"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MMonopolyspel.HuidigeSpelerGet">
            <summary>Sets the mole of <see cref="P:Monopoly.domein.Monopolyspel.HuidigeSpeler"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MMonopolyspel.HuidigeSpelerSetSpeler">
            <summary>Sets the mole of <see cref="P:Monopoly.domein.Monopolyspel.HuidigeSpeler"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MMonopolyspel.InitNieuweBeurtInt32">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.Monopolyspel.InitNieuweBeurt(System.Int32)"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MMonopolyspel.SpelBeeindigdGet">
            <summary>Sets the mole of <see cref="P:Monopoly.domein.Monopolyspel.SpelBeeindigd"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MMonopolyspel.SpelBeeindigdSetBoolean">
            <summary>Sets the mole of <see cref="P:Monopoly.domein.Monopolyspel.SpelBeeindigd"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MMonopolyspel.SpelersGet">
            <summary>Sets the mole of <see cref="P:Monopoly.domein.Monopolyspel.Spelers"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MMonopolyspel.SpelersSetListOfSpeler">
            <summary>Sets the mole of <see cref="P:Monopoly.domein.Monopolyspel.Spelers"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MMonopolyspel.Start">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.Monopolyspel.Start"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MMonopolyspel.VoegSpelerToeString">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.Monopolyspel.VoegSpelerToe(System.String)"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MMonopolyspel.VoegSpelerToeStringTypesAI">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.Monopolyspel.VoegSpelerToe(System.String,Monopoly.AI.TypesAI)"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MMonopolyspel.WisselBeurt">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.Monopolyspel.WisselBeurt"/>
            </summary>
        </member>
        <member name="T:Monopoly.domein.Moles.MMonopolyspel.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MMonopolyspel.AllInstances.Beeindig">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.Monopolyspel.Beeindig"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MMonopolyspel.AllInstances.BordGet">
            <summary>Sets the mole of <see cref="P:Monopoly.domein.Monopolyspel.Bord"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MMonopolyspel.AllInstances.BordSetSpelbord">
            <summary>Sets the mole of <see cref="P:Monopoly.domein.Monopolyspel.Bord"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MMonopolyspel.AllInstances.HuidigeSpelerGet">
            <summary>Sets the mole of <see cref="P:Monopoly.domein.Monopolyspel.HuidigeSpeler"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MMonopolyspel.AllInstances.HuidigeSpelerSetSpeler">
            <summary>Sets the mole of <see cref="P:Monopoly.domein.Monopolyspel.HuidigeSpeler"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MMonopolyspel.AllInstances.InitNieuweBeurtInt32">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.Monopolyspel.InitNieuweBeurt(System.Int32)"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MMonopolyspel.AllInstances.SpelBeeindigdGet">
            <summary>Sets the mole of <see cref="P:Monopoly.domein.Monopolyspel.SpelBeeindigd"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MMonopolyspel.AllInstances.SpelBeeindigdSetBoolean">
            <summary>Sets the mole of <see cref="P:Monopoly.domein.Monopolyspel.SpelBeeindigd"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MMonopolyspel.AllInstances.SpelersGet">
            <summary>Sets the mole of <see cref="P:Monopoly.domein.Monopolyspel.Spelers"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MMonopolyspel.AllInstances.SpelersSetListOfSpeler">
            <summary>Sets the mole of <see cref="P:Monopoly.domein.Monopolyspel.Spelers"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MMonopolyspel.AllInstances.Start">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.Monopolyspel.Start"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MMonopolyspel.AllInstances.VoegSpelerToeString">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.Monopolyspel.VoegSpelerToe(System.String)"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MMonopolyspel.AllInstances.VoegSpelerToeStringTypesAI">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.Monopolyspel.VoegSpelerToe(System.String,Monopoly.AI.TypesAI)"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MMonopolyspel.AllInstances.WisselBeurt">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.Monopolyspel.WisselBeurt"/>
            </summary>
        </member>
        <member name="T:Monopoly.domein.huur.Moles.MNutsbedrijfHuur">
            <summary>Mole type of <see cref="T:Monopoly.domein.huur.NutsbedrijfHuur"/>
            .</summary>
        </member>
        <member name="M:Monopoly.domein.huur.Moles.MNutsbedrijfHuur.#ctor">
            <summary>Initializes a new mole</summary>
        </member>
        <member name="M:Monopoly.domein.huur.Moles.MNutsbedrijfHuur.#ctor(Monopoly.domein.huur.NutsbedrijfHuur)">
            <summary>Initializes a new mole for the given instance</summary>
        </member>
        <member name="M:Monopoly.domein.huur.Moles.MNutsbedrijfHuur.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:Monopoly.domein.huur.Moles.MNutsbedrijfHuur.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:Monopoly.domein.huur.Moles.MNutsbedrijfHuur.Bind(Monopoly.domein.IHuurprijsBepaler)">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="P:Monopoly.domein.huur.Moles.MNutsbedrijfHuur.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Monopoly.domein.huur.Moles.MNutsbedrijfHuur.BepaalHuurprijsIHypotheekveld">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.huur.NutsbedrijfHuur.BepaalHuurprijs(Monopoly.domein.velden.IHypotheekveld)"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.huur.Moles.MNutsbedrijfHuur.Constructor">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.huur.NutsbedrijfHuur.#ctor"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.huur.Moles.MNutsbedrijfHuur._BepaalHuurprijsb__0IHypotheekveld">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.huur.NutsbedrijfHuur.&lt;BepaalHuurprijs&gt;b__0(Monopoly.domein.velden.IHypotheekveld)"/>
            </summary>
        </member>
        <member name="T:Monopoly.domein.huur.Moles.MNutsbedrijfHuur.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="P:Monopoly.domein.huur.Moles.MNutsbedrijfHuur.AllInstances.BepaalHuurprijsIHypotheekveld">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.huur.NutsbedrijfHuur.BepaalHuurprijs(Monopoly.domein.velden.IHypotheekveld)"/>
            </summary>
        </member>
        <member name="T:Monopoly.domein.gebeurtenissen.Moles.MOntvangGeld">
            <summary>Mole type of <see cref="T:Monopoly.domein.gebeurtenissen.OntvangGeld"/>
            .</summary>
        </member>
        <member name="M:Monopoly.domein.gebeurtenissen.Moles.MOntvangGeld.#ctor">
            <summary>Initializes a new mole</summary>
        </member>
        <member name="M:Monopoly.domein.gebeurtenissen.Moles.MOntvangGeld.#ctor(Monopoly.domein.gebeurtenissen.OntvangGeld)">
            <summary>Initializes a new mole for the given instance</summary>
        </member>
        <member name="M:Monopoly.domein.gebeurtenissen.Moles.MOntvangGeld.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:Monopoly.domein.gebeurtenissen.Moles.MOntvangGeld.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:Monopoly.domein.gebeurtenissen.Moles.MOntvangGeld.Bind(Monopoly.domein.IGebeurtenis)">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="P:Monopoly.domein.gebeurtenissen.Moles.MOntvangGeld.BedragGet">
            <summary>Sets the mole of <see cref="P:Monopoly.domein.gebeurtenissen.OntvangGeld.Bedrag"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.gebeurtenissen.Moles.MOntvangGeld.BedragSetInt32">
            <summary>Sets the mole of <see cref="P:Monopoly.domein.gebeurtenissen.OntvangGeld.Bedrag"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.gebeurtenissen.Moles.MOntvangGeld.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Monopoly.domein.gebeurtenissen.Moles.MOntvangGeld.ConstructorInt32">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.gebeurtenissen.OntvangGeld.#ctor(System.Int32)"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.gebeurtenissen.Moles.MOntvangGeld.IsUitvoerbaarSpeler">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.gebeurtenissen.OntvangGeld.IsUitvoerbaar(Monopoly.domein.Speler)"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.gebeurtenissen.Moles.MOntvangGeld.IsVerplicht">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.gebeurtenissen.OntvangGeld.IsVerplicht"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.gebeurtenissen.Moles.MOntvangGeld.SetTekstString">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.gebeurtenissen.OntvangGeld.SetTekst(System.String)"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.gebeurtenissen.Moles.MOntvangGeld.TekstGet">
            <summary>Sets the mole of <see cref="P:Monopoly.domein.gebeurtenissen.OntvangGeld.Tekst"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.gebeurtenissen.Moles.MOntvangGeld.TekstSetString">
            <summary>Sets the mole of <see cref="P:Monopoly.domein.gebeurtenissen.OntvangGeld.Tekst"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.gebeurtenissen.Moles.MOntvangGeld.VoeruitSpeler">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.gebeurtenissen.OntvangGeld.Voeruit(Monopoly.domein.Speler)"/>
            </summary>
        </member>
        <member name="T:Monopoly.domein.gebeurtenissen.Moles.MOntvangGeld.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="P:Monopoly.domein.gebeurtenissen.Moles.MOntvangGeld.AllInstances.BedragGet">
            <summary>Sets the mole of <see cref="P:Monopoly.domein.gebeurtenissen.OntvangGeld.Bedrag"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.gebeurtenissen.Moles.MOntvangGeld.AllInstances.BedragSetInt32">
            <summary>Sets the mole of <see cref="P:Monopoly.domein.gebeurtenissen.OntvangGeld.Bedrag"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.gebeurtenissen.Moles.MOntvangGeld.AllInstances.IsUitvoerbaarSpeler">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.gebeurtenissen.OntvangGeld.IsUitvoerbaar(Monopoly.domein.Speler)"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.gebeurtenissen.Moles.MOntvangGeld.AllInstances.IsVerplicht">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.gebeurtenissen.OntvangGeld.IsVerplicht"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.gebeurtenissen.Moles.MOntvangGeld.AllInstances.SetTekstString">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.gebeurtenissen.OntvangGeld.SetTekst(System.String)"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.gebeurtenissen.Moles.MOntvangGeld.AllInstances.TekstGet">
            <summary>Sets the mole of <see cref="P:Monopoly.domein.gebeurtenissen.OntvangGeld.Tekst"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.gebeurtenissen.Moles.MOntvangGeld.AllInstances.TekstSetString">
            <summary>Sets the mole of <see cref="P:Monopoly.domein.gebeurtenissen.OntvangGeld.Tekst"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.gebeurtenissen.Moles.MOntvangGeld.AllInstances.VoeruitSpeler">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.gebeurtenissen.OntvangGeld.Voeruit(Monopoly.domein.Speler)"/>
            </summary>
        </member>
        <member name="T:Monopoly.domein.gebeurtenissen.Moles.MPasseerStartGebeurtenis">
            <summary>Mole type of <see cref="T:Monopoly.domein.gebeurtenissen.PasseerStartGebeurtenis"/>
            .</summary>
        </member>
        <member name="M:Monopoly.domein.gebeurtenissen.Moles.MPasseerStartGebeurtenis.#ctor">
            <summary>Initializes a new mole</summary>
        </member>
        <member name="M:Monopoly.domein.gebeurtenissen.Moles.MPasseerStartGebeurtenis.#ctor(Monopoly.domein.gebeurtenissen.PasseerStartGebeurtenis)">
            <summary>Initializes a new mole for the given instance</summary>
        </member>
        <member name="M:Monopoly.domein.gebeurtenissen.Moles.MPasseerStartGebeurtenis.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:Monopoly.domein.gebeurtenissen.Moles.MPasseerStartGebeurtenis.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:Monopoly.domein.gebeurtenissen.Moles.MPasseerStartGebeurtenis.Bind(Monopoly.domein.IGebeurtenis)">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="P:Monopoly.domein.gebeurtenissen.Moles.MPasseerStartGebeurtenis.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Monopoly.domein.gebeurtenissen.Moles.MPasseerStartGebeurtenis.ConstructorVeld">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.gebeurtenissen.PasseerStartGebeurtenis.#ctor(Monopoly.domein.velden.Veld)"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.gebeurtenissen.Moles.MPasseerStartGebeurtenis.IsUitvoerbaarSpeler">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.gebeurtenissen.PasseerStartGebeurtenis.IsUitvoerbaar(Monopoly.domein.Speler)"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.gebeurtenissen.Moles.MPasseerStartGebeurtenis.IsVerplicht">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.gebeurtenissen.PasseerStartGebeurtenis.IsVerplicht"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.gebeurtenissen.Moles.MPasseerStartGebeurtenis.StartPositieGet">
            <summary>Sets the mole of <see cref="P:Monopoly.domein.gebeurtenissen.PasseerStartGebeurtenis.StartPositie"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.gebeurtenissen.Moles.MPasseerStartGebeurtenis.StartPositieSetVeld">
            <summary>Sets the mole of <see cref="P:Monopoly.domein.gebeurtenissen.PasseerStartGebeurtenis.StartPositie"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.gebeurtenissen.Moles.MPasseerStartGebeurtenis.VoeruitSpeler">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.gebeurtenissen.PasseerStartGebeurtenis.Voeruit(Monopoly.domein.Speler)"/>
            </summary>
        </member>
        <member name="T:Monopoly.domein.gebeurtenissen.Moles.MPasseerStartGebeurtenis.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="P:Monopoly.domein.gebeurtenissen.Moles.MPasseerStartGebeurtenis.AllInstances.IsUitvoerbaarSpeler">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.gebeurtenissen.PasseerStartGebeurtenis.IsUitvoerbaar(Monopoly.domein.Speler)"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.gebeurtenissen.Moles.MPasseerStartGebeurtenis.AllInstances.IsVerplicht">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.gebeurtenissen.PasseerStartGebeurtenis.IsVerplicht"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.gebeurtenissen.Moles.MPasseerStartGebeurtenis.AllInstances.StartPositieGet">
            <summary>Sets the mole of <see cref="P:Monopoly.domein.gebeurtenissen.PasseerStartGebeurtenis.StartPositie"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.gebeurtenissen.Moles.MPasseerStartGebeurtenis.AllInstances.StartPositieSetVeld">
            <summary>Sets the mole of <see cref="P:Monopoly.domein.gebeurtenissen.PasseerStartGebeurtenis.StartPositie"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.gebeurtenissen.Moles.MPasseerStartGebeurtenis.AllInstances.VoeruitSpeler">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.gebeurtenissen.PasseerStartGebeurtenis.Voeruit(Monopoly.domein.Speler)"/>
            </summary>
        </member>
        <member name="T:Monopoly.Moles.MSpelController">
            <summary>Mole type of <see cref="T:Monopoly.SpelController"/>
            .</summary>
        </member>
        <member name="M:Monopoly.Moles.MSpelController.#ctor">
            <summary>Initializes a new mole</summary>
        </member>
        <member name="M:Monopoly.Moles.MSpelController.#ctor(Monopoly.SpelController)">
            <summary>Initializes a new mole for the given instance</summary>
        </member>
        <member name="M:Monopoly.Moles.MSpelController.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:Monopoly.Moles.MSpelController.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Monopoly.Moles.MSpelController.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Monopoly.Moles.MSpelController.Constructor">
            <summary>Sets the mole of <see cref="M:Monopoly.SpelController.#ctor"/>
            </summary>
        </member>
        <member name="P:Monopoly.Moles.MSpelController.EindeBeurt">
            <summary>Sets the mole of <see cref="M:Monopoly.SpelController.EindeBeurt"/>
            </summary>
        </member>
        <member name="P:Monopoly.Moles.MSpelController.MaakSpel">
            <summary>Sets the mole of <see cref="M:Monopoly.SpelController.MaakSpel"/>
            </summary>
        </member>
        <member name="P:Monopoly.Moles.MSpelController.SpeelGebeurtenisString">
            <summary>Sets the mole of <see cref="M:Monopoly.SpelController.SpeelGebeurtenis(System.String)"/>
            </summary>
        </member>
        <member name="P:Monopoly.Moles.MSpelController.SpelGet">
            <summary>Sets the mole of <see cref="P:Monopoly.SpelController.Spel"/>
            </summary>
        </member>
        <member name="P:Monopoly.Moles.MSpelController.SpelSetMonopolyspel">
            <summary>Sets the mole of <see cref="P:Monopoly.SpelController.Spel"/>
            </summary>
        </member>
        <member name="P:Monopoly.Moles.MSpelController.StartSpel">
            <summary>Sets the mole of <see cref="M:Monopoly.SpelController.StartSpel"/>
            </summary>
        </member>
        <member name="P:Monopoly.Moles.MSpelController.VoegSpelerToeStringTypesAI">
            <summary>Sets the mole of <see cref="M:Monopoly.SpelController.VoegSpelerToe(System.String,Monopoly.AI.TypesAI)"/>
            </summary>
        </member>
        <member name="T:Monopoly.Moles.MSpelController.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="P:Monopoly.Moles.MSpelController.AllInstances.EindeBeurt">
            <summary>Sets the mole of <see cref="M:Monopoly.SpelController.EindeBeurt"/>
            </summary>
        </member>
        <member name="P:Monopoly.Moles.MSpelController.AllInstances.MaakSpel">
            <summary>Sets the mole of <see cref="M:Monopoly.SpelController.MaakSpel"/>
            </summary>
        </member>
        <member name="P:Monopoly.Moles.MSpelController.AllInstances.SpeelGebeurtenisString">
            <summary>Sets the mole of <see cref="M:Monopoly.SpelController.SpeelGebeurtenis(System.String)"/>
            </summary>
        </member>
        <member name="P:Monopoly.Moles.MSpelController.AllInstances.SpelGet">
            <summary>Sets the mole of <see cref="P:Monopoly.SpelController.Spel"/>
            </summary>
        </member>
        <member name="P:Monopoly.Moles.MSpelController.AllInstances.SpelSetMonopolyspel">
            <summary>Sets the mole of <see cref="P:Monopoly.SpelController.Spel"/>
            </summary>
        </member>
        <member name="P:Monopoly.Moles.MSpelController.AllInstances.StartSpel">
            <summary>Sets the mole of <see cref="M:Monopoly.SpelController.StartSpel"/>
            </summary>
        </member>
        <member name="P:Monopoly.Moles.MSpelController.AllInstances.VoegSpelerToeStringTypesAI">
            <summary>Sets the mole of <see cref="M:Monopoly.SpelController.VoegSpelerToe(System.String,Monopoly.AI.TypesAI)"/>
            </summary>
        </member>
        <member name="T:Monopoly.domein.Moles.MSpelbord">
            <summary>Mole type of <see cref="T:Monopoly.domein.Spelbord"/>
            .</summary>
        </member>
        <member name="M:Monopoly.domein.Moles.MSpelbord.#ctor">
            <summary>Initializes a new mole</summary>
        </member>
        <member name="M:Monopoly.domein.Moles.MSpelbord.#ctor(Monopoly.domein.Spelbord)">
            <summary>Initializes a new mole for the given instance</summary>
        </member>
        <member name="M:Monopoly.domein.Moles.MSpelbord.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:Monopoly.domein.Moles.MSpelbord.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:Monopoly.domein.Moles.MSpelbord.Bind(Monopoly.domein.velden.IHuurObserver)">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MSpelbord.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MSpelbord.Constructor">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.Spelbord.#ctor"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MSpelbord.GeefVeldIndexVeld">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.Spelbord.GeefVeldIndex(Monopoly.domein.velden.Veld)"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MSpelbord.GeefVeldString">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.Spelbord.GeefVeld(System.String)"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MSpelbord.GeefVeldVeldInt32">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.Spelbord.GeefVeld(Monopoly.domein.velden.Veld,System.Int32)"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MSpelbord.GeefVeldVeldWorp">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.Spelbord.GeefVeld(Monopoly.domein.velden.Veld,Monopoly.domein.Worp)"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MSpelbord.Gevangenis">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.Spelbord.Gevangenis"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MSpelbord.PlaatsSpeler">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.Spelbord.Plaats(Monopoly.domein.Speler)"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MSpelbord.VeldenGet">
            <summary>Sets the mole of <see cref="P:Monopoly.domein.Spelbord.Velden"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MSpelbord.VeldenSetListOfVeld">
            <summary>Sets the mole of <see cref="P:Monopoly.domein.Spelbord.Velden"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MSpelbord._addHuurObserver2AllFieldsb__3Veld">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.Spelbord.&lt;addHuurObserver2AllFields&gt;b__3(Monopoly.domein.velden.Veld)"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MSpelbord.addHuurObserver2AllFields">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.Spelbord.addHuurObserver2AllFields"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MSpelbord.geefMaximumHuur">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.Spelbord.geefMaximumHuur"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MSpelbord.huurUpdateVeld">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.Spelbord.huurUpdate(Monopoly.domein.velden.Veld)"/>
            </summary>
        </member>
        <member name="T:Monopoly.domein.Moles.MSpelbord.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MSpelbord.AllInstances.GeefVeldIndexVeld">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.Spelbord.GeefVeldIndex(Monopoly.domein.velden.Veld)"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MSpelbord.AllInstances.GeefVeldString">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.Spelbord.GeefVeld(System.String)"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MSpelbord.AllInstances.GeefVeldVeldInt32">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.Spelbord.GeefVeld(Monopoly.domein.velden.Veld,System.Int32)"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MSpelbord.AllInstances.GeefVeldVeldWorp">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.Spelbord.GeefVeld(Monopoly.domein.velden.Veld,Monopoly.domein.Worp)"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MSpelbord.AllInstances.Gevangenis">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.Spelbord.Gevangenis"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MSpelbord.AllInstances.PlaatsSpeler">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.Spelbord.Plaats(Monopoly.domein.Speler)"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MSpelbord.AllInstances.VeldenGet">
            <summary>Sets the mole of <see cref="P:Monopoly.domein.Spelbord.Velden"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MSpelbord.AllInstances.VeldenSetListOfVeld">
            <summary>Sets the mole of <see cref="P:Monopoly.domein.Spelbord.Velden"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MSpelbord.AllInstances._addHuurObserver2AllFieldsb__3Veld">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.Spelbord.&lt;addHuurObserver2AllFields&gt;b__3(Monopoly.domein.velden.Veld)"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MSpelbord.AllInstances.addHuurObserver2AllFields">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.Spelbord.addHuurObserver2AllFields"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MSpelbord.AllInstances.geefMaximumHuur">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.Spelbord.geefMaximumHuur"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MSpelbord.AllInstances.huurUpdateVeld">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.Spelbord.huurUpdate(Monopoly.domein.velden.Veld)"/>
            </summary>
        </member>
        <member name="T:Monopoly.domein.Moles.MSpeler">
            <summary>Mole type of <see cref="T:Monopoly.domein.Speler"/>
            .</summary>
        </member>
        <member name="M:Monopoly.domein.Moles.MSpeler.#ctor">
            <summary>Initializes a new mole</summary>
        </member>
        <member name="M:Monopoly.domein.Moles.MSpeler.#ctor(Monopoly.domein.Speler)">
            <summary>Initializes a new mole for the given instance</summary>
        </member>
        <member name="M:Monopoly.domein.Moles.MSpeler.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:Monopoly.domein.Moles.MSpeler.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MSpeler.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MSpeler.BepaalGebeurtenissenBijAanvangBeurt">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.Speler.BepaalGebeurtenissenBijAanvangBeurt"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MSpeler.BeurtGebeurtenissenGet">
            <summary>Sets the mole of <see cref="P:Monopoly.domein.Speler.BeurtGebeurtenissen"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MSpeler.BeurtGebeurtenissenSetGebeurtenislijst">
            <summary>Sets the mole of <see cref="P:Monopoly.domein.Speler.BeurtGebeurtenissen"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MSpeler.BezittingenGet">
            <summary>Sets the mole of <see cref="P:Monopoly.domein.Speler.Bezittingen"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MSpeler.BezittingenSetBezittingen">
            <summary>Sets the mole of <see cref="P:Monopoly.domein.Speler.Bezittingen"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MSpeler.ConstructorStringIAIDeciderMonopolyspel">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.Speler.#ctor(System.String,Monopoly.AI.IAIDecider,Monopoly.domein.Monopolyspel)"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MSpeler.Decide">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.Speler.Decide"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MSpeler.EqualsObject">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.Speler.Equals(System.Object)"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MSpeler.GetHashCode">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.Speler.GetHashCode"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MSpeler.IsGevangene">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.Speler.IsGevangene"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MSpeler.IsHuidigespeler">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.Speler.IsHuidigespeler"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MSpeler.PositieGet">
            <summary>Sets the mole of <see cref="P:Monopoly.domein.Speler.Positie"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MSpeler.PositieSetVeld">
            <summary>Sets the mole of <see cref="P:Monopoly.domein.Speler.Positie"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MSpeler.SpeelGebeurtenisString">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.Speler.SpeelGebeurtenis(System.String)"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MSpeler.SpelGet">
            <summary>Sets the mole of <see cref="P:Monopoly.domein.Speler.Spel"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MSpeler.SpelSetMonopolyspel">
            <summary>Sets the mole of <see cref="P:Monopoly.domein.Speler.Spel"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MSpeler.SpelernaamGet">
            <summary>Sets the mole of <see cref="P:Monopoly.domein.Speler.Spelernaam"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MSpeler.SpelernaamSetString">
            <summary>Sets the mole of <see cref="P:Monopoly.domein.Speler.Spelernaam"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MSpeler.ToString">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.Speler.ToString"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MSpeler.VerplaatsVeld">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.Speler.Verplaats(Monopoly.domein.velden.Veld)"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MSpeler.VerplaatsWorp">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.Speler.Verplaats(Monopoly.domein.Worp)"/>
            </summary>
        </member>
        <member name="T:Monopoly.domein.Moles.MSpeler.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MSpeler.AllInstances.BepaalGebeurtenissenBijAanvangBeurt">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.Speler.BepaalGebeurtenissenBijAanvangBeurt"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MSpeler.AllInstances.BeurtGebeurtenissenGet">
            <summary>Sets the mole of <see cref="P:Monopoly.domein.Speler.BeurtGebeurtenissen"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MSpeler.AllInstances.BeurtGebeurtenissenSetGebeurtenislijst">
            <summary>Sets the mole of <see cref="P:Monopoly.domein.Speler.BeurtGebeurtenissen"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MSpeler.AllInstances.BezittingenGet">
            <summary>Sets the mole of <see cref="P:Monopoly.domein.Speler.Bezittingen"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MSpeler.AllInstances.BezittingenSetBezittingen">
            <summary>Sets the mole of <see cref="P:Monopoly.domein.Speler.Bezittingen"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MSpeler.AllInstances.Decide">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.Speler.Decide"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MSpeler.AllInstances.EqualsObject">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.Speler.Equals(System.Object)"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MSpeler.AllInstances.GetHashCode01">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.Speler.GetHashCode"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MSpeler.AllInstances.IsGevangene">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.Speler.IsGevangene"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MSpeler.AllInstances.IsHuidigespeler">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.Speler.IsHuidigespeler"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MSpeler.AllInstances.PositieGet">
            <summary>Sets the mole of <see cref="P:Monopoly.domein.Speler.Positie"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MSpeler.AllInstances.PositieSetVeld">
            <summary>Sets the mole of <see cref="P:Monopoly.domein.Speler.Positie"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MSpeler.AllInstances.SpeelGebeurtenisString">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.Speler.SpeelGebeurtenis(System.String)"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MSpeler.AllInstances.SpelGet">
            <summary>Sets the mole of <see cref="P:Monopoly.domein.Speler.Spel"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MSpeler.AllInstances.SpelSetMonopolyspel">
            <summary>Sets the mole of <see cref="P:Monopoly.domein.Speler.Spel"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MSpeler.AllInstances.SpelernaamGet">
            <summary>Sets the mole of <see cref="P:Monopoly.domein.Speler.Spelernaam"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MSpeler.AllInstances.SpelernaamSetString">
            <summary>Sets the mole of <see cref="P:Monopoly.domein.Speler.Spelernaam"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MSpeler.AllInstances.ToString01">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.Speler.ToString"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MSpeler.AllInstances.VerplaatsVeld">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.Speler.Verplaats(Monopoly.domein.velden.Veld)"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MSpeler.AllInstances.VerplaatsWorp">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.Speler.Verplaats(Monopoly.domein.Worp)"/>
            </summary>
        </member>
        <member name="T:Monopoly.domein.Moles.MStad">
            <summary>Mole type of <see cref="T:Monopoly.domein.Stad"/>
            .</summary>
        </member>
        <member name="M:Monopoly.domein.Moles.MStad.#ctor">
            <summary>Initializes a new mole</summary>
        </member>
        <member name="M:Monopoly.domein.Moles.MStad.#ctor(Monopoly.domein.Stad)">
            <summary>Initializes a new mole for the given instance</summary>
        </member>
        <member name="M:Monopoly.domein.Moles.MStad.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:Monopoly.domein.Moles.MStad.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MStad.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MStad.BezitHelftSpeler">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.Stad.BezitHelft(Monopoly.domein.Speler)"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MStad.BezitStadSpeler">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.Stad.BezitStad(Monopoly.domein.Speler)"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MStad.ConstructorStringStraatArray">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.Stad.#ctor(System.String,Monopoly.domein.velden.Straat[])"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MStad.IsAllesVerkocht">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.Stad.IsAllesVerkocht"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MStad.NaamGet">
            <summary>Sets the mole of <see cref="P:Monopoly.domein.Stad.Naam"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MStad.NaamSetString">
            <summary>Sets the mole of <see cref="P:Monopoly.domein.Stad.Naam"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MStad.StratenGet">
            <summary>Sets the mole of <see cref="P:Monopoly.domein.Stad.Straten"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MStad.StratenSetListOfStraat">
            <summary>Sets the mole of <see cref="P:Monopoly.domein.Stad.Straten"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MStad._IsAllesVerkochtb__6Straat">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.Stad.&lt;IsAllesVerkocht&gt;b__6(Monopoly.domein.velden.Straat)"/>
            </summary>
        </member>
        <member name="T:Monopoly.domein.Moles.MStad.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MStad.AllInstances.BezitHelftSpeler">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.Stad.BezitHelft(Monopoly.domein.Speler)"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MStad.AllInstances.BezitStadSpeler">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.Stad.BezitStad(Monopoly.domein.Speler)"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MStad.AllInstances.IsAllesVerkocht">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.Stad.IsAllesVerkocht"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MStad.AllInstances.NaamGet">
            <summary>Sets the mole of <see cref="P:Monopoly.domein.Stad.Naam"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MStad.AllInstances.NaamSetString">
            <summary>Sets the mole of <see cref="P:Monopoly.domein.Stad.Naam"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MStad.AllInstances.StratenGet">
            <summary>Sets the mole of <see cref="P:Monopoly.domein.Stad.Straten"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MStad.AllInstances.StratenSetListOfStraat">
            <summary>Sets the mole of <see cref="P:Monopoly.domein.Stad.Straten"/>
            </summary>
        </member>
        <member name="T:Monopoly.builders.Moles.MStationEnNutsBuilder">
            <summary>Mole type of <see cref="T:Monopoly.builders.StationEnNutsBuilder"/>
            .</summary>
        </member>
        <member name="M:Monopoly.builders.Moles.MStationEnNutsBuilder.#ctor">
            <summary>Initializes a new mole</summary>
        </member>
        <member name="M:Monopoly.builders.Moles.MStationEnNutsBuilder.#ctor(Monopoly.builders.StationEnNutsBuilder)">
            <summary>Initializes a new mole for the given instance</summary>
        </member>
        <member name="M:Monopoly.builders.Moles.MStationEnNutsBuilder.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:Monopoly.builders.Moles.MStationEnNutsBuilder.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Monopoly.builders.Moles.MStationEnNutsBuilder.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Monopoly.builders.Moles.MStationEnNutsBuilder.Constructor">
            <summary>Sets the mole of <see cref="M:Monopoly.builders.StationEnNutsBuilder.#ctor"/>
            </summary>
        </member>
        <member name="P:Monopoly.builders.Moles.MStationEnNutsBuilder.buildNutsElektriciteit">
            <summary>Sets the mole of <see cref="M:Monopoly.builders.StationEnNutsBuilder.buildNutsElektriciteit"/>
            </summary>
        </member>
        <member name="P:Monopoly.builders.Moles.MStationEnNutsBuilder.buildNutsWaterleiding">
            <summary>Sets the mole of <see cref="M:Monopoly.builders.StationEnNutsBuilder.buildNutsWaterleiding"/>
            </summary>
        </member>
        <member name="P:Monopoly.builders.Moles.MStationEnNutsBuilder.buildStationNoord">
            <summary>Sets the mole of <see cref="M:Monopoly.builders.StationEnNutsBuilder.buildStationNoord"/>
            </summary>
        </member>
        <member name="P:Monopoly.builders.Moles.MStationEnNutsBuilder.buildStationOost">
            <summary>Sets the mole of <see cref="M:Monopoly.builders.StationEnNutsBuilder.buildStationOost"/>
            </summary>
        </member>
        <member name="P:Monopoly.builders.Moles.MStationEnNutsBuilder.buildStationWest">
            <summary>Sets the mole of <see cref="M:Monopoly.builders.StationEnNutsBuilder.buildStationWest"/>
            </summary>
        </member>
        <member name="P:Monopoly.builders.Moles.MStationEnNutsBuilder.buildStationZuid">
            <summary>Sets the mole of <see cref="M:Monopoly.builders.StationEnNutsBuilder.buildStationZuid"/>
            </summary>
        </member>
        <member name="P:Monopoly.builders.Moles.MStationEnNutsBuilder.buildString">
            <summary>Sets the mole of <see cref="M:Monopoly.builders.StationEnNutsBuilder.build(System.String)"/>
            </summary>
        </member>
        <member name="T:Monopoly.builders.Moles.MStationEnNutsBuilder.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="P:Monopoly.builders.Moles.MStationEnNutsBuilder.AllInstances.buildNutsElektriciteit">
            <summary>Sets the mole of <see cref="M:Monopoly.builders.StationEnNutsBuilder.buildNutsElektriciteit"/>
            </summary>
        </member>
        <member name="P:Monopoly.builders.Moles.MStationEnNutsBuilder.AllInstances.buildNutsWaterleiding">
            <summary>Sets the mole of <see cref="M:Monopoly.builders.StationEnNutsBuilder.buildNutsWaterleiding"/>
            </summary>
        </member>
        <member name="P:Monopoly.builders.Moles.MStationEnNutsBuilder.AllInstances.buildStationNoord">
            <summary>Sets the mole of <see cref="M:Monopoly.builders.StationEnNutsBuilder.buildStationNoord"/>
            </summary>
        </member>
        <member name="P:Monopoly.builders.Moles.MStationEnNutsBuilder.AllInstances.buildStationOost">
            <summary>Sets the mole of <see cref="M:Monopoly.builders.StationEnNutsBuilder.buildStationOost"/>
            </summary>
        </member>
        <member name="P:Monopoly.builders.Moles.MStationEnNutsBuilder.AllInstances.buildStationWest">
            <summary>Sets the mole of <see cref="M:Monopoly.builders.StationEnNutsBuilder.buildStationWest"/>
            </summary>
        </member>
        <member name="P:Monopoly.builders.Moles.MStationEnNutsBuilder.AllInstances.buildStationZuid">
            <summary>Sets the mole of <see cref="M:Monopoly.builders.StationEnNutsBuilder.buildStationZuid"/>
            </summary>
        </member>
        <member name="P:Monopoly.builders.Moles.MStationEnNutsBuilder.AllInstances.buildString">
            <summary>Sets the mole of <see cref="M:Monopoly.builders.StationEnNutsBuilder.build(System.String)"/>
            </summary>
        </member>
        <member name="T:Monopoly.domein.huur.Moles.MStationhuur">
            <summary>Mole type of <see cref="T:Monopoly.domein.huur.Stationhuur"/>
            .</summary>
        </member>
        <member name="M:Monopoly.domein.huur.Moles.MStationhuur.#ctor">
            <summary>Initializes a new mole</summary>
        </member>
        <member name="M:Monopoly.domein.huur.Moles.MStationhuur.#ctor(Monopoly.domein.huur.Stationhuur)">
            <summary>Initializes a new mole for the given instance</summary>
        </member>
        <member name="M:Monopoly.domein.huur.Moles.MStationhuur.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:Monopoly.domein.huur.Moles.MStationhuur.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:Monopoly.domein.huur.Moles.MStationhuur.Bind(Monopoly.domein.IHuurprijsBepaler)">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="P:Monopoly.domein.huur.Moles.MStationhuur.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Monopoly.domein.huur.Moles.MStationhuur.BepaalHuurprijsIHypotheekveld">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.huur.Stationhuur.BepaalHuurprijs(Monopoly.domein.velden.IHypotheekveld)"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.huur.Moles.MStationhuur.Constructor">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.huur.Stationhuur.#ctor"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.huur.Moles.MStationhuur._BepaalHuurprijsb__0IHypotheekveld">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.huur.Stationhuur.&lt;BepaalHuurprijs&gt;b__0(Monopoly.domein.velden.IHypotheekveld)"/>
            </summary>
        </member>
        <member name="T:Monopoly.domein.huur.Moles.MStationhuur.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="P:Monopoly.domein.huur.Moles.MStationhuur.AllInstances.BepaalHuurprijsIHypotheekveld">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.huur.Stationhuur.BepaalHuurprijs(Monopoly.domein.velden.IHypotheekveld)"/>
            </summary>
        </member>
        <member name="T:Monopoly.domein.velden.Moles.MStraat">
            <summary>Mole type of <see cref="T:Monopoly.domein.velden.Straat"/>
            .</summary>
        </member>
        <member name="M:Monopoly.domein.velden.Moles.MStraat.#ctor">
            <summary>Initializes a new mole</summary>
        </member>
        <member name="M:Monopoly.domein.velden.Moles.MStraat.#ctor(Monopoly.domein.velden.Straat)">
            <summary>Initializes a new mole for the given instance</summary>
        </member>
        <member name="M:Monopoly.domein.velden.Moles.MStraat.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:Monopoly.domein.velden.Moles.MStraat.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:Monopoly.domein.velden.Moles.MStraat.Bind(Monopoly.domein.velden.IHuurObservable)">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="M:Monopoly.domein.velden.Moles.MStraat.Bind(Monopoly.domein.velden.IHuurObserver)">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="M:Monopoly.domein.velden.Moles.MStraat.Bind(Monopoly.domein.velden.IHypotheekveld)">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="M:Monopoly.domein.velden.Moles.MStraat.Bind(Monopoly.domein.velden.IVeld)">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="P:Monopoly.domein.velden.Moles.MStraat.AantalHuizenGet">
            <summary>Sets the mole of <see cref="P:Monopoly.domein.velden.Straat.AantalHuizen"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.velden.Moles.MStraat.AantalHuizenSetInt32">
            <summary>Sets the mole of <see cref="P:Monopoly.domein.velden.Straat.AantalHuizen"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.velden.Moles.MStraat.Bebouw">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.velden.Straat.Bebouw"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.velden.Moles.MStraat.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Monopoly.domein.velden.Moles.MStraat.BepaalGebeurtenis">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.velden.Straat.BepaalGebeurtenis"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.velden.Moles.MStraat.BepaalHuurprijs">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.velden.Straat.BepaalHuurprijs"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.velden.Moles.MStraat.ConstructorStringInt32Straathuur">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.velden.Straat.#ctor(System.String,System.Int32,Monopoly.domein.Straathuur)"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.velden.Moles.MStraat.EigenaarGet">
            <summary>Sets the mole of <see cref="P:Monopoly.domein.velden.Straat.Eigenaar"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.velden.Moles.MStraat.EigenaarSetSpeler">
            <summary>Sets the mole of <see cref="P:Monopoly.domein.velden.Straat.Eigenaar"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.velden.Moles.MStraat.HuurbedragenGet">
            <summary>Sets the mole of <see cref="P:Monopoly.domein.velden.Straat.Huurbedragen"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.velden.Moles.MStraat.HuurbedragenSetStraathuur">
            <summary>Sets the mole of <see cref="P:Monopoly.domein.velden.Straat.Huurbedragen"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.velden.Moles.MStraat.HypotheekGet">
            <summary>Sets the mole of <see cref="P:Monopoly.domein.velden.Straat.Hypotheek"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.velden.Moles.MStraat.HypotheekSetHypotheek">
            <summary>Sets the mole of <see cref="P:Monopoly.domein.velden.Straat.Hypotheek"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.velden.Moles.MStraat.KanBebouwdWordenMetHuis">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.velden.Straat.KanBebouwdWordenMetHuis"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.velden.Moles.MStraat.KoopprijsGet">
            <summary>Sets the mole of <see cref="P:Monopoly.domein.velden.Straat.Koopprijs"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.velden.Moles.MStraat.KoopprijsSetInt32">
            <summary>Sets the mole of <see cref="P:Monopoly.domein.velden.Straat.Koopprijs"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.velden.Moles.MStraat.PrijsVoorEenHuisGet">
            <summary>Sets the mole of <see cref="P:Monopoly.domein.velden.Straat.PrijsVoorEenHuis"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.velden.Moles.MStraat.PrijsVoorEenHuisSetInt32">
            <summary>Sets the mole of <see cref="P:Monopoly.domein.velden.Straat.PrijsVoorEenHuis"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.velden.Moles.MStraat.SetStadStad">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.velden.Straat.SetStad(Monopoly.domein.Stad)"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.velden.Moles.MStraat.StadGet">
            <summary>Sets the mole of <see cref="P:Monopoly.domein.velden.Straat.Stad"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.velden.Moles.MStraat.StadSetStad">
            <summary>Sets the mole of <see cref="P:Monopoly.domein.velden.Straat.Stad"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.velden.Moles.MStraat.VerkoopHuis">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.velden.Straat.VerkoopHuis"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.velden.Moles.MStraat.VerkoopSpeler">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.velden.Straat.Verkoop(Monopoly.domein.Speler)"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.velden.Moles.MStraat._signalHuurUpdateb__0IHuurObserver">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.velden.Straat.&lt;signalHuurUpdate&gt;b__0(Monopoly.domein.velden.IHuurObserver)"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.velden.Moles.MStraat.addObserverIHuurObserver">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.velden.Straat.addObserver(Monopoly.domein.velden.IHuurObserver)"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.velden.Moles.MStraat.huurUpdateVeld">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.velden.Straat.huurUpdate(Monopoly.domein.velden.Veld)"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.velden.Moles.MStraat.signalHuurUpdate">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.velden.Straat.signalHuurUpdate"/>
            </summary>
        </member>
        <member name="T:Monopoly.domein.velden.Moles.MStraat.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="P:Monopoly.domein.velden.Moles.MStraat.AllInstances.AantalHuizenGet">
            <summary>Sets the mole of <see cref="P:Monopoly.domein.velden.Straat.AantalHuizen"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.velden.Moles.MStraat.AllInstances.AantalHuizenSetInt32">
            <summary>Sets the mole of <see cref="P:Monopoly.domein.velden.Straat.AantalHuizen"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.velden.Moles.MStraat.AllInstances.Bebouw">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.velden.Straat.Bebouw"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.velden.Moles.MStraat.AllInstances.BepaalGebeurtenis">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.velden.Straat.BepaalGebeurtenis"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.velden.Moles.MStraat.AllInstances.BepaalHuurprijs">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.velden.Straat.BepaalHuurprijs"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.velden.Moles.MStraat.AllInstances.EigenaarGet">
            <summary>Sets the mole of <see cref="P:Monopoly.domein.velden.Straat.Eigenaar"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.velden.Moles.MStraat.AllInstances.EigenaarSetSpeler">
            <summary>Sets the mole of <see cref="P:Monopoly.domein.velden.Straat.Eigenaar"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.velden.Moles.MStraat.AllInstances.HuurbedragenGet">
            <summary>Sets the mole of <see cref="P:Monopoly.domein.velden.Straat.Huurbedragen"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.velden.Moles.MStraat.AllInstances.HuurbedragenSetStraathuur">
            <summary>Sets the mole of <see cref="P:Monopoly.domein.velden.Straat.Huurbedragen"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.velden.Moles.MStraat.AllInstances.HypotheekGet">
            <summary>Sets the mole of <see cref="P:Monopoly.domein.velden.Straat.Hypotheek"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.velden.Moles.MStraat.AllInstances.HypotheekSetHypotheek">
            <summary>Sets the mole of <see cref="P:Monopoly.domein.velden.Straat.Hypotheek"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.velden.Moles.MStraat.AllInstances.KanBebouwdWordenMetHuis">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.velden.Straat.KanBebouwdWordenMetHuis"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.velden.Moles.MStraat.AllInstances.KoopprijsGet">
            <summary>Sets the mole of <see cref="P:Monopoly.domein.velden.Straat.Koopprijs"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.velden.Moles.MStraat.AllInstances.KoopprijsSetInt32">
            <summary>Sets the mole of <see cref="P:Monopoly.domein.velden.Straat.Koopprijs"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.velden.Moles.MStraat.AllInstances.PrijsVoorEenHuisGet">
            <summary>Sets the mole of <see cref="P:Monopoly.domein.velden.Straat.PrijsVoorEenHuis"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.velden.Moles.MStraat.AllInstances.PrijsVoorEenHuisSetInt32">
            <summary>Sets the mole of <see cref="P:Monopoly.domein.velden.Straat.PrijsVoorEenHuis"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.velden.Moles.MStraat.AllInstances.SetStadStad">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.velden.Straat.SetStad(Monopoly.domein.Stad)"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.velden.Moles.MStraat.AllInstances.StadGet">
            <summary>Sets the mole of <see cref="P:Monopoly.domein.velden.Straat.Stad"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.velden.Moles.MStraat.AllInstances.StadSetStad">
            <summary>Sets the mole of <see cref="P:Monopoly.domein.velden.Straat.Stad"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.velden.Moles.MStraat.AllInstances.VerkoopHuis">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.velden.Straat.VerkoopHuis"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.velden.Moles.MStraat.AllInstances.VerkoopSpeler">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.velden.Straat.Verkoop(Monopoly.domein.Speler)"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.velden.Moles.MStraat.AllInstances._signalHuurUpdateb__0IHuurObserver">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.velden.Straat.&lt;signalHuurUpdate&gt;b__0(Monopoly.domein.velden.IHuurObserver)"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.velden.Moles.MStraat.AllInstances.addObserverIHuurObserver">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.velden.Straat.addObserver(Monopoly.domein.velden.IHuurObserver)"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.velden.Moles.MStraat.AllInstances.huurUpdateVeld">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.velden.Straat.huurUpdate(Monopoly.domein.velden.Veld)"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.velden.Moles.MStraat.AllInstances.signalHuurUpdate">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.velden.Straat.signalHuurUpdate"/>
            </summary>
        </member>
        <member name="T:Monopoly.builders.Moles.MStraatbuilder">
            <summary>Mole type of <see cref="T:Monopoly.builders.Straatbuilder"/>
            .</summary>
        </member>
        <member name="M:Monopoly.builders.Moles.MStraatbuilder.#ctor">
            <summary>Initializes a new mole</summary>
        </member>
        <member name="M:Monopoly.builders.Moles.MStraatbuilder.#ctor(Monopoly.builders.Straatbuilder)">
            <summary>Initializes a new mole for the given instance</summary>
        </member>
        <member name="M:Monopoly.builders.Moles.MStraatbuilder.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:Monopoly.builders.Moles.MStraatbuilder.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Monopoly.builders.Moles.MStraatbuilder.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Monopoly.builders.Moles.MStraatbuilder.Build">
            <summary>Sets the mole of <see cref="M:Monopoly.builders.Straatbuilder.Build"/>
            </summary>
        </member>
        <member name="P:Monopoly.builders.Moles.MStraatbuilder.BuildAmsterdam">
            <summary>Sets the mole of <see cref="M:Monopoly.builders.Straatbuilder.BuildAmsterdam"/>
            </summary>
        </member>
        <member name="P:Monopoly.builders.Moles.MStraatbuilder.BuildArnhem">
            <summary>Sets the mole of <see cref="M:Monopoly.builders.Straatbuilder.BuildArnhem"/>
            </summary>
        </member>
        <member name="P:Monopoly.builders.Moles.MStraatbuilder.BuildDenhaag">
            <summary>Sets the mole of <see cref="M:Monopoly.builders.Straatbuilder.BuildDenhaag"/>
            </summary>
        </member>
        <member name="P:Monopoly.builders.Moles.MStraatbuilder.BuildGroningen">
            <summary>Sets the mole of <see cref="M:Monopoly.builders.Straatbuilder.BuildGroningen"/>
            </summary>
        </member>
        <member name="P:Monopoly.builders.Moles.MStraatbuilder.BuildHaarlem">
            <summary>Sets the mole of <see cref="M:Monopoly.builders.Straatbuilder.BuildHaarlem"/>
            </summary>
        </member>
        <member name="P:Monopoly.builders.Moles.MStraatbuilder.BuildOnsdorp">
            <summary>Sets the mole of <see cref="M:Monopoly.builders.Straatbuilder.BuildOnsdorp"/>
            </summary>
        </member>
        <member name="P:Monopoly.builders.Moles.MStraatbuilder.BuildRotterdam">
            <summary>Sets the mole of <see cref="M:Monopoly.builders.Straatbuilder.BuildRotterdam"/>
            </summary>
        </member>
        <member name="P:Monopoly.builders.Moles.MStraatbuilder.BuildUtrecht">
            <summary>Sets the mole of <see cref="M:Monopoly.builders.Straatbuilder.BuildUtrecht"/>
            </summary>
        </member>
        <member name="P:Monopoly.builders.Moles.MStraatbuilder.Constructor">
            <summary>Sets the mole of <see cref="M:Monopoly.builders.Straatbuilder.#ctor"/>
            </summary>
        </member>
        <member name="P:Monopoly.builders.Moles.MStraatbuilder.NaamString">
            <summary>Sets the mole of <see cref="M:Monopoly.builders.Straatbuilder.Naam(System.String)"/>
            </summary>
        </member>
        <member name="P:Monopoly.builders.Moles.MStraatbuilder.StratenGet">
            <summary>Sets the mole of <see cref="P:Monopoly.builders.Straatbuilder.Straten"/>
            </summary>
        </member>
        <member name="P:Monopoly.builders.Moles.MStraatbuilder.StratenSetListOfStraat">
            <summary>Sets the mole of <see cref="P:Monopoly.builders.Straatbuilder.Straten"/>
            </summary>
        </member>
        <member name="T:Monopoly.builders.Moles.MStraatbuilder.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="P:Monopoly.builders.Moles.MStraatbuilder.AllInstances.Build">
            <summary>Sets the mole of <see cref="M:Monopoly.builders.Straatbuilder.Build"/>
            </summary>
        </member>
        <member name="P:Monopoly.builders.Moles.MStraatbuilder.AllInstances.BuildAmsterdam">
            <summary>Sets the mole of <see cref="M:Monopoly.builders.Straatbuilder.BuildAmsterdam"/>
            </summary>
        </member>
        <member name="P:Monopoly.builders.Moles.MStraatbuilder.AllInstances.BuildArnhem">
            <summary>Sets the mole of <see cref="M:Monopoly.builders.Straatbuilder.BuildArnhem"/>
            </summary>
        </member>
        <member name="P:Monopoly.builders.Moles.MStraatbuilder.AllInstances.BuildDenhaag">
            <summary>Sets the mole of <see cref="M:Monopoly.builders.Straatbuilder.BuildDenhaag"/>
            </summary>
        </member>
        <member name="P:Monopoly.builders.Moles.MStraatbuilder.AllInstances.BuildGroningen">
            <summary>Sets the mole of <see cref="M:Monopoly.builders.Straatbuilder.BuildGroningen"/>
            </summary>
        </member>
        <member name="P:Monopoly.builders.Moles.MStraatbuilder.AllInstances.BuildHaarlem">
            <summary>Sets the mole of <see cref="M:Monopoly.builders.Straatbuilder.BuildHaarlem"/>
            </summary>
        </member>
        <member name="P:Monopoly.builders.Moles.MStraatbuilder.AllInstances.BuildOnsdorp">
            <summary>Sets the mole of <see cref="M:Monopoly.builders.Straatbuilder.BuildOnsdorp"/>
            </summary>
        </member>
        <member name="P:Monopoly.builders.Moles.MStraatbuilder.AllInstances.BuildRotterdam">
            <summary>Sets the mole of <see cref="M:Monopoly.builders.Straatbuilder.BuildRotterdam"/>
            </summary>
        </member>
        <member name="P:Monopoly.builders.Moles.MStraatbuilder.AllInstances.BuildUtrecht">
            <summary>Sets the mole of <see cref="M:Monopoly.builders.Straatbuilder.BuildUtrecht"/>
            </summary>
        </member>
        <member name="P:Monopoly.builders.Moles.MStraatbuilder.AllInstances.NaamString">
            <summary>Sets the mole of <see cref="M:Monopoly.builders.Straatbuilder.Naam(System.String)"/>
            </summary>
        </member>
        <member name="P:Monopoly.builders.Moles.MStraatbuilder.AllInstances.StratenGet">
            <summary>Sets the mole of <see cref="P:Monopoly.builders.Straatbuilder.Straten"/>
            </summary>
        </member>
        <member name="P:Monopoly.builders.Moles.MStraatbuilder.AllInstances.StratenSetListOfStraat">
            <summary>Sets the mole of <see cref="P:Monopoly.builders.Straatbuilder.Straten"/>
            </summary>
        </member>
        <member name="T:Monopoly.domein.Moles.MStraathuur">
            <summary>Mole type of <see cref="T:Monopoly.domein.Straathuur"/>
            .</summary>
        </member>
        <member name="M:Monopoly.domein.Moles.MStraathuur.#ctor">
            <summary>Initializes a new mole</summary>
        </member>
        <member name="M:Monopoly.domein.Moles.MStraathuur.#ctor(Monopoly.domein.Straathuur)">
            <summary>Initializes a new mole for the given instance</summary>
        </member>
        <member name="M:Monopoly.domein.Moles.MStraathuur.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:Monopoly.domein.Moles.MStraathuur.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:Monopoly.domein.Moles.MStraathuur.Bind(Monopoly.domein.IHuurprijsBepaler)">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MStraathuur.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MStraathuur.BepaalHuurprijsIHypotheekveld">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.Straathuur.BepaalHuurprijs(Monopoly.domein.velden.IHypotheekveld)"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MStraathuur.ConstructorInt32Int32Int32Int32Int32Int32">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.Straathuur.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MStraathuur.HuurprijzenGet">
            <summary>Sets the mole of <see cref="P:Monopoly.domein.Straathuur.Huurprijzen"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MStraathuur.HuurprijzenSetListOfInt32">
            <summary>Sets the mole of <see cref="P:Monopoly.domein.Straathuur.Huurprijzen"/>
            </summary>
        </member>
        <member name="T:Monopoly.domein.Moles.MStraathuur.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MStraathuur.AllInstances.BepaalHuurprijsIHypotheekveld">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.Straathuur.BepaalHuurprijs(Monopoly.domein.velden.IHypotheekveld)"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MStraathuur.AllInstances.HuurprijzenGet">
            <summary>Sets the mole of <see cref="P:Monopoly.domein.Straathuur.Huurprijzen"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MStraathuur.AllInstances.HuurprijzenSetListOfInt32">
            <summary>Sets the mole of <see cref="P:Monopoly.domein.Straathuur.Huurprijzen"/>
            </summary>
        </member>
        <member name="T:Monopoly.domein.velden.Moles.MVeld">
            <summary>Mole type of <see cref="T:Monopoly.domein.velden.Veld"/>
            .</summary>
        </member>
        <member name="M:Monopoly.domein.velden.Moles.MVeld.#ctor(Monopoly.domein.velden.Veld)">
            <summary>Initializes a new mole for the given instance</summary>
        </member>
        <member name="M:Monopoly.domein.velden.Moles.MVeld.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:Monopoly.domein.velden.Moles.MVeld.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:Monopoly.domein.velden.Moles.MVeld.Bind(Monopoly.domein.velden.IHuurObservable)">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="M:Monopoly.domein.velden.Moles.MVeld.Bind(Monopoly.domein.velden.IVeld)">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="P:Monopoly.domein.velden.Moles.MVeld.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Monopoly.domein.velden.Moles.MVeld.ConstructorString">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.velden.Veld.#ctor(System.String)"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.velden.Moles.MVeld.EqualsObject">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.velden.Veld.Equals(System.Object)"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.velden.Moles.MVeld.GetHashCode">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.velden.Veld.GetHashCode"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.velden.Moles.MVeld.NaamGet">
            <summary>Sets the mole of <see cref="P:Monopoly.domein.velden.Veld.Naam"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.velden.Moles.MVeld.NaamMonopolydomeinveldenIVeldget">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.velden.Veld.Monopoly.domein.velden.IVeld.get_Naam"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.velden.Moles.MVeld.NaamSetString">
            <summary>Sets the mole of <see cref="P:Monopoly.domein.velden.Veld.Naam"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.velden.Moles.MVeld.ToString">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.velden.Veld.ToString"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.velden.Moles.MVeld.addObserverIHuurObserver">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.velden.Veld.addObserver(Monopoly.domein.velden.IHuurObserver)"/>
            </summary>
        </member>
        <member name="T:Monopoly.domein.velden.Moles.MVeld.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="P:Monopoly.domein.velden.Moles.MVeld.AllInstances.EqualsObject">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.velden.Veld.Equals(System.Object)"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.velden.Moles.MVeld.AllInstances.GetHashCode01">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.velden.Veld.GetHashCode"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.velden.Moles.MVeld.AllInstances.NaamGet">
            <summary>Sets the mole of <see cref="P:Monopoly.domein.velden.Veld.Naam"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.velden.Moles.MVeld.AllInstances.NaamMonopolydomeinveldenIVeldget">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.velden.Veld.Monopoly.domein.velden.IVeld.get_Naam"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.velden.Moles.MVeld.AllInstances.NaamSetString">
            <summary>Sets the mole of <see cref="P:Monopoly.domein.velden.Veld.Naam"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.velden.Moles.MVeld.AllInstances.ToString01">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.velden.Veld.ToString"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.velden.Moles.MVeld.AllInstances.addObserverIHuurObserver">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.velden.Veld.addObserver(Monopoly.domein.velden.IHuurObserver)"/>
            </summary>
        </member>
        <member name="T:Monopoly.domein.labels.Moles.MVeldnamen">
            <summary>Mole type of <see cref="T:Monopoly.domein.labels.Veldnamen"/>
            .</summary>
        </member>
        <member name="M:Monopoly.domein.labels.Moles.MVeldnamen.#ctor">
            <summary>Initializes a new mole</summary>
        </member>
        <member name="M:Monopoly.domein.labels.Moles.MVeldnamen.#ctor(Monopoly.domein.labels.Veldnamen)">
            <summary>Initializes a new mole for the given instance</summary>
        </member>
        <member name="M:Monopoly.domein.labels.Moles.MVeldnamen.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:Monopoly.domein.labels.Moles.MVeldnamen.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Monopoly.domein.labels.Moles.MVeldnamen.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Monopoly.domein.labels.Moles.MVeldnamen.Constructor">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.labels.Veldnamen.#ctor"/>
            </summary>
        </member>
        <member name="T:Monopoly.domein.labels.Moles.MVeldnamen.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="T:Monopoly.domein.gebeurtenissen.Moles.MVerkoopHuis">
            <summary>Mole type of <see cref="T:Monopoly.domein.gebeurtenissen.VerkoopHuis"/>
            .</summary>
        </member>
        <member name="M:Monopoly.domein.gebeurtenissen.Moles.MVerkoopHuis.#ctor">
            <summary>Initializes a new mole</summary>
        </member>
        <member name="M:Monopoly.domein.gebeurtenissen.Moles.MVerkoopHuis.#ctor(Monopoly.domein.gebeurtenissen.VerkoopHuis)">
            <summary>Initializes a new mole for the given instance</summary>
        </member>
        <member name="M:Monopoly.domein.gebeurtenissen.Moles.MVerkoopHuis.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:Monopoly.domein.gebeurtenissen.Moles.MVerkoopHuis.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:Monopoly.domein.gebeurtenissen.Moles.MVerkoopHuis.Bind(Monopoly.domein.IGebeurtenis)">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="P:Monopoly.domein.gebeurtenissen.Moles.MVerkoopHuis.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Monopoly.domein.gebeurtenissen.Moles.MVerkoopHuis.Constructor">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.gebeurtenissen.VerkoopHuis.#ctor"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.gebeurtenissen.Moles.MVerkoopHuis.IsUitvoerbaarSpeler">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.gebeurtenissen.VerkoopHuis.IsUitvoerbaar(Monopoly.domein.Speler)"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.gebeurtenissen.Moles.MVerkoopHuis.IsVerplicht">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.gebeurtenissen.VerkoopHuis.IsVerplicht"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.gebeurtenissen.Moles.MVerkoopHuis.VoeruitSpeler">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.gebeurtenissen.VerkoopHuis.Voeruit(Monopoly.domein.Speler)"/>
            </summary>
        </member>
        <member name="T:Monopoly.domein.gebeurtenissen.Moles.MVerkoopHuis.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="P:Monopoly.domein.gebeurtenissen.Moles.MVerkoopHuis.AllInstances.IsUitvoerbaarSpeler">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.gebeurtenissen.VerkoopHuis.IsUitvoerbaar(Monopoly.domein.Speler)"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.gebeurtenissen.Moles.MVerkoopHuis.AllInstances.IsVerplicht">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.gebeurtenissen.VerkoopHuis.IsVerplicht"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.gebeurtenissen.Moles.MVerkoopHuis.AllInstances.VoeruitSpeler">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.gebeurtenissen.VerkoopHuis.Voeruit(Monopoly.domein.Speler)"/>
            </summary>
        </member>
        <member name="T:Monopoly.domein.gebeurtenissen.Moles.MVerplaatsSpeler">
            <summary>Mole type of <see cref="T:Monopoly.domein.gebeurtenissen.VerplaatsSpeler"/>
            .</summary>
        </member>
        <member name="M:Monopoly.domein.gebeurtenissen.Moles.MVerplaatsSpeler.#ctor">
            <summary>Initializes a new mole</summary>
        </member>
        <member name="M:Monopoly.domein.gebeurtenissen.Moles.MVerplaatsSpeler.#ctor(Monopoly.domein.gebeurtenissen.VerplaatsSpeler)">
            <summary>Initializes a new mole for the given instance</summary>
        </member>
        <member name="M:Monopoly.domein.gebeurtenissen.Moles.MVerplaatsSpeler.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:Monopoly.domein.gebeurtenissen.Moles.MVerplaatsSpeler.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:Monopoly.domein.gebeurtenissen.Moles.MVerplaatsSpeler.Bind(Monopoly.domein.IGebeurtenis)">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="P:Monopoly.domein.gebeurtenissen.Moles.MVerplaatsSpeler.AantalPositiesGet">
            <summary>Sets the mole of <see cref="P:Monopoly.domein.gebeurtenissen.VerplaatsSpeler.AantalPosities"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.gebeurtenissen.Moles.MVerplaatsSpeler.AantalPositiesSetInt32">
            <summary>Sets the mole of <see cref="P:Monopoly.domein.gebeurtenissen.VerplaatsSpeler.AantalPosities"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.gebeurtenissen.Moles.MVerplaatsSpeler.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Monopoly.domein.gebeurtenissen.Moles.MVerplaatsSpeler.ConstructorStringInt32">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.gebeurtenissen.VerplaatsSpeler.#ctor(System.String,System.Int32)"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.gebeurtenissen.Moles.MVerplaatsSpeler.ConstructorStringVeld">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.gebeurtenissen.VerplaatsSpeler.#ctor(System.String,Monopoly.domein.velden.Veld)"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.gebeurtenissen.Moles.MVerplaatsSpeler.CreateVerplaatsAchteruitStringInt32">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.gebeurtenissen.VerplaatsSpeler.CreateVerplaatsAchteruit(System.String,System.Int32)"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.gebeurtenissen.Moles.MVerplaatsSpeler.CreateVerplaatsAchteruitStringVeld">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.gebeurtenissen.VerplaatsSpeler.CreateVerplaatsAchteruit(System.String,Monopoly.domein.velden.Veld)"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.gebeurtenissen.Moles.MVerplaatsSpeler.CreateVerplaatsVooruitGeenStartgeldStringInt32">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.gebeurtenissen.VerplaatsSpeler.CreateVerplaatsVooruitGeenStartgeld(System.String,System.Int32)"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.gebeurtenissen.Moles.MVerplaatsSpeler.CreateVerplaatsVooruitGeenStartgeldStringVeld">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.gebeurtenissen.VerplaatsSpeler.CreateVerplaatsVooruitGeenStartgeld(System.String,Monopoly.domein.velden.Veld)"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.gebeurtenissen.Moles.MVerplaatsSpeler.CreateVerplaatsVooruitStringInt32">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.gebeurtenissen.VerplaatsSpeler.CreateVerplaatsVooruit(System.String,System.Int32)"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.gebeurtenissen.Moles.MVerplaatsSpeler.CreateVerplaatsVooruitStringVeld">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.gebeurtenissen.VerplaatsSpeler.CreateVerplaatsVooruit(System.String,Monopoly.domein.velden.Veld)"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.gebeurtenissen.Moles.MVerplaatsSpeler.IsUitvoerbaarSpeler">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.gebeurtenissen.VerplaatsSpeler.IsUitvoerbaar(Monopoly.domein.Speler)"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.gebeurtenissen.Moles.MVerplaatsSpeler.IsVerplicht">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.gebeurtenissen.VerplaatsSpeler.IsVerplicht"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.gebeurtenissen.Moles.MVerplaatsSpeler.NieuwePositieGet">
            <summary>Sets the mole of <see cref="P:Monopoly.domein.gebeurtenissen.VerplaatsSpeler.NieuwePositie"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.gebeurtenissen.Moles.MVerplaatsSpeler.NieuwePositieSetVeld">
            <summary>Sets the mole of <see cref="P:Monopoly.domein.gebeurtenissen.VerplaatsSpeler.NieuwePositie"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.gebeurtenissen.Moles.MVerplaatsSpeler.OntvangGeenStartgeldGet">
            <summary>Sets the mole of <see cref="P:Monopoly.domein.gebeurtenissen.VerplaatsSpeler.OntvangGeenStartgeld"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.gebeurtenissen.Moles.MVerplaatsSpeler.OntvangGeenStartgeldSetBoolean">
            <summary>Sets the mole of <see cref="P:Monopoly.domein.gebeurtenissen.VerplaatsSpeler.OntvangGeenStartgeld"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.gebeurtenissen.Moles.MVerplaatsSpeler.VoeruitSpeler">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.gebeurtenissen.VerplaatsSpeler.Voeruit(Monopoly.domein.Speler)"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.gebeurtenissen.Moles.MVerplaatsSpeler.spelerIsGevangeneSpeler">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.gebeurtenissen.VerplaatsSpeler.spelerIsGevangene(Monopoly.domein.Speler)"/>
            </summary>
        </member>
        <member name="T:Monopoly.domein.gebeurtenissen.Moles.MVerplaatsSpeler.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="P:Monopoly.domein.gebeurtenissen.Moles.MVerplaatsSpeler.AllInstances.AantalPositiesGet">
            <summary>Sets the mole of <see cref="P:Monopoly.domein.gebeurtenissen.VerplaatsSpeler.AantalPosities"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.gebeurtenissen.Moles.MVerplaatsSpeler.AllInstances.AantalPositiesSetInt32">
            <summary>Sets the mole of <see cref="P:Monopoly.domein.gebeurtenissen.VerplaatsSpeler.AantalPosities"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.gebeurtenissen.Moles.MVerplaatsSpeler.AllInstances.IsUitvoerbaarSpeler">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.gebeurtenissen.VerplaatsSpeler.IsUitvoerbaar(Monopoly.domein.Speler)"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.gebeurtenissen.Moles.MVerplaatsSpeler.AllInstances.IsVerplicht">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.gebeurtenissen.VerplaatsSpeler.IsVerplicht"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.gebeurtenissen.Moles.MVerplaatsSpeler.AllInstances.NieuwePositieGet">
            <summary>Sets the mole of <see cref="P:Monopoly.domein.gebeurtenissen.VerplaatsSpeler.NieuwePositie"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.gebeurtenissen.Moles.MVerplaatsSpeler.AllInstances.NieuwePositieSetVeld">
            <summary>Sets the mole of <see cref="P:Monopoly.domein.gebeurtenissen.VerplaatsSpeler.NieuwePositie"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.gebeurtenissen.Moles.MVerplaatsSpeler.AllInstances.OntvangGeenStartgeldGet">
            <summary>Sets the mole of <see cref="P:Monopoly.domein.gebeurtenissen.VerplaatsSpeler.OntvangGeenStartgeld"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.gebeurtenissen.Moles.MVerplaatsSpeler.AllInstances.OntvangGeenStartgeldSetBoolean">
            <summary>Sets the mole of <see cref="P:Monopoly.domein.gebeurtenissen.VerplaatsSpeler.OntvangGeenStartgeld"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.gebeurtenissen.Moles.MVerplaatsSpeler.AllInstances.VoeruitSpeler">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.gebeurtenissen.VerplaatsSpeler.Voeruit(Monopoly.domein.Speler)"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.gebeurtenissen.Moles.MVerplaatsSpeler.AllInstances.spelerIsGevangeneSpeler">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.gebeurtenissen.VerplaatsSpeler.spelerIsGevangene(Monopoly.domein.Speler)"/>
            </summary>
        </member>
        <member name="T:Monopoly.domein.gebeurtenissen.Moles.MVrij">
            <summary>Mole type of <see cref="T:Monopoly.domein.gebeurtenissen.Vrij"/>
            .</summary>
        </member>
        <member name="M:Monopoly.domein.gebeurtenissen.Moles.MVrij.#ctor">
            <summary>Initializes a new mole</summary>
        </member>
        <member name="M:Monopoly.domein.gebeurtenissen.Moles.MVrij.#ctor(Monopoly.domein.gebeurtenissen.Vrij)">
            <summary>Initializes a new mole for the given instance</summary>
        </member>
        <member name="M:Monopoly.domein.gebeurtenissen.Moles.MVrij.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:Monopoly.domein.gebeurtenissen.Moles.MVrij.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:Monopoly.domein.gebeurtenissen.Moles.MVrij.Bind(Monopoly.domein.IGebeurtenis)">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="P:Monopoly.domein.gebeurtenissen.Moles.MVrij.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Monopoly.domein.gebeurtenissen.Moles.MVrij.ConstructorString">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.gebeurtenissen.Vrij.#ctor(System.String)"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.gebeurtenissen.Moles.MVrij.IsUitvoerbaarSpeler">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.gebeurtenissen.Vrij.IsUitvoerbaar(Monopoly.domein.Speler)"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.gebeurtenissen.Moles.MVrij.IsVerplicht">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.gebeurtenissen.Vrij.IsVerplicht"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.gebeurtenissen.Moles.MVrij.TekstGet">
            <summary>Sets the mole of <see cref="P:Monopoly.domein.gebeurtenissen.Vrij.Tekst"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.gebeurtenissen.Moles.MVrij.TekstSetString">
            <summary>Sets the mole of <see cref="P:Monopoly.domein.gebeurtenissen.Vrij.Tekst"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.gebeurtenissen.Moles.MVrij.VoeruitSpeler">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.gebeurtenissen.Vrij.Voeruit(Monopoly.domein.Speler)"/>
            </summary>
        </member>
        <member name="T:Monopoly.domein.gebeurtenissen.Moles.MVrij.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="P:Monopoly.domein.gebeurtenissen.Moles.MVrij.AllInstances.IsUitvoerbaarSpeler">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.gebeurtenissen.Vrij.IsUitvoerbaar(Monopoly.domein.Speler)"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.gebeurtenissen.Moles.MVrij.AllInstances.IsVerplicht">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.gebeurtenissen.Vrij.IsVerplicht"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.gebeurtenissen.Moles.MVrij.AllInstances.TekstGet">
            <summary>Sets the mole of <see cref="P:Monopoly.domein.gebeurtenissen.Vrij.Tekst"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.gebeurtenissen.Moles.MVrij.AllInstances.TekstSetString">
            <summary>Sets the mole of <see cref="P:Monopoly.domein.gebeurtenissen.Vrij.Tekst"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.gebeurtenissen.Moles.MVrij.AllInstances.VoeruitSpeler">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.gebeurtenissen.Vrij.Voeruit(Monopoly.domein.Speler)"/>
            </summary>
        </member>
        <member name="T:Monopoly.domein.Moles.MWorp">
            <summary>Mole type of <see cref="T:Monopoly.domein.Worp"/>
            .</summary>
        </member>
        <member name="M:Monopoly.domein.Moles.MWorp.#ctor">
            <summary>Initializes a new mole</summary>
        </member>
        <member name="M:Monopoly.domein.Moles.MWorp.#ctor(Monopoly.domein.Worp)">
            <summary>Initializes a new mole for the given instance</summary>
        </member>
        <member name="M:Monopoly.domein.Moles.MWorp.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:Monopoly.domein.Moles.MWorp.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MWorp.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MWorp.Constructor">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.Worp.#ctor"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MWorp.Gedobbeldeworp1Get">
            <summary>Sets the mole of <see cref="P:Monopoly.domein.Worp.Gedobbeldeworp1"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MWorp.Gedobbeldeworp1SetInt32">
            <summary>Sets the mole of <see cref="P:Monopoly.domein.Worp.Gedobbeldeworp1"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MWorp.Gedobbeldeworp2Get">
            <summary>Sets the mole of <see cref="P:Monopoly.domein.Worp.Gedobbeldeworp2"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MWorp.Gedobbeldeworp2SetInt32">
            <summary>Sets the mole of <see cref="P:Monopoly.domein.Worp.Gedobbeldeworp2"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MWorp.GooiDobbelstenen">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.Worp.GooiDobbelstenen"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MWorp.IsDubbelGegooid">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.Worp.IsDubbelGegooid"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MWorp.ToString">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.Worp.ToString"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MWorp.Totaal">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.Worp.Totaal"/>
            </summary>
        </member>
        <member name="T:Monopoly.domein.Moles.MWorp.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MWorp.AllInstances.Gedobbeldeworp1Get">
            <summary>Sets the mole of <see cref="P:Monopoly.domein.Worp.Gedobbeldeworp1"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MWorp.AllInstances.Gedobbeldeworp1SetInt32">
            <summary>Sets the mole of <see cref="P:Monopoly.domein.Worp.Gedobbeldeworp1"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MWorp.AllInstances.Gedobbeldeworp2Get">
            <summary>Sets the mole of <see cref="P:Monopoly.domein.Worp.Gedobbeldeworp2"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MWorp.AllInstances.Gedobbeldeworp2SetInt32">
            <summary>Sets the mole of <see cref="P:Monopoly.domein.Worp.Gedobbeldeworp2"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MWorp.AllInstances.IsDubbelGegooid">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.Worp.IsDubbelGegooid"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MWorp.AllInstances.ToString01">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.Worp.ToString"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.Moles.MWorp.AllInstances.Totaal">
            <summary>Sets the mole of <see cref="M:Monopoly.domein.Worp.Totaal"/>
            </summary>
        </member>
        <member name="T:Monopoly.AI.VoorzichtigeHuisjesmelker.Moles.SAIDecider">
            <summary>Stub type of <see cref="T:Monopoly.AI.VoorzichtigeHuisjesmelker.AIDecider"/>
            .</summary>
        </member>
        <member name="M:Monopoly.AI.VoorzichtigeHuisjesmelker.Moles.SAIDecider.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Monopoly.AI.VoorzichtigeHuisjesmelker.Moles.SAIDecider.InitializeStub">
            <summary>Initializes a new instance of type SAIDecider</summary>
        </member>
        <member name="P:Monopoly.AI.VoorzichtigeHuisjesmelker.Moles.SAIDecider.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Monopoly.AI.VoorzichtigeHuisjesmelker.Moles.SAIDecider.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="T:Monopoly.AI.RisicoNemendeGrondAankoper.Moles.SAIDecider01">
            <summary>Stub type of <see cref="T:Monopoly.AI.RisicoNemendeGrondAankoper.AIDecider"/>
            .</summary>
        </member>
        <member name="M:Monopoly.AI.RisicoNemendeGrondAankoper.Moles.SAIDecider01.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Monopoly.AI.RisicoNemendeGrondAankoper.Moles.SAIDecider01.InitializeStub">
            <summary>Initializes a new instance of type SAIDecider01</summary>
        </member>
        <member name="P:Monopoly.AI.RisicoNemendeGrondAankoper.Moles.SAIDecider01.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Monopoly.AI.RisicoNemendeGrondAankoper.Moles.SAIDecider01.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="T:Monopoly.builders.Moles.SAlgemeenFondsKaartenbuilder">
            <summary>Stub type of <see cref="T:Monopoly.builders.AlgemeenFondsKaartenbuilder"/>
            .</summary>
        </member>
        <member name="M:Monopoly.builders.Moles.SAlgemeenFondsKaartenbuilder.#ctor(Monopoly.domein.Spelbord)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Monopoly.builders.Moles.SAlgemeenFondsKaartenbuilder.InitializeStub">
            <summary>Initializes a new instance of type SAlgemeenFondsKaartenbuilder</summary>
        </member>
        <member name="P:Monopoly.builders.Moles.SAlgemeenFondsKaartenbuilder.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Monopoly.builders.Moles.SAlgemeenFondsKaartenbuilder.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="T:Monopoly.domein.velden.Moles.SBedrijf">
            <summary>Stub type of <see cref="T:Monopoly.domein.velden.Bedrijf"/>
            .</summary>
        </member>
        <member name="M:Monopoly.domein.velden.Moles.SBedrijf.#ctor(System.String,System.Int32,Monopoly.domein.IHuurprijsBepaler)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="F:Monopoly.domein.velden.Moles.SBedrijf.AddObserverIHuurObserver">
            <summary>Sets the stub of <see cref="M:Monopoly.domein.velden.Bedrijf.addObserver(Monopoly.domein.velden.IHuurObserver)"/>
            </summary>
        </member>
        <member name="M:Monopoly.domein.velden.Moles.SBedrijf.BepaalGebeurtenis">
            <summary>Sets the stub of <see cref="M:Monopoly.domein.velden.Bedrijf.BepaalGebeurtenis"/>
            </summary>
        </member>
        <member name="F:Monopoly.domein.velden.Moles.SBedrijf.BepaalGebeurtenis01">
            <summary>Sets the stub of <see cref="M:Monopoly.domein.velden.Bedrijf.BepaalGebeurtenis"/>
            </summary>
        </member>
        <member name="M:Monopoly.domein.velden.Moles.SBedrijf.Equals(System.Object)">
            <summary>Sets the stub of <see cref="M:Monopoly.domein.velden.Veld.Equals(System.Object)"/>
            </summary>
        </member>
        <member name="F:Monopoly.domein.velden.Moles.SBedrijf.EqualsObject">
            <summary>Sets the stub of <see cref="M:Monopoly.domein.velden.Veld.Equals(System.Object)"/>
            </summary>
        </member>
        <member name="M:Monopoly.domein.velden.Moles.SBedrijf.GetHashCode">
            <summary>Sets the stub of <see cref="M:Monopoly.domein.velden.Veld.GetHashCode"/>
            </summary>
        </member>
        <member name="F:Monopoly.domein.velden.Moles.SBedrijf.GetHashCode01">
            <summary>Sets the stub of <see cref="M:Monopoly.domein.velden.Veld.GetHashCode"/>
            </summary>
        </member>
        <member name="M:Monopoly.domein.velden.Moles.SBedrijf.InitializeStub">
            <summary>Initializes a new instance of type SBedrijf</summary>
        </member>
        <member name="M:Monopoly.domein.velden.Moles.SBedrijf.ToString">
            <summary>Sets the stub of <see cref="M:Monopoly.domein.velden.Veld.ToString"/>
            </summary>
        </member>
        <member name="F:Monopoly.domein.velden.Moles.SBedrijf.ToString01">
            <summary>Sets the stub of <see cref="M:Monopoly.domein.velden.Veld.ToString"/>
            </summary>
        </member>
        <member name="M:Monopoly.domein.velden.Moles.SBedrijf.addObserver(Monopoly.domein.velden.IHuurObserver)">
            <summary>Sets the stub of <see cref="M:Monopoly.domein.velden.Bedrijf.addObserver(Monopoly.domein.velden.IHuurObserver)"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.velden.Moles.SBedrijf.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Monopoly.domein.velden.Moles.SBedrijf.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="T:Monopoly.domein.Moles.SBezittingen">
            <summary>Stub type of <see cref="T:Monopoly.domein.Bezittingen"/>
            .</summary>
        </member>
        <member name="M:Monopoly.domein.Moles.SBezittingen.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Monopoly.domein.Moles.SBezittingen.InitializeStub">
            <summary>Initializes a new instance of type SBezittingen</summary>
        </member>
        <member name="P:Monopoly.domein.Moles.SBezittingen.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Monopoly.domein.Moles.SBezittingen.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="T:Monopoly.AI.Moles.SDefaultDecider">
            <summary>Stub type of <see cref="T:Monopoly.AI.DefaultDecider"/>
            .</summary>
        </member>
        <member name="M:Monopoly.AI.Moles.SDefaultDecider.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Monopoly.AI.Moles.SDefaultDecider.InitializeStub">
            <summary>Initializes a new instance of type SDefaultDecider</summary>
        </member>
        <member name="P:Monopoly.AI.Moles.SDefaultDecider.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Monopoly.AI.Moles.SDefaultDecider.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="T:Monopoly.AI.Moles.SDefaultDecision">
            <summary>Stub type of <see cref="T:Monopoly.AI.DefaultDecision"/>
            .</summary>
        </member>
        <member name="M:Monopoly.AI.Moles.SDefaultDecision.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Monopoly.AI.Moles.SDefaultDecision.InitializeStub">
            <summary>Initializes a new instance of type SDefaultDecision</summary>
        </member>
        <member name="P:Monopoly.AI.Moles.SDefaultDecision.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Monopoly.AI.Moles.SDefaultDecision.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="T:Monopoly.AI.RisicoNemendeGrondAankoper.Moles.SDoeBodOpAndermansStraatDecision">
            <summary>Stub type of <see cref="T:Monopoly.AI.RisicoNemendeGrondAankoper.DoeBodOpAndermansStraatDecision"/>
            .</summary>
        </member>
        <member name="M:Monopoly.AI.RisicoNemendeGrondAankoper.Moles.SDoeBodOpAndermansStraatDecision.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Monopoly.AI.RisicoNemendeGrondAankoper.Moles.SDoeBodOpAndermansStraatDecision.InitializeStub">
            <summary>Initializes a new instance of type SDoeBodOpAndermansStraatDecision</summary>
        </member>
        <member name="P:Monopoly.AI.RisicoNemendeGrondAankoper.Moles.SDoeBodOpAndermansStraatDecision.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Monopoly.AI.RisicoNemendeGrondAankoper.Moles.SDoeBodOpAndermansStraatDecision.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="T:Monopoly.AI.VoorzichtigeHuisjesmelker.Moles.SDoeBodOpAndermansStraatDecision01">
            <summary>Stub type of <see cref="T:Monopoly.AI.VoorzichtigeHuisjesmelker.DoeBodOpAndermansStraatDecision"/>
            .</summary>
        </member>
        <member name="M:Monopoly.AI.VoorzichtigeHuisjesmelker.Moles.SDoeBodOpAndermansStraatDecision01.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Monopoly.AI.VoorzichtigeHuisjesmelker.Moles.SDoeBodOpAndermansStraatDecision01.InitializeStub">
            <summary>Initializes a new instance of type SDoeBodOpAndermansStraatDecision01</summary>
        </member>
        <member name="P:Monopoly.AI.VoorzichtigeHuisjesmelker.Moles.SDoeBodOpAndermansStraatDecision01.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Monopoly.AI.VoorzichtigeHuisjesmelker.Moles.SDoeBodOpAndermansStraatDecision01.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="T:Monopoly.domein.gebeurtenissen.Moles.SDoeBodOpAndersmansStraat">
            <summary>Stub type of <see cref="T:Monopoly.domein.gebeurtenissen.DoeBodOpAndersmansStraat"/>
            .</summary>
        </member>
        <member name="M:Monopoly.domein.gebeurtenissen.Moles.SDoeBodOpAndersmansStraat.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Monopoly.domein.gebeurtenissen.Moles.SDoeBodOpAndersmansStraat.Equals(System.Object)">
            <summary>Sets the stub of <see cref="M:Monopoly.domein.gebeurtenissen.Gebeurtenis.Equals(System.Object)"/>
            </summary>
        </member>
        <member name="F:Monopoly.domein.gebeurtenissen.Moles.SDoeBodOpAndersmansStraat.EqualsObject">
            <summary>Sets the stub of <see cref="M:Monopoly.domein.gebeurtenissen.Gebeurtenis.Equals(System.Object)"/>
            </summary>
        </member>
        <member name="M:Monopoly.domein.gebeurtenissen.Moles.SDoeBodOpAndersmansStraat.GetHashCode">
            <summary>Sets the stub of <see cref="M:Monopoly.domein.gebeurtenissen.Gebeurtenis.GetHashCode"/>
            </summary>
        </member>
        <member name="F:Monopoly.domein.gebeurtenissen.Moles.SDoeBodOpAndersmansStraat.GetHashCode01">
            <summary>Sets the stub of <see cref="M:Monopoly.domein.gebeurtenissen.Gebeurtenis.GetHashCode"/>
            </summary>
        </member>
        <member name="M:Monopoly.domein.gebeurtenissen.Moles.SDoeBodOpAndersmansStraat.InitializeStub">
            <summary>Initializes a new instance of type SDoeBodOpAndersmansStraat</summary>
        </member>
        <member name="M:Monopoly.domein.gebeurtenissen.Moles.SDoeBodOpAndersmansStraat.IsUitvoerbaar(Monopoly.domein.Speler)">
            <summary>Sets the stub of <see cref="M:Monopoly.domein.gebeurtenissen.DoeBodOpAndersmansStraat.IsUitvoerbaar(Monopoly.domein.Speler)"/>
            </summary>
        </member>
        <member name="F:Monopoly.domein.gebeurtenissen.Moles.SDoeBodOpAndersmansStraat.IsUitvoerbaarSpeler">
            <summary>Sets the stub of <see cref="M:Monopoly.domein.gebeurtenissen.DoeBodOpAndersmansStraat.IsUitvoerbaar(Monopoly.domein.Speler)"/>
            </summary>
        </member>
        <member name="M:Monopoly.domein.gebeurtenissen.Moles.SDoeBodOpAndersmansStraat.IsVerplicht">
            <summary>Sets the stub of <see cref="M:Monopoly.domein.gebeurtenissen.DoeBodOpAndersmansStraat.IsVerplicht"/>
            </summary>
        </member>
        <member name="F:Monopoly.domein.gebeurtenissen.Moles.SDoeBodOpAndersmansStraat.IsVerplicht01">
            <summary>Sets the stub of <see cref="M:Monopoly.domein.gebeurtenissen.DoeBodOpAndersmansStraat.IsVerplicht"/>
            </summary>
        </member>
        <member name="M:Monopoly.domein.gebeurtenissen.Moles.SDoeBodOpAndersmansStraat.ToString">
            <summary>Sets the stub of <see cref="M:Monopoly.domein.gebeurtenissen.Gebeurtenis.ToString"/>
            </summary>
        </member>
        <member name="F:Monopoly.domein.gebeurtenissen.Moles.SDoeBodOpAndersmansStraat.ToString01">
            <summary>Sets the stub of <see cref="M:Monopoly.domein.gebeurtenissen.Gebeurtenis.ToString"/>
            </summary>
        </member>
        <member name="M:Monopoly.domein.gebeurtenissen.Moles.SDoeBodOpAndersmansStraat.Voeruit(Monopoly.domein.Speler)">
            <summary>Sets the stub of <see cref="M:Monopoly.domein.gebeurtenissen.DoeBodOpAndersmansStraat.Voeruit(Monopoly.domein.Speler)"/>
            </summary>
        </member>
        <member name="F:Monopoly.domein.gebeurtenissen.Moles.SDoeBodOpAndersmansStraat.VoeruitSpeler">
            <summary>Sets the stub of <see cref="M:Monopoly.domein.gebeurtenissen.DoeBodOpAndersmansStraat.Voeruit(Monopoly.domein.Speler)"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.gebeurtenissen.Moles.SDoeBodOpAndersmansStraat.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Monopoly.domein.gebeurtenissen.Moles.SDoeBodOpAndersmansStraat.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="T:Monopoly.domein.gebeurtenissen.Moles.SEindeBeurt">
            <summary>Stub type of <see cref="T:Monopoly.domein.gebeurtenissen.EindeBeurt"/>
            .</summary>
        </member>
        <member name="M:Monopoly.domein.gebeurtenissen.Moles.SEindeBeurt.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Monopoly.domein.gebeurtenissen.Moles.SEindeBeurt.Equals(System.Object)">
            <summary>Sets the stub of <see cref="M:Monopoly.domein.gebeurtenissen.Gebeurtenis.Equals(System.Object)"/>
            </summary>
        </member>
        <member name="F:Monopoly.domein.gebeurtenissen.Moles.SEindeBeurt.EqualsObject">
            <summary>Sets the stub of <see cref="M:Monopoly.domein.gebeurtenissen.Gebeurtenis.Equals(System.Object)"/>
            </summary>
        </member>
        <member name="M:Monopoly.domein.gebeurtenissen.Moles.SEindeBeurt.GetHashCode">
            <summary>Sets the stub of <see cref="M:Monopoly.domein.gebeurtenissen.Gebeurtenis.GetHashCode"/>
            </summary>
        </member>
        <member name="F:Monopoly.domein.gebeurtenissen.Moles.SEindeBeurt.GetHashCode01">
            <summary>Sets the stub of <see cref="M:Monopoly.domein.gebeurtenissen.Gebeurtenis.GetHashCode"/>
            </summary>
        </member>
        <member name="M:Monopoly.domein.gebeurtenissen.Moles.SEindeBeurt.InitializeStub">
            <summary>Initializes a new instance of type SEindeBeurt</summary>
        </member>
        <member name="M:Monopoly.domein.gebeurtenissen.Moles.SEindeBeurt.IsUitvoerbaar(Monopoly.domein.Speler)">
            <summary>Sets the stub of <see cref="M:Monopoly.domein.gebeurtenissen.EindeBeurt.IsUitvoerbaar(Monopoly.domein.Speler)"/>
            </summary>
        </member>
        <member name="F:Monopoly.domein.gebeurtenissen.Moles.SEindeBeurt.IsUitvoerbaarSpeler">
            <summary>Sets the stub of <see cref="M:Monopoly.domein.gebeurtenissen.EindeBeurt.IsUitvoerbaar(Monopoly.domein.Speler)"/>
            </summary>
        </member>
        <member name="M:Monopoly.domein.gebeurtenissen.Moles.SEindeBeurt.IsVerplicht">
            <summary>Sets the stub of <see cref="M:Monopoly.domein.gebeurtenissen.EindeBeurt.IsVerplicht"/>
            </summary>
        </member>
        <member name="F:Monopoly.domein.gebeurtenissen.Moles.SEindeBeurt.IsVerplicht01">
            <summary>Sets the stub of <see cref="M:Monopoly.domein.gebeurtenissen.EindeBeurt.IsVerplicht"/>
            </summary>
        </member>
        <member name="M:Monopoly.domein.gebeurtenissen.Moles.SEindeBeurt.ToString">
            <summary>Sets the stub of <see cref="M:Monopoly.domein.gebeurtenissen.Gebeurtenis.ToString"/>
            </summary>
        </member>
        <member name="F:Monopoly.domein.gebeurtenissen.Moles.SEindeBeurt.ToString01">
            <summary>Sets the stub of <see cref="M:Monopoly.domein.gebeurtenissen.Gebeurtenis.ToString"/>
            </summary>
        </member>
        <member name="M:Monopoly.domein.gebeurtenissen.Moles.SEindeBeurt.Voeruit(Monopoly.domein.Speler)">
            <summary>Sets the stub of <see cref="M:Monopoly.domein.gebeurtenissen.EindeBeurt.Voeruit(Monopoly.domein.Speler)"/>
            </summary>
        </member>
        <member name="F:Monopoly.domein.gebeurtenissen.Moles.SEindeBeurt.VoeruitSpeler">
            <summary>Sets the stub of <see cref="M:Monopoly.domein.gebeurtenissen.EindeBeurt.Voeruit(Monopoly.domein.Speler)"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.gebeurtenissen.Moles.SEindeBeurt.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Monopoly.domein.gebeurtenissen.Moles.SEindeBeurt.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="T:Monopoly.domein.gebeurtenissen.Moles.SGaDirectNaarDeGevangenis">
            <summary>Stub type of <see cref="T:Monopoly.domein.gebeurtenissen.GaDirectNaarDeGevangenis"/>
            .</summary>
        </member>
        <member name="M:Monopoly.domein.gebeurtenissen.Moles.SGaDirectNaarDeGevangenis.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Monopoly.domein.gebeurtenissen.Moles.SGaDirectNaarDeGevangenis.Equals(System.Object)">
            <summary>Sets the stub of <see cref="M:Monopoly.domein.gebeurtenissen.Gebeurtenis.Equals(System.Object)"/>
            </summary>
        </member>
        <member name="F:Monopoly.domein.gebeurtenissen.Moles.SGaDirectNaarDeGevangenis.EqualsObject">
            <summary>Sets the stub of <see cref="M:Monopoly.domein.gebeurtenissen.Gebeurtenis.Equals(System.Object)"/>
            </summary>
        </member>
        <member name="M:Monopoly.domein.gebeurtenissen.Moles.SGaDirectNaarDeGevangenis.GetHashCode">
            <summary>Sets the stub of <see cref="M:Monopoly.domein.gebeurtenissen.Gebeurtenis.GetHashCode"/>
            </summary>
        </member>
        <member name="F:Monopoly.domein.gebeurtenissen.Moles.SGaDirectNaarDeGevangenis.GetHashCode01">
            <summary>Sets the stub of <see cref="M:Monopoly.domein.gebeurtenissen.Gebeurtenis.GetHashCode"/>
            </summary>
        </member>
        <member name="M:Monopoly.domein.gebeurtenissen.Moles.SGaDirectNaarDeGevangenis.InitializeStub">
            <summary>Initializes a new instance of type SGaDirectNaarDeGevangenis</summary>
        </member>
        <member name="M:Monopoly.domein.gebeurtenissen.Moles.SGaDirectNaarDeGevangenis.IsUitvoerbaar(Monopoly.domein.Speler)">
            <summary>Sets the stub of <see cref="M:Monopoly.domein.gebeurtenissen.GaDirectNaarDeGevangenis.IsUitvoerbaar(Monopoly.domein.Speler)"/>
            </summary>
        </member>
        <member name="F:Monopoly.domein.gebeurtenissen.Moles.SGaDirectNaarDeGevangenis.IsUitvoerbaarSpeler">
            <summary>Sets the stub of <see cref="M:Monopoly.domein.gebeurtenissen.GaDirectNaarDeGevangenis.IsUitvoerbaar(Monopoly.domein.Speler)"/>
            </summary>
        </member>
        <member name="M:Monopoly.domein.gebeurtenissen.Moles.SGaDirectNaarDeGevangenis.IsVerplicht">
            <summary>Sets the stub of <see cref="M:Monopoly.domein.gebeurtenissen.GaDirectNaarDeGevangenis.IsVerplicht"/>
            </summary>
        </member>
        <member name="F:Monopoly.domein.gebeurtenissen.Moles.SGaDirectNaarDeGevangenis.IsVerplicht01">
            <summary>Sets the stub of <see cref="M:Monopoly.domein.gebeurtenissen.GaDirectNaarDeGevangenis.IsVerplicht"/>
            </summary>
        </member>
        <member name="M:Monopoly.domein.gebeurtenissen.Moles.SGaDirectNaarDeGevangenis.ToString">
            <summary>Sets the stub of <see cref="M:Monopoly.domein.gebeurtenissen.Gebeurtenis.ToString"/>
            </summary>
        </member>
        <member name="F:Monopoly.domein.gebeurtenissen.Moles.SGaDirectNaarDeGevangenis.ToString01">
            <summary>Sets the stub of <see cref="M:Monopoly.domein.gebeurtenissen.Gebeurtenis.ToString"/>
            </summary>
        </member>
        <member name="M:Monopoly.domein.gebeurtenissen.Moles.SGaDirectNaarDeGevangenis.Voeruit(Monopoly.domein.Speler)">
            <summary>Sets the stub of <see cref="M:Monopoly.domein.gebeurtenissen.GaDirectNaarDeGevangenis.Voeruit(Monopoly.domein.Speler)"/>
            </summary>
        </member>
        <member name="F:Monopoly.domein.gebeurtenissen.Moles.SGaDirectNaarDeGevangenis.VoeruitSpeler">
            <summary>Sets the stub of <see cref="M:Monopoly.domein.gebeurtenissen.GaDirectNaarDeGevangenis.Voeruit(Monopoly.domein.Speler)"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.gebeurtenissen.Moles.SGaDirectNaarDeGevangenis.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Monopoly.domein.gebeurtenissen.Moles.SGaDirectNaarDeGevangenis.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="T:Monopoly.domein.gebeurtenissen.Moles.SGebeurtenis">
            <summary>Stub type of <see cref="T:Monopoly.domein.gebeurtenissen.Gebeurtenis"/>
            .</summary>
        </member>
        <member name="M:Monopoly.domein.gebeurtenissen.Moles.SGebeurtenis.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Monopoly.domein.gebeurtenissen.Moles.SGebeurtenis.Equals(System.Object)">
            <summary>Sets the stub of <see cref="M:Monopoly.domein.gebeurtenissen.Gebeurtenis.Equals(System.Object)"/>
            </summary>
        </member>
        <member name="F:Monopoly.domein.gebeurtenissen.Moles.SGebeurtenis.EqualsObject">
            <summary>Sets the stub of <see cref="M:Monopoly.domein.gebeurtenissen.Gebeurtenis.Equals(System.Object)"/>
            </summary>
        </member>
        <member name="M:Monopoly.domein.gebeurtenissen.Moles.SGebeurtenis.GetHashCode">
            <summary>Sets the stub of <see cref="M:Monopoly.domein.gebeurtenissen.Gebeurtenis.GetHashCode"/>
            </summary>
        </member>
        <member name="F:Monopoly.domein.gebeurtenissen.Moles.SGebeurtenis.GetHashCode01">
            <summary>Sets the stub of <see cref="M:Monopoly.domein.gebeurtenissen.Gebeurtenis.GetHashCode"/>
            </summary>
        </member>
        <member name="M:Monopoly.domein.gebeurtenissen.Moles.SGebeurtenis.InitializeStub">
            <summary>Initializes a new instance of type SGebeurtenis</summary>
        </member>
        <member name="M:Monopoly.domein.gebeurtenissen.Moles.SGebeurtenis.IsUitvoerbaar(Monopoly.domein.Speler)">
            <summary>Sets the stub of <see cref="M:Monopoly.domein.gebeurtenissen.Gebeurtenis.IsUitvoerbaar(Monopoly.domein.Speler)"/>
            </summary>
        </member>
        <member name="F:Monopoly.domein.gebeurtenissen.Moles.SGebeurtenis.IsUitvoerbaarSpeler">
            <summary>Sets the stub of <see cref="M:Monopoly.domein.gebeurtenissen.Gebeurtenis.IsUitvoerbaar(Monopoly.domein.Speler)"/>
            </summary>
        </member>
        <member name="M:Monopoly.domein.gebeurtenissen.Moles.SGebeurtenis.IsVerplicht">
            <summary>Sets the stub of <see cref="M:Monopoly.domein.gebeurtenissen.Gebeurtenis.IsVerplicht"/>
            </summary>
        </member>
        <member name="F:Monopoly.domein.gebeurtenissen.Moles.SGebeurtenis.IsVerplicht01">
            <summary>Sets the stub of <see cref="M:Monopoly.domein.gebeurtenissen.Gebeurtenis.IsVerplicht"/>
            </summary>
        </member>
        <member name="M:Monopoly.domein.gebeurtenissen.Moles.SGebeurtenis.ToString">
            <summary>Sets the stub of <see cref="M:Monopoly.domein.gebeurtenissen.Gebeurtenis.ToString"/>
            </summary>
        </member>
        <member name="F:Monopoly.domein.gebeurtenissen.Moles.SGebeurtenis.ToString01">
            <summary>Sets the stub of <see cref="M:Monopoly.domein.gebeurtenissen.Gebeurtenis.ToString"/>
            </summary>
        </member>
        <member name="M:Monopoly.domein.gebeurtenissen.Moles.SGebeurtenis.Voeruit(Monopoly.domein.Speler)">
            <summary>Sets the stub of <see cref="M:Monopoly.domein.gebeurtenissen.Gebeurtenis.Voeruit(Monopoly.domein.Speler)"/>
            </summary>
        </member>
        <member name="F:Monopoly.domein.gebeurtenissen.Moles.SGebeurtenis.VoeruitSpeler">
            <summary>Sets the stub of <see cref="M:Monopoly.domein.gebeurtenissen.Gebeurtenis.Voeruit(Monopoly.domein.Speler)"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.gebeurtenissen.Moles.SGebeurtenis.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Monopoly.domein.gebeurtenissen.Moles.SGebeurtenis.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="T:Monopoly.domein.labels.Moles.SGebeurtenisMelding">
            <summary>Stub type of <see cref="T:Monopoly.domein.labels.GebeurtenisMelding"/>
            .</summary>
        </member>
        <member name="M:Monopoly.domein.labels.Moles.SGebeurtenisMelding.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Monopoly.domein.labels.Moles.SGebeurtenisMelding.InitializeStub">
            <summary>Initializes a new instance of type SGebeurtenisMelding</summary>
        </member>
        <member name="P:Monopoly.domein.labels.Moles.SGebeurtenisMelding.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Monopoly.domein.labels.Moles.SGebeurtenisMelding.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="T:Monopoly.domein.gebeurtenissen.Moles.SGebeurtenisStapel">
            <summary>Stub type of <see cref="T:Monopoly.domein.gebeurtenissen.GebeurtenisStapel"/>
            .</summary>
        </member>
        <member name="M:Monopoly.domein.gebeurtenissen.Moles.SGebeurtenisStapel.#ctor(System.Collections.Generic.List{Monopoly.domein.IGebeurtenis},System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Monopoly.domein.gebeurtenissen.Moles.SGebeurtenisStapel.Equals(System.Object)">
            <summary>Sets the stub of <see cref="M:Monopoly.domein.gebeurtenissen.Gebeurtenis.Equals(System.Object)"/>
            </summary>
        </member>
        <member name="F:Monopoly.domein.gebeurtenissen.Moles.SGebeurtenisStapel.EqualsObject">
            <summary>Sets the stub of <see cref="M:Monopoly.domein.gebeurtenissen.Gebeurtenis.Equals(System.Object)"/>
            </summary>
        </member>
        <member name="M:Monopoly.domein.gebeurtenissen.Moles.SGebeurtenisStapel.GetHashCode">
            <summary>Sets the stub of <see cref="M:Monopoly.domein.gebeurtenissen.Gebeurtenis.GetHashCode"/>
            </summary>
        </member>
        <member name="F:Monopoly.domein.gebeurtenissen.Moles.SGebeurtenisStapel.GetHashCode01">
            <summary>Sets the stub of <see cref="M:Monopoly.domein.gebeurtenissen.Gebeurtenis.GetHashCode"/>
            </summary>
        </member>
        <member name="M:Monopoly.domein.gebeurtenissen.Moles.SGebeurtenisStapel.InitializeStub">
            <summary>Initializes a new instance of type SGebeurtenisStapel</summary>
        </member>
        <member name="M:Monopoly.domein.gebeurtenissen.Moles.SGebeurtenisStapel.IsUitvoerbaar(Monopoly.domein.Speler)">
            <summary>Sets the stub of <see cref="M:Monopoly.domein.gebeurtenissen.GebeurtenisStapel.IsUitvoerbaar(Monopoly.domein.Speler)"/>
            </summary>
        </member>
        <member name="F:Monopoly.domein.gebeurtenissen.Moles.SGebeurtenisStapel.IsUitvoerbaarSpeler">
            <summary>Sets the stub of <see cref="M:Monopoly.domein.gebeurtenissen.GebeurtenisStapel.IsUitvoerbaar(Monopoly.domein.Speler)"/>
            </summary>
        </member>
        <member name="M:Monopoly.domein.gebeurtenissen.Moles.SGebeurtenisStapel.IsVerplicht">
            <summary>Sets the stub of <see cref="M:Monopoly.domein.gebeurtenissen.GebeurtenisStapel.IsVerplicht"/>
            </summary>
        </member>
        <member name="F:Monopoly.domein.gebeurtenissen.Moles.SGebeurtenisStapel.IsVerplicht01">
            <summary>Sets the stub of <see cref="M:Monopoly.domein.gebeurtenissen.GebeurtenisStapel.IsVerplicht"/>
            </summary>
        </member>
        <member name="M:Monopoly.domein.gebeurtenissen.Moles.SGebeurtenisStapel.ToString">
            <summary>Sets the stub of <see cref="M:Monopoly.domein.gebeurtenissen.Gebeurtenis.ToString"/>
            </summary>
        </member>
        <member name="F:Monopoly.domein.gebeurtenissen.Moles.SGebeurtenisStapel.ToString01">
            <summary>Sets the stub of <see cref="M:Monopoly.domein.gebeurtenissen.Gebeurtenis.ToString"/>
            </summary>
        </member>
        <member name="M:Monopoly.domein.gebeurtenissen.Moles.SGebeurtenisStapel.Voeruit(Monopoly.domein.Speler)">
            <summary>Sets the stub of <see cref="M:Monopoly.domein.gebeurtenissen.GebeurtenisStapel.Voeruit(Monopoly.domein.Speler)"/>
            </summary>
        </member>
        <member name="F:Monopoly.domein.gebeurtenissen.Moles.SGebeurtenisStapel.VoeruitSpeler">
            <summary>Sets the stub of <see cref="M:Monopoly.domein.gebeurtenissen.GebeurtenisStapel.Voeruit(Monopoly.domein.Speler)"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.gebeurtenissen.Moles.SGebeurtenisStapel.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Monopoly.domein.gebeurtenissen.Moles.SGebeurtenisStapel.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="T:Monopoly.domein.Moles.SGebeurtenislijst">
            <summary>Stub type of <see cref="T:Monopoly.domein.Gebeurtenislijst"/>
            .</summary>
        </member>
        <member name="M:Monopoly.domein.Moles.SGebeurtenislijst.#ctor(Monopoly.domein.Speler)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Monopoly.domein.Moles.SGebeurtenislijst.InitializeStub">
            <summary>Initializes a new instance of type SGebeurtenislijst</summary>
        </member>
        <member name="P:Monopoly.domein.Moles.SGebeurtenislijst.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Monopoly.domein.Moles.SGebeurtenislijst.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="T:Monopoly.domein.gebeurtenissen.Moles.SGebeurtenisnamen">
            <summary>Stub type of <see cref="T:Monopoly.domein.gebeurtenissen.Gebeurtenisnamen"/>
            .</summary>
        </member>
        <member name="M:Monopoly.domein.gebeurtenissen.Moles.SGebeurtenisnamen.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Monopoly.domein.gebeurtenissen.Moles.SGebeurtenisnamen.InitializeStub">
            <summary>Initializes a new instance of type SGebeurtenisnamen</summary>
        </member>
        <member name="P:Monopoly.domein.gebeurtenissen.Moles.SGebeurtenisnamen.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Monopoly.domein.gebeurtenissen.Moles.SGebeurtenisnamen.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="T:Monopoly.domein.Moles.SGebeurtenisresult">
            <summary>Stub type of <see cref="T:Monopoly.domein.Gebeurtenisresult"/>
            .</summary>
        </member>
        <member name="M:Monopoly.domein.Moles.SGebeurtenisresult.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Monopoly.domein.Moles.SGebeurtenisresult.InitializeStub">
            <summary>Initializes a new instance of type SGebeurtenisresult</summary>
        </member>
        <member name="M:Monopoly.domein.Moles.SGebeurtenisresult.ToString">
            <summary>Sets the stub of <see cref="M:Monopoly.domein.Gebeurtenisresult.ToString"/>
            </summary>
        </member>
        <member name="F:Monopoly.domein.Moles.SGebeurtenisresult.ToString01">
            <summary>Sets the stub of <see cref="M:Monopoly.domein.Gebeurtenisresult.ToString"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.Moles.SGebeurtenisresult.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Monopoly.domein.Moles.SGebeurtenisresult.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="T:Monopoly.domein.velden.Moles.SGebeurtenisveld">
            <summary>Stub type of <see cref="T:Monopoly.domein.velden.Gebeurtenisveld"/>
            .</summary>
        </member>
        <member name="M:Monopoly.domein.velden.Moles.SGebeurtenisveld.#ctor(System.String,Monopoly.domein.IGebeurtenis)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="F:Monopoly.domein.velden.Moles.SGebeurtenisveld.AddObserverIHuurObserver">
            <summary>Sets the stub of <see cref="M:Monopoly.domein.velden.Veld.addObserver(Monopoly.domein.velden.IHuurObserver)"/>
            </summary>
        </member>
        <member name="M:Monopoly.domein.velden.Moles.SGebeurtenisveld.BepaalGebeurtenis">
            <summary>Sets the stub of <see cref="M:Monopoly.domein.velden.Gebeurtenisveld.BepaalGebeurtenis"/>
            </summary>
        </member>
        <member name="F:Monopoly.domein.velden.Moles.SGebeurtenisveld.BepaalGebeurtenis01">
            <summary>Sets the stub of <see cref="M:Monopoly.domein.velden.Gebeurtenisveld.BepaalGebeurtenis"/>
            </summary>
        </member>
        <member name="M:Monopoly.domein.velden.Moles.SGebeurtenisveld.Equals(System.Object)">
            <summary>Sets the stub of <see cref="M:Monopoly.domein.velden.Veld.Equals(System.Object)"/>
            </summary>
        </member>
        <member name="F:Monopoly.domein.velden.Moles.SGebeurtenisveld.EqualsObject">
            <summary>Sets the stub of <see cref="M:Monopoly.domein.velden.Veld.Equals(System.Object)"/>
            </summary>
        </member>
        <member name="M:Monopoly.domein.velden.Moles.SGebeurtenisveld.GetHashCode">
            <summary>Sets the stub of <see cref="M:Monopoly.domein.velden.Veld.GetHashCode"/>
            </summary>
        </member>
        <member name="F:Monopoly.domein.velden.Moles.SGebeurtenisveld.GetHashCode01">
            <summary>Sets the stub of <see cref="M:Monopoly.domein.velden.Veld.GetHashCode"/>
            </summary>
        </member>
        <member name="M:Monopoly.domein.velden.Moles.SGebeurtenisveld.InitializeStub">
            <summary>Initializes a new instance of type SGebeurtenisveld</summary>
        </member>
        <member name="M:Monopoly.domein.velden.Moles.SGebeurtenisveld.ToString">
            <summary>Sets the stub of <see cref="M:Monopoly.domein.velden.Veld.ToString"/>
            </summary>
        </member>
        <member name="F:Monopoly.domein.velden.Moles.SGebeurtenisveld.ToString01">
            <summary>Sets the stub of <see cref="M:Monopoly.domein.velden.Veld.ToString"/>
            </summary>
        </member>
        <member name="M:Monopoly.domein.velden.Moles.SGebeurtenisveld.addObserver(Monopoly.domein.velden.IHuurObserver)">
            <summary>Sets the stub of <see cref="M:Monopoly.domein.velden.Veld.addObserver(Monopoly.domein.velden.IHuurObserver)"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.velden.Moles.SGebeurtenisveld.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Monopoly.domein.velden.Moles.SGebeurtenisveld.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="T:Monopoly.builders.Moles.SGebeurtenisveldbuilder">
            <summary>Stub type of <see cref="T:Monopoly.builders.Gebeurtenisveldbuilder"/>
            .</summary>
        </member>
        <member name="M:Monopoly.builders.Moles.SGebeurtenisveldbuilder.#ctor(Monopoly.domein.Spelbord)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Monopoly.builders.Moles.SGebeurtenisveldbuilder.InitializeStub">
            <summary>Initializes a new instance of type SGebeurtenisveldbuilder</summary>
        </member>
        <member name="P:Monopoly.builders.Moles.SGebeurtenisveldbuilder.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Monopoly.builders.Moles.SGebeurtenisveldbuilder.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="T:Monopoly.domein.velden.Moles.SGevangenis">
            <summary>Stub type of <see cref="T:Monopoly.domein.velden.Gevangenis"/>
            .</summary>
        </member>
        <member name="M:Monopoly.domein.velden.Moles.SGevangenis.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="F:Monopoly.domein.velden.Moles.SGevangenis.AddObserverIHuurObserver">
            <summary>Sets the stub of <see cref="M:Monopoly.domein.velden.Veld.addObserver(Monopoly.domein.velden.IHuurObserver)"/>
            </summary>
        </member>
        <member name="M:Monopoly.domein.velden.Moles.SGevangenis.BepaalGebeurtenis">
            <summary>Sets the stub of <see cref="M:Monopoly.domein.velden.Gevangenis.BepaalGebeurtenis"/>
            </summary>
        </member>
        <member name="F:Monopoly.domein.velden.Moles.SGevangenis.BepaalGebeurtenis01">
            <summary>Sets the stub of <see cref="M:Monopoly.domein.velden.Gevangenis.BepaalGebeurtenis"/>
            </summary>
        </member>
        <member name="M:Monopoly.domein.velden.Moles.SGevangenis.Equals(System.Object)">
            <summary>Sets the stub of <see cref="M:Monopoly.domein.velden.Veld.Equals(System.Object)"/>
            </summary>
        </member>
        <member name="F:Monopoly.domein.velden.Moles.SGevangenis.EqualsObject">
            <summary>Sets the stub of <see cref="M:Monopoly.domein.velden.Veld.Equals(System.Object)"/>
            </summary>
        </member>
        <member name="M:Monopoly.domein.velden.Moles.SGevangenis.GetHashCode">
            <summary>Sets the stub of <see cref="M:Monopoly.domein.velden.Veld.GetHashCode"/>
            </summary>
        </member>
        <member name="F:Monopoly.domein.velden.Moles.SGevangenis.GetHashCode01">
            <summary>Sets the stub of <see cref="M:Monopoly.domein.velden.Veld.GetHashCode"/>
            </summary>
        </member>
        <member name="M:Monopoly.domein.velden.Moles.SGevangenis.InitializeStub">
            <summary>Initializes a new instance of type SGevangenis</summary>
        </member>
        <member name="M:Monopoly.domein.velden.Moles.SGevangenis.ToString">
            <summary>Sets the stub of <see cref="M:Monopoly.domein.velden.Veld.ToString"/>
            </summary>
        </member>
        <member name="F:Monopoly.domein.velden.Moles.SGevangenis.ToString01">
            <summary>Sets the stub of <see cref="M:Monopoly.domein.velden.Veld.ToString"/>
            </summary>
        </member>
        <member name="M:Monopoly.domein.velden.Moles.SGevangenis.addObserver(Monopoly.domein.velden.IHuurObserver)">
            <summary>Sets the stub of <see cref="M:Monopoly.domein.velden.Veld.addObserver(Monopoly.domein.velden.IHuurObserver)"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.velden.Moles.SGevangenis.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Monopoly.domein.velden.Moles.SGevangenis.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="T:Monopoly.domein.gebeurtenissen.Moles.SGooiDobbelstenen">
            <summary>Stub type of <see cref="T:Monopoly.domein.gebeurtenissen.GooiDobbelstenen"/>
            .</summary>
        </member>
        <member name="M:Monopoly.domein.gebeurtenissen.Moles.SGooiDobbelstenen.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Monopoly.domein.gebeurtenissen.Moles.SGooiDobbelstenen.Equals(System.Object)">
            <summary>Sets the stub of <see cref="M:Monopoly.domein.gebeurtenissen.Gebeurtenis.Equals(System.Object)"/>
            </summary>
        </member>
        <member name="F:Monopoly.domein.gebeurtenissen.Moles.SGooiDobbelstenen.EqualsObject">
            <summary>Sets the stub of <see cref="M:Monopoly.domein.gebeurtenissen.Gebeurtenis.Equals(System.Object)"/>
            </summary>
        </member>
        <member name="M:Monopoly.domein.gebeurtenissen.Moles.SGooiDobbelstenen.GetHashCode">
            <summary>Sets the stub of <see cref="M:Monopoly.domein.gebeurtenissen.Gebeurtenis.GetHashCode"/>
            </summary>
        </member>
        <member name="F:Monopoly.domein.gebeurtenissen.Moles.SGooiDobbelstenen.GetHashCode01">
            <summary>Sets the stub of <see cref="M:Monopoly.domein.gebeurtenissen.Gebeurtenis.GetHashCode"/>
            </summary>
        </member>
        <member name="M:Monopoly.domein.gebeurtenissen.Moles.SGooiDobbelstenen.InitializeStub">
            <summary>Initializes a new instance of type SGooiDobbelstenen</summary>
        </member>
        <member name="M:Monopoly.domein.gebeurtenissen.Moles.SGooiDobbelstenen.IsUitvoerbaar(Monopoly.domein.Speler)">
            <summary>Sets the stub of <see cref="M:Monopoly.domein.gebeurtenissen.GooiDobbelstenen.IsUitvoerbaar(Monopoly.domein.Speler)"/>
            </summary>
        </member>
        <member name="F:Monopoly.domein.gebeurtenissen.Moles.SGooiDobbelstenen.IsUitvoerbaarSpeler">
            <summary>Sets the stub of <see cref="M:Monopoly.domein.gebeurtenissen.GooiDobbelstenen.IsUitvoerbaar(Monopoly.domein.Speler)"/>
            </summary>
        </member>
        <member name="M:Monopoly.domein.gebeurtenissen.Moles.SGooiDobbelstenen.IsVerplicht">
            <summary>Sets the stub of <see cref="M:Monopoly.domein.gebeurtenissen.GooiDobbelstenen.IsVerplicht"/>
            </summary>
        </member>
        <member name="F:Monopoly.domein.gebeurtenissen.Moles.SGooiDobbelstenen.IsVerplicht01">
            <summary>Sets the stub of <see cref="M:Monopoly.domein.gebeurtenissen.GooiDobbelstenen.IsVerplicht"/>
            </summary>
        </member>
        <member name="M:Monopoly.domein.gebeurtenissen.Moles.SGooiDobbelstenen.ToString">
            <summary>Sets the stub of <see cref="M:Monopoly.domein.gebeurtenissen.Gebeurtenis.ToString"/>
            </summary>
        </member>
        <member name="F:Monopoly.domein.gebeurtenissen.Moles.SGooiDobbelstenen.ToString01">
            <summary>Sets the stub of <see cref="M:Monopoly.domein.gebeurtenissen.Gebeurtenis.ToString"/>
            </summary>
        </member>
        <member name="M:Monopoly.domein.gebeurtenissen.Moles.SGooiDobbelstenen.Voeruit(Monopoly.domein.Speler)">
            <summary>Sets the stub of <see cref="M:Monopoly.domein.gebeurtenissen.GooiDobbelstenen.Voeruit(Monopoly.domein.Speler)"/>
            </summary>
        </member>
        <member name="F:Monopoly.domein.gebeurtenissen.Moles.SGooiDobbelstenen.VoeruitSpeler">
            <summary>Sets the stub of <see cref="M:Monopoly.domein.gebeurtenissen.GooiDobbelstenen.Voeruit(Monopoly.domein.Speler)"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.gebeurtenissen.Moles.SGooiDobbelstenen.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Monopoly.domein.gebeurtenissen.Moles.SGooiDobbelstenen.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="T:Monopoly.domein.akties.Moles.SHypotheek">
            <summary>Stub type of <see cref="T:Monopoly.domein.akties.Hypotheek"/>
            .</summary>
        </member>
        <member name="M:Monopoly.domein.akties.Moles.SHypotheek.#ctor(Monopoly.domein.velden.IHypotheekveld)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Monopoly.domein.akties.Moles.SHypotheek.InitializeStub">
            <summary>Initializes a new instance of type SHypotheek</summary>
        </member>
        <member name="P:Monopoly.domein.akties.Moles.SHypotheek.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Monopoly.domein.akties.Moles.SHypotheek.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="T:Monopoly.AI.Moles.SIAIDecider">
            <summary>Stub type of <see cref="T:Monopoly.AI.IAIDecider"/>
            .</summary>
        </member>
        <member name="M:Monopoly.AI.Moles.SIAIDecider.#ctor">
            <summary>Initializes a new instance of type SIAIDecider</summary>
        </member>
        <member name="F:Monopoly.AI.Moles.SIAIDecider.AddDecisionStringIDecision">
            <summary>Sets the stub of <see cref="M:Monopoly.AI.IAIDecider.AddDecision(System.String,Monopoly.AI.IDecision)"/>
            </summary>
        </member>
        <member name="F:Monopoly.AI.Moles.SIAIDecider.DecideMonopolyspel">
            <summary>Sets the stub of <see cref="M:Monopoly.AI.IAIDecider.Decide(Monopoly.domein.Monopolyspel)"/>
            </summary>
        </member>
        <member name="M:Monopoly.AI.Moles.SIAIDecider.m::Monopoly#AI#IAIDecider#AddDecision(System.String,Monopoly.AI.IDecision)">
            <summary>Sets the stub of <see cref="M:Monopoly.AI.IAIDecider.AddDecision(System.String,Monopoly.AI.IDecision)"/>
            </summary>
        </member>
        <member name="M:Monopoly.AI.Moles.SIAIDecider.m::Monopoly#AI#IAIDecider#Decide(Monopoly.domein.Monopolyspel)">
            <summary>Sets the stub of <see cref="M:Monopoly.AI.IAIDecider.Decide(Monopoly.domein.Monopolyspel)"/>
            </summary>
        </member>
        <member name="T:Monopoly.AI.Moles.SIDecision">
            <summary>Stub type of <see cref="T:Monopoly.AI.IDecision"/>
            .</summary>
        </member>
        <member name="M:Monopoly.AI.Moles.SIDecision.#ctor">
            <summary>Initializes a new instance of type SIDecision</summary>
        </member>
        <member name="F:Monopoly.AI.Moles.SIDecision.DecideSpelerIGebeurtenis">
            <summary>Sets the stub of <see cref="M:Monopoly.AI.IDecision.decide(Monopoly.domein.Speler,Monopoly.domein.IGebeurtenis)"/>
            </summary>
        </member>
        <member name="M:Monopoly.AI.Moles.SIDecision.m::Monopoly#AI#IDecision#decide(Monopoly.domein.Speler,Monopoly.domein.IGebeurtenis)">
            <summary>Sets the stub of <see cref="M:Monopoly.AI.IDecision.decide(Monopoly.domein.Speler,Monopoly.domein.IGebeurtenis)"/>
            </summary>
        </member>
        <member name="T:Monopoly.domein.Moles.SIGebeurtenis">
            <summary>Stub type of <see cref="T:Monopoly.domein.IGebeurtenis"/>
            .</summary>
        </member>
        <member name="M:Monopoly.domein.Moles.SIGebeurtenis.#ctor">
            <summary>Initializes a new instance of type SIGebeurtenis</summary>
        </member>
        <member name="F:Monopoly.domein.Moles.SIGebeurtenis.IsUitvoerbaarSpeler">
            <summary>Sets the stub of <see cref="M:Monopoly.domein.IGebeurtenis.IsUitvoerbaar(Monopoly.domein.Speler)"/>
            </summary>
        </member>
        <member name="F:Monopoly.domein.Moles.SIGebeurtenis.IsVerplicht">
            <summary>Sets the stub of <see cref="M:Monopoly.domein.IGebeurtenis.IsVerplicht"/>
            </summary>
        </member>
        <member name="M:Monopoly.domein.Moles.SIGebeurtenis.m::Monopoly#domein#IGebeurtenis#IsUitvoerbaar(Monopoly.domein.Speler)">
            <summary>Sets the stub of <see cref="M:Monopoly.domein.IGebeurtenis.IsUitvoerbaar(Monopoly.domein.Speler)"/>
            </summary>
        </member>
        <member name="M:Monopoly.domein.Moles.SIGebeurtenis.m::Monopoly#domein#IGebeurtenis#IsVerplicht">
            <summary>Sets the stub of <see cref="M:Monopoly.domein.IGebeurtenis.IsVerplicht"/>
            </summary>
        </member>
        <member name="M:Monopoly.domein.Moles.SIGebeurtenis.m::Monopoly#domein#IGebeurtenis#Voeruit(Monopoly.domein.Speler)">
            <summary>Sets the stub of <see cref="M:Monopoly.domein.IGebeurtenis.Voeruit(Monopoly.domein.Speler)"/>
            </summary>
        </member>
        <member name="F:Monopoly.domein.Moles.SIGebeurtenis.NaamGet">
            <summary>Sets the stub of <see cref="P:Monopoly.domein.IGebeurtenis.Naam"/>
            </summary>
        </member>
        <member name="F:Monopoly.domein.Moles.SIGebeurtenis.VoeruitSpeler">
            <summary>Sets the stub of <see cref="M:Monopoly.domein.IGebeurtenis.Voeruit(Monopoly.domein.Speler)"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.Moles.SIGebeurtenis.m::Monopoly#domein#IGebeurtenis#Naam">
            <summary>Sets the stub of <see cref="P:Monopoly.domein.IGebeurtenis.Naam"/>
            </summary>
        </member>
        <member name="T:Monopoly.domein.velden.Moles.SIHuurObservable">
            <summary>Stub type of <see cref="T:Monopoly.domein.velden.IHuurObservable"/>
            .</summary>
        </member>
        <member name="M:Monopoly.domein.velden.Moles.SIHuurObservable.#ctor">
            <summary>Initializes a new instance of type SIHuurObservable</summary>
        </member>
        <member name="F:Monopoly.domein.velden.Moles.SIHuurObservable.AddObserverIHuurObserver">
            <summary>Sets the stub of <see cref="M:Monopoly.domein.velden.IHuurObservable.addObserver(Monopoly.domein.velden.IHuurObserver)"/>
            </summary>
        </member>
        <member name="M:Monopoly.domein.velden.Moles.SIHuurObservable.m::Monopoly#domein#velden#IHuurObservable#addObserver(Monopoly.domein.velden.IHuurObserver)">
            <summary>Sets the stub of <see cref="M:Monopoly.domein.velden.IHuurObservable.addObserver(Monopoly.domein.velden.IHuurObserver)"/>
            </summary>
        </member>
        <member name="T:Monopoly.domein.velden.Moles.SIHuurObserver">
            <summary>Stub type of <see cref="T:Monopoly.domein.velden.IHuurObserver"/>
            .</summary>
        </member>
        <member name="M:Monopoly.domein.velden.Moles.SIHuurObserver.#ctor">
            <summary>Initializes a new instance of type SIHuurObserver</summary>
        </member>
        <member name="F:Monopoly.domein.velden.Moles.SIHuurObserver.HuurUpdateVeld">
            <summary>Sets the stub of <see cref="M:Monopoly.domein.velden.IHuurObserver.huurUpdate(Monopoly.domein.velden.Veld)"/>
            </summary>
        </member>
        <member name="M:Monopoly.domein.velden.Moles.SIHuurObserver.m::Monopoly#domein#velden#IHuurObserver#huurUpdate(Monopoly.domein.velden.Veld)">
            <summary>Sets the stub of <see cref="M:Monopoly.domein.velden.IHuurObserver.huurUpdate(Monopoly.domein.velden.Veld)"/>
            </summary>
        </member>
        <member name="T:Monopoly.domein.Moles.SIHuurprijsBepaler">
            <summary>Stub type of <see cref="T:Monopoly.domein.IHuurprijsBepaler"/>
            .</summary>
        </member>
        <member name="M:Monopoly.domein.Moles.SIHuurprijsBepaler.#ctor">
            <summary>Initializes a new instance of type SIHuurprijsBepaler</summary>
        </member>
        <member name="F:Monopoly.domein.Moles.SIHuurprijsBepaler.BepaalHuurprijsIHypotheekveld">
            <summary>Sets the stub of <see cref="M:Monopoly.domein.IHuurprijsBepaler.BepaalHuurprijs(Monopoly.domein.velden.IHypotheekveld)"/>
            </summary>
        </member>
        <member name="M:Monopoly.domein.Moles.SIHuurprijsBepaler.m::Monopoly#domein#IHuurprijsBepaler#BepaalHuurprijs(Monopoly.domein.velden.IHypotheekveld)">
            <summary>Sets the stub of <see cref="M:Monopoly.domein.IHuurprijsBepaler.BepaalHuurprijs(Monopoly.domein.velden.IHypotheekveld)"/>
            </summary>
        </member>
        <member name="T:Monopoly.domein.velden.Moles.SIHypotheekveld">
            <summary>Stub type of <see cref="T:Monopoly.domein.velden.IHypotheekveld"/>
            .</summary>
        </member>
        <member name="M:Monopoly.domein.velden.Moles.SIHypotheekveld.#ctor">
            <summary>Initializes a new instance of type SIHypotheekveld</summary>
        </member>
        <member name="F:Monopoly.domein.velden.Moles.SIHypotheekveld.BepaalHuurprijs">
            <summary>Sets the stub of <see cref="M:Monopoly.domein.velden.IHypotheekveld.BepaalHuurprijs"/>
            </summary>
        </member>
        <member name="F:Monopoly.domein.velden.Moles.SIHypotheekveld.EigenaarGet">
            <summary>Sets the stub of <see cref="P:Monopoly.domein.velden.IHypotheekveld.Eigenaar"/>
            </summary>
        </member>
        <member name="F:Monopoly.domein.velden.Moles.SIHypotheekveld.HypotheekGet">
            <summary>Sets the stub of <see cref="P:Monopoly.domein.velden.IHypotheekveld.Hypotheek"/>
            </summary>
        </member>
        <member name="F:Monopoly.domein.velden.Moles.SIHypotheekveld.KoopprijsGet">
            <summary>Sets the stub of <see cref="P:Monopoly.domein.velden.IHypotheekveld.Koopprijs"/>
            </summary>
        </member>
        <member name="M:Monopoly.domein.velden.Moles.SIHypotheekveld.m::Monopoly#domein#velden#IHypotheekveld#BepaalHuurprijs">
            <summary>Sets the stub of <see cref="M:Monopoly.domein.velden.IHypotheekveld.BepaalHuurprijs"/>
            </summary>
        </member>
        <member name="M:Monopoly.domein.velden.Moles.SIHypotheekveld.m::Monopoly#domein#velden#IHypotheekveld#Verkoop(Monopoly.domein.Speler)">
            <summary>Sets the stub of <see cref="M:Monopoly.domein.velden.IHypotheekveld.Verkoop(Monopoly.domein.Speler)"/>
            </summary>
        </member>
        <member name="F:Monopoly.domein.velden.Moles.SIHypotheekveld.NaamGet">
            <summary>Sets the stub of <see cref="P:Monopoly.domein.velden.IVeld.Naam"/>
            </summary>
        </member>
        <member name="F:Monopoly.domein.velden.Moles.SIHypotheekveld.VerkoopSpeler">
            <summary>Sets the stub of <see cref="M:Monopoly.domein.velden.IHypotheekveld.Verkoop(Monopoly.domein.Speler)"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.velden.Moles.SIHypotheekveld.m::Monopoly#domein#velden#IHypotheekveld#Eigenaar">
            <summary>Sets the stub of <see cref="P:Monopoly.domein.velden.IHypotheekveld.Eigenaar"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.velden.Moles.SIHypotheekveld.m::Monopoly#domein#velden#IHypotheekveld#Hypotheek">
            <summary>Sets the stub of <see cref="P:Monopoly.domein.velden.IHypotheekveld.Hypotheek"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.velden.Moles.SIHypotheekveld.m::Monopoly#domein#velden#IHypotheekveld#Koopprijs">
            <summary>Sets the stub of <see cref="P:Monopoly.domein.velden.IHypotheekveld.Koopprijs"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.velden.Moles.SIHypotheekveld.m::Monopoly#domein#velden#IVeld#Naam">
            <summary>Sets the stub of <see cref="P:Monopoly.domein.velden.IVeld.Naam"/>
            </summary>
        </member>
        <member name="T:Monopoly.logger.Moles.SILogger">
            <summary>Stub type of <see cref="T:Monopoly.logger.ILogger"/>
            .</summary>
        </member>
        <member name="M:Monopoly.logger.Moles.SILogger.#ctor">
            <summary>Initializes a new instance of type SILogger</summary>
        </member>
        <member name="F:Monopoly.logger.Moles.SILogger.Finalize">
            <summary>Sets the stub of <see cref="M:Monopoly.logger.ILogger.finalize"/>
            </summary>
        </member>
        <member name="F:Monopoly.logger.Moles.SILogger.Initialize">
            <summary>Sets the stub of <see cref="M:Monopoly.logger.ILogger.initialize"/>
            </summary>
        </member>
        <member name="F:Monopoly.logger.Moles.SILogger.LogGebeurtenisString">
            <summary>Sets the stub of <see cref="M:Monopoly.logger.ILogger.logGebeurtenis(System.String)"/>
            </summary>
        </member>
        <member name="M:Monopoly.logger.Moles.SILogger.m::Monopoly#logger#ILogger#finalize">
            <summary>Sets the stub of <see cref="M:Monopoly.logger.ILogger.finalize"/>
            </summary>
        </member>
        <member name="M:Monopoly.logger.Moles.SILogger.m::Monopoly#logger#ILogger#initialize">
            <summary>Sets the stub of <see cref="M:Monopoly.logger.ILogger.initialize"/>
            </summary>
        </member>
        <member name="M:Monopoly.logger.Moles.SILogger.m::Monopoly#logger#ILogger#logGebeurtenis(System.String)">
            <summary>Sets the stub of <see cref="M:Monopoly.logger.ILogger.logGebeurtenis(System.String)"/>
            </summary>
        </member>
        <member name="M:Monopoly.logger.Moles.SILogger.m::Monopoly#logger#ILogger#rondeInfo(System.Int32)">
            <summary>Sets the stub of <see cref="M:Monopoly.logger.ILogger.rondeInfo(System.Int32)"/>
            </summary>
        </member>
        <member name="M:Monopoly.logger.Moles.SILogger.m::Monopoly#logger#ILogger#spelerBeurt(System.String)">
            <summary>Sets the stub of <see cref="M:Monopoly.logger.ILogger.spelerBeurt(System.String)"/>
            </summary>
        </member>
        <member name="M:Monopoly.logger.Moles.SILogger.m::Monopoly#logger#ILogger#spelerTussenstand(Monopoly.domein.Speler)">
            <summary>Sets the stub of <see cref="M:Monopoly.logger.ILogger.spelerTussenstand(Monopoly.domein.Speler)"/>
            </summary>
        </member>
        <member name="F:Monopoly.logger.Moles.SILogger.RondeInfoInt32">
            <summary>Sets the stub of <see cref="M:Monopoly.logger.ILogger.rondeInfo(System.Int32)"/>
            </summary>
        </member>
        <member name="F:Monopoly.logger.Moles.SILogger.SpelerBeurtString">
            <summary>Sets the stub of <see cref="M:Monopoly.logger.ILogger.spelerBeurt(System.String)"/>
            </summary>
        </member>
        <member name="F:Monopoly.logger.Moles.SILogger.SpelerTussenstandSpeler">
            <summary>Sets the stub of <see cref="M:Monopoly.logger.ILogger.spelerTussenstand(Monopoly.domein.Speler)"/>
            </summary>
        </member>
        <member name="T:Monopoly.domein.velden.Moles.SIVeld">
            <summary>Stub type of <see cref="T:Monopoly.domein.velden.IVeld"/>
            .</summary>
        </member>
        <member name="M:Monopoly.domein.velden.Moles.SIVeld.#ctor">
            <summary>Initializes a new instance of type SIVeld</summary>
        </member>
        <member name="F:Monopoly.domein.velden.Moles.SIVeld.NaamGet">
            <summary>Sets the stub of <see cref="P:Monopoly.domein.velden.IVeld.Naam"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.velden.Moles.SIVeld.m::Monopoly#domein#velden#IVeld#Naam">
            <summary>Sets the stub of <see cref="P:Monopoly.domein.velden.IVeld.Naam"/>
            </summary>
        </member>
        <member name="T:Monopoly.domein.Moles.SIVeld01">
            <summary>Stub type of <see cref="T:Monopoly.domein.IVeld"/>
            .</summary>
        </member>
        <member name="M:Monopoly.domein.Moles.SIVeld01.#ctor">
            <summary>Initializes a new instance of type SIVeld01</summary>
        </member>
        <member name="F:Monopoly.domein.Moles.SIVeld01.BepaalGebeurtenis">
            <summary>Sets the stub of <see cref="M:Monopoly.domein.IVeld.BepaalGebeurtenis"/>
            </summary>
        </member>
        <member name="M:Monopoly.domein.Moles.SIVeld01.m::Monopoly#domein#IVeld#BepaalGebeurtenis">
            <summary>Sets the stub of <see cref="M:Monopoly.domein.IVeld.BepaalGebeurtenis"/>
            </summary>
        </member>
        <member name="F:Monopoly.domein.Moles.SIVeld01.NaamGet">
            <summary>Sets the stub of <see cref="P:Monopoly.domein.IVeld.Naam"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.Moles.SIVeld01.m::Monopoly#domein#IVeld#Naam">
            <summary>Sets the stub of <see cref="P:Monopoly.domein.IVeld.Naam"/>
            </summary>
        </member>
        <member name="T:Monopoly.builders.Moles.SKansKaartenbuilder">
            <summary>Stub type of <see cref="T:Monopoly.builders.KansKaartenbuilder"/>
            .</summary>
        </member>
        <member name="M:Monopoly.builders.Moles.SKansKaartenbuilder.#ctor(Monopoly.domein.Spelbord)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Monopoly.builders.Moles.SKansKaartenbuilder.InitializeStub">
            <summary>Initializes a new instance of type SKansKaartenbuilder</summary>
        </member>
        <member name="P:Monopoly.builders.Moles.SKansKaartenbuilder.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Monopoly.builders.Moles.SKansKaartenbuilder.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="T:Monopoly.AI.VoorzichtigeHuisjesmelker.Moles.SKoopHuisDecision">
            <summary>Stub type of <see cref="T:Monopoly.AI.VoorzichtigeHuisjesmelker.KoopHuisDecision"/>
            .</summary>
        </member>
        <member name="M:Monopoly.AI.VoorzichtigeHuisjesmelker.Moles.SKoopHuisDecision.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Monopoly.AI.VoorzichtigeHuisjesmelker.Moles.SKoopHuisDecision.InitializeStub">
            <summary>Initializes a new instance of type SKoopHuisDecision</summary>
        </member>
        <member name="P:Monopoly.AI.VoorzichtigeHuisjesmelker.Moles.SKoopHuisDecision.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Monopoly.AI.VoorzichtigeHuisjesmelker.Moles.SKoopHuisDecision.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="T:Monopoly.AI.RisicoNemendeGrondAankoper.Moles.SKoopHuisDecision01">
            <summary>Stub type of <see cref="T:Monopoly.AI.RisicoNemendeGrondAankoper.KoopHuisDecision"/>
            .</summary>
        </member>
        <member name="M:Monopoly.AI.RisicoNemendeGrondAankoper.Moles.SKoopHuisDecision01.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Monopoly.AI.RisicoNemendeGrondAankoper.Moles.SKoopHuisDecision01.InitializeStub">
            <summary>Initializes a new instance of type SKoopHuisDecision01</summary>
        </member>
        <member name="P:Monopoly.AI.RisicoNemendeGrondAankoper.Moles.SKoopHuisDecision01.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Monopoly.AI.RisicoNemendeGrondAankoper.Moles.SKoopHuisDecision01.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="T:Monopoly.domein.Moles.SLaatste3Worpen">
            <summary>Stub type of <see cref="T:Monopoly.domein.Laatste3Worpen"/>
            .</summary>
        </member>
        <member name="M:Monopoly.domein.Moles.SLaatste3Worpen.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Monopoly.domein.Moles.SLaatste3Worpen.InitializeStub">
            <summary>Initializes a new instance of type SLaatste3Worpen</summary>
        </member>
        <member name="P:Monopoly.domein.Moles.SLaatste3Worpen.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Monopoly.domein.Moles.SLaatste3Worpen.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="T:Monopoly.domein.gebeurtenissen.Moles.SLosHypotheekAf">
            <summary>Stub type of <see cref="T:Monopoly.domein.gebeurtenissen.LosHypotheekAf"/>
            .</summary>
        </member>
        <member name="M:Monopoly.domein.gebeurtenissen.Moles.SLosHypotheekAf.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Monopoly.domein.gebeurtenissen.Moles.SLosHypotheekAf.Equals(System.Object)">
            <summary>Sets the stub of <see cref="M:Monopoly.domein.gebeurtenissen.Gebeurtenis.Equals(System.Object)"/>
            </summary>
        </member>
        <member name="F:Monopoly.domein.gebeurtenissen.Moles.SLosHypotheekAf.EqualsObject">
            <summary>Sets the stub of <see cref="M:Monopoly.domein.gebeurtenissen.Gebeurtenis.Equals(System.Object)"/>
            </summary>
        </member>
        <member name="M:Monopoly.domein.gebeurtenissen.Moles.SLosHypotheekAf.GetHashCode">
            <summary>Sets the stub of <see cref="M:Monopoly.domein.gebeurtenissen.Gebeurtenis.GetHashCode"/>
            </summary>
        </member>
        <member name="F:Monopoly.domein.gebeurtenissen.Moles.SLosHypotheekAf.GetHashCode01">
            <summary>Sets the stub of <see cref="M:Monopoly.domein.gebeurtenissen.Gebeurtenis.GetHashCode"/>
            </summary>
        </member>
        <member name="M:Monopoly.domein.gebeurtenissen.Moles.SLosHypotheekAf.InitializeStub">
            <summary>Initializes a new instance of type SLosHypotheekAf</summary>
        </member>
        <member name="M:Monopoly.domein.gebeurtenissen.Moles.SLosHypotheekAf.IsUitvoerbaar(Monopoly.domein.Speler)">
            <summary>Sets the stub of <see cref="M:Monopoly.domein.gebeurtenissen.LosHypotheekAf.IsUitvoerbaar(Monopoly.domein.Speler)"/>
            </summary>
        </member>
        <member name="F:Monopoly.domein.gebeurtenissen.Moles.SLosHypotheekAf.IsUitvoerbaarSpeler">
            <summary>Sets the stub of <see cref="M:Monopoly.domein.gebeurtenissen.LosHypotheekAf.IsUitvoerbaar(Monopoly.domein.Speler)"/>
            </summary>
        </member>
        <member name="M:Monopoly.domein.gebeurtenissen.Moles.SLosHypotheekAf.IsVerplicht">
            <summary>Sets the stub of <see cref="M:Monopoly.domein.gebeurtenissen.LosHypotheekAf.IsVerplicht"/>
            </summary>
        </member>
        <member name="F:Monopoly.domein.gebeurtenissen.Moles.SLosHypotheekAf.IsVerplicht01">
            <summary>Sets the stub of <see cref="M:Monopoly.domein.gebeurtenissen.LosHypotheekAf.IsVerplicht"/>
            </summary>
        </member>
        <member name="M:Monopoly.domein.gebeurtenissen.Moles.SLosHypotheekAf.ToString">
            <summary>Sets the stub of <see cref="M:Monopoly.domein.gebeurtenissen.Gebeurtenis.ToString"/>
            </summary>
        </member>
        <member name="F:Monopoly.domein.gebeurtenissen.Moles.SLosHypotheekAf.ToString01">
            <summary>Sets the stub of <see cref="M:Monopoly.domein.gebeurtenissen.Gebeurtenis.ToString"/>
            </summary>
        </member>
        <member name="M:Monopoly.domein.gebeurtenissen.Moles.SLosHypotheekAf.Voeruit(Monopoly.domein.Speler)">
            <summary>Sets the stub of <see cref="M:Monopoly.domein.gebeurtenissen.LosHypotheekAf.Voeruit(Monopoly.domein.Speler)"/>
            </summary>
        </member>
        <member name="F:Monopoly.domein.gebeurtenissen.Moles.SLosHypotheekAf.VoeruitSpeler">
            <summary>Sets the stub of <see cref="M:Monopoly.domein.gebeurtenissen.LosHypotheekAf.Voeruit(Monopoly.domein.Speler)"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.gebeurtenissen.Moles.SLosHypotheekAf.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Monopoly.domein.gebeurtenissen.Moles.SLosHypotheekAf.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="T:Monopoly.domein.Moles.SMonopolyspel">
            <summary>Stub type of <see cref="T:Monopoly.domein.Monopolyspel"/>
            .</summary>
        </member>
        <member name="M:Monopoly.domein.Moles.SMonopolyspel.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Monopoly.domein.Moles.SMonopolyspel.InitializeStub">
            <summary>Initializes a new instance of type SMonopolyspel</summary>
        </member>
        <member name="P:Monopoly.domein.Moles.SMonopolyspel.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Monopoly.domein.Moles.SMonopolyspel.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="T:Monopoly.domein.huur.Moles.SNutsbedrijfHuur">
            <summary>Stub type of <see cref="T:Monopoly.domein.huur.NutsbedrijfHuur"/>
            .</summary>
        </member>
        <member name="M:Monopoly.domein.huur.Moles.SNutsbedrijfHuur.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Monopoly.domein.huur.Moles.SNutsbedrijfHuur.InitializeStub">
            <summary>Initializes a new instance of type SNutsbedrijfHuur</summary>
        </member>
        <member name="P:Monopoly.domein.huur.Moles.SNutsbedrijfHuur.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Monopoly.domein.huur.Moles.SNutsbedrijfHuur.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="T:Monopoly.domein.gebeurtenissen.Moles.SOntvangGeld">
            <summary>Stub type of <see cref="T:Monopoly.domein.gebeurtenissen.OntvangGeld"/>
            .</summary>
        </member>
        <member name="M:Monopoly.domein.gebeurtenissen.Moles.SOntvangGeld.#ctor(System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Monopoly.domein.gebeurtenissen.Moles.SOntvangGeld.Equals(System.Object)">
            <summary>Sets the stub of <see cref="M:Monopoly.domein.gebeurtenissen.Gebeurtenis.Equals(System.Object)"/>
            </summary>
        </member>
        <member name="F:Monopoly.domein.gebeurtenissen.Moles.SOntvangGeld.EqualsObject">
            <summary>Sets the stub of <see cref="M:Monopoly.domein.gebeurtenissen.Gebeurtenis.Equals(System.Object)"/>
            </summary>
        </member>
        <member name="M:Monopoly.domein.gebeurtenissen.Moles.SOntvangGeld.GetHashCode">
            <summary>Sets the stub of <see cref="M:Monopoly.domein.gebeurtenissen.Gebeurtenis.GetHashCode"/>
            </summary>
        </member>
        <member name="F:Monopoly.domein.gebeurtenissen.Moles.SOntvangGeld.GetHashCode01">
            <summary>Sets the stub of <see cref="M:Monopoly.domein.gebeurtenissen.Gebeurtenis.GetHashCode"/>
            </summary>
        </member>
        <member name="M:Monopoly.domein.gebeurtenissen.Moles.SOntvangGeld.InitializeStub">
            <summary>Initializes a new instance of type SOntvangGeld</summary>
        </member>
        <member name="M:Monopoly.domein.gebeurtenissen.Moles.SOntvangGeld.IsUitvoerbaar(Monopoly.domein.Speler)">
            <summary>Sets the stub of <see cref="M:Monopoly.domein.gebeurtenissen.OntvangGeld.IsUitvoerbaar(Monopoly.domein.Speler)"/>
            </summary>
        </member>
        <member name="F:Monopoly.domein.gebeurtenissen.Moles.SOntvangGeld.IsUitvoerbaarSpeler">
            <summary>Sets the stub of <see cref="M:Monopoly.domein.gebeurtenissen.OntvangGeld.IsUitvoerbaar(Monopoly.domein.Speler)"/>
            </summary>
        </member>
        <member name="M:Monopoly.domein.gebeurtenissen.Moles.SOntvangGeld.IsVerplicht">
            <summary>Sets the stub of <see cref="M:Monopoly.domein.gebeurtenissen.OntvangGeld.IsVerplicht"/>
            </summary>
        </member>
        <member name="F:Monopoly.domein.gebeurtenissen.Moles.SOntvangGeld.IsVerplicht01">
            <summary>Sets the stub of <see cref="M:Monopoly.domein.gebeurtenissen.OntvangGeld.IsVerplicht"/>
            </summary>
        </member>
        <member name="M:Monopoly.domein.gebeurtenissen.Moles.SOntvangGeld.ToString">
            <summary>Sets the stub of <see cref="M:Monopoly.domein.gebeurtenissen.Gebeurtenis.ToString"/>
            </summary>
        </member>
        <member name="F:Monopoly.domein.gebeurtenissen.Moles.SOntvangGeld.ToString01">
            <summary>Sets the stub of <see cref="M:Monopoly.domein.gebeurtenissen.Gebeurtenis.ToString"/>
            </summary>
        </member>
        <member name="M:Monopoly.domein.gebeurtenissen.Moles.SOntvangGeld.Voeruit(Monopoly.domein.Speler)">
            <summary>Sets the stub of <see cref="M:Monopoly.domein.gebeurtenissen.OntvangGeld.Voeruit(Monopoly.domein.Speler)"/>
            </summary>
        </member>
        <member name="F:Monopoly.domein.gebeurtenissen.Moles.SOntvangGeld.VoeruitSpeler">
            <summary>Sets the stub of <see cref="M:Monopoly.domein.gebeurtenissen.OntvangGeld.Voeruit(Monopoly.domein.Speler)"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.gebeurtenissen.Moles.SOntvangGeld.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Monopoly.domein.gebeurtenissen.Moles.SOntvangGeld.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="T:Monopoly.domein.gebeurtenissen.Moles.SPasseerStartGebeurtenis">
            <summary>Stub type of <see cref="T:Monopoly.domein.gebeurtenissen.PasseerStartGebeurtenis"/>
            .</summary>
        </member>
        <member name="M:Monopoly.domein.gebeurtenissen.Moles.SPasseerStartGebeurtenis.#ctor(Monopoly.domein.velden.Veld)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Monopoly.domein.gebeurtenissen.Moles.SPasseerStartGebeurtenis.Equals(System.Object)">
            <summary>Sets the stub of <see cref="M:Monopoly.domein.gebeurtenissen.Gebeurtenis.Equals(System.Object)"/>
            </summary>
        </member>
        <member name="F:Monopoly.domein.gebeurtenissen.Moles.SPasseerStartGebeurtenis.EqualsObject">
            <summary>Sets the stub of <see cref="M:Monopoly.domein.gebeurtenissen.Gebeurtenis.Equals(System.Object)"/>
            </summary>
        </member>
        <member name="M:Monopoly.domein.gebeurtenissen.Moles.SPasseerStartGebeurtenis.GetHashCode">
            <summary>Sets the stub of <see cref="M:Monopoly.domein.gebeurtenissen.Gebeurtenis.GetHashCode"/>
            </summary>
        </member>
        <member name="F:Monopoly.domein.gebeurtenissen.Moles.SPasseerStartGebeurtenis.GetHashCode01">
            <summary>Sets the stub of <see cref="M:Monopoly.domein.gebeurtenissen.Gebeurtenis.GetHashCode"/>
            </summary>
        </member>
        <member name="M:Monopoly.domein.gebeurtenissen.Moles.SPasseerStartGebeurtenis.InitializeStub">
            <summary>Initializes a new instance of type SPasseerStartGebeurtenis</summary>
        </member>
        <member name="M:Monopoly.domein.gebeurtenissen.Moles.SPasseerStartGebeurtenis.IsUitvoerbaar(Monopoly.domein.Speler)">
            <summary>Sets the stub of <see cref="M:Monopoly.domein.gebeurtenissen.PasseerStartGebeurtenis.IsUitvoerbaar(Monopoly.domein.Speler)"/>
            </summary>
        </member>
        <member name="F:Monopoly.domein.gebeurtenissen.Moles.SPasseerStartGebeurtenis.IsUitvoerbaarSpeler">
            <summary>Sets the stub of <see cref="M:Monopoly.domein.gebeurtenissen.PasseerStartGebeurtenis.IsUitvoerbaar(Monopoly.domein.Speler)"/>
            </summary>
        </member>
        <member name="M:Monopoly.domein.gebeurtenissen.Moles.SPasseerStartGebeurtenis.IsVerplicht">
            <summary>Sets the stub of <see cref="M:Monopoly.domein.gebeurtenissen.PasseerStartGebeurtenis.IsVerplicht"/>
            </summary>
        </member>
        <member name="F:Monopoly.domein.gebeurtenissen.Moles.SPasseerStartGebeurtenis.IsVerplicht01">
            <summary>Sets the stub of <see cref="M:Monopoly.domein.gebeurtenissen.PasseerStartGebeurtenis.IsVerplicht"/>
            </summary>
        </member>
        <member name="M:Monopoly.domein.gebeurtenissen.Moles.SPasseerStartGebeurtenis.ToString">
            <summary>Sets the stub of <see cref="M:Monopoly.domein.gebeurtenissen.Gebeurtenis.ToString"/>
            </summary>
        </member>
        <member name="F:Monopoly.domein.gebeurtenissen.Moles.SPasseerStartGebeurtenis.ToString01">
            <summary>Sets the stub of <see cref="M:Monopoly.domein.gebeurtenissen.Gebeurtenis.ToString"/>
            </summary>
        </member>
        <member name="M:Monopoly.domein.gebeurtenissen.Moles.SPasseerStartGebeurtenis.Voeruit(Monopoly.domein.Speler)">
            <summary>Sets the stub of <see cref="M:Monopoly.domein.gebeurtenissen.PasseerStartGebeurtenis.Voeruit(Monopoly.domein.Speler)"/>
            </summary>
        </member>
        <member name="F:Monopoly.domein.gebeurtenissen.Moles.SPasseerStartGebeurtenis.VoeruitSpeler">
            <summary>Sets the stub of <see cref="M:Monopoly.domein.gebeurtenissen.PasseerStartGebeurtenis.Voeruit(Monopoly.domein.Speler)"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.gebeurtenissen.Moles.SPasseerStartGebeurtenis.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Monopoly.domein.gebeurtenissen.Moles.SPasseerStartGebeurtenis.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="T:Monopoly.Moles.SSpelController">
            <summary>Stub type of <see cref="T:Monopoly.SpelController"/>
            .</summary>
        </member>
        <member name="M:Monopoly.Moles.SSpelController.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Monopoly.Moles.SSpelController.InitializeStub">
            <summary>Initializes a new instance of type SSpelController</summary>
        </member>
        <member name="P:Monopoly.Moles.SSpelController.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Monopoly.Moles.SSpelController.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="T:Monopoly.domein.Moles.SSpelbord">
            <summary>Stub type of <see cref="T:Monopoly.domein.Spelbord"/>
            .</summary>
        </member>
        <member name="M:Monopoly.domein.Moles.SSpelbord.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Monopoly.domein.Moles.SSpelbord.InitializeStub">
            <summary>Initializes a new instance of type SSpelbord</summary>
        </member>
        <member name="P:Monopoly.domein.Moles.SSpelbord.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Monopoly.domein.Moles.SSpelbord.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="T:Monopoly.domein.Moles.SSpeler">
            <summary>Stub type of <see cref="T:Monopoly.domein.Speler"/>
            .</summary>
        </member>
        <member name="M:Monopoly.domein.Moles.SSpeler.#ctor(System.String,Monopoly.AI.IAIDecider,Monopoly.domein.Monopolyspel)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Monopoly.domein.Moles.SSpeler.Equals(System.Object)">
            <summary>Sets the stub of <see cref="M:Monopoly.domein.Speler.Equals(System.Object)"/>
            </summary>
        </member>
        <member name="F:Monopoly.domein.Moles.SSpeler.EqualsObject">
            <summary>Sets the stub of <see cref="M:Monopoly.domein.Speler.Equals(System.Object)"/>
            </summary>
        </member>
        <member name="M:Monopoly.domein.Moles.SSpeler.GetHashCode">
            <summary>Sets the stub of <see cref="M:Monopoly.domein.Speler.GetHashCode"/>
            </summary>
        </member>
        <member name="F:Monopoly.domein.Moles.SSpeler.GetHashCode01">
            <summary>Sets the stub of <see cref="M:Monopoly.domein.Speler.GetHashCode"/>
            </summary>
        </member>
        <member name="M:Monopoly.domein.Moles.SSpeler.InitializeStub">
            <summary>Initializes a new instance of type SSpeler</summary>
        </member>
        <member name="M:Monopoly.domein.Moles.SSpeler.ToString">
            <summary>Sets the stub of <see cref="M:Monopoly.domein.Speler.ToString"/>
            </summary>
        </member>
        <member name="F:Monopoly.domein.Moles.SSpeler.ToString01">
            <summary>Sets the stub of <see cref="M:Monopoly.domein.Speler.ToString"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.Moles.SSpeler.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Monopoly.domein.Moles.SSpeler.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="T:Monopoly.domein.Moles.SStad">
            <summary>Stub type of <see cref="T:Monopoly.domein.Stad"/>
            .</summary>
        </member>
        <member name="M:Monopoly.domein.Moles.SStad.#ctor(System.String,Monopoly.domein.velden.Straat[])">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Monopoly.domein.Moles.SStad.InitializeStub">
            <summary>Initializes a new instance of type SStad</summary>
        </member>
        <member name="P:Monopoly.domein.Moles.SStad.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Monopoly.domein.Moles.SStad.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="T:Monopoly.builders.Moles.SStationEnNutsBuilder">
            <summary>Stub type of <see cref="T:Monopoly.builders.StationEnNutsBuilder"/>
            .</summary>
        </member>
        <member name="M:Monopoly.builders.Moles.SStationEnNutsBuilder.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Monopoly.builders.Moles.SStationEnNutsBuilder.InitializeStub">
            <summary>Initializes a new instance of type SStationEnNutsBuilder</summary>
        </member>
        <member name="P:Monopoly.builders.Moles.SStationEnNutsBuilder.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Monopoly.builders.Moles.SStationEnNutsBuilder.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="T:Monopoly.domein.huur.Moles.SStationhuur">
            <summary>Stub type of <see cref="T:Monopoly.domein.huur.Stationhuur"/>
            .</summary>
        </member>
        <member name="M:Monopoly.domein.huur.Moles.SStationhuur.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Monopoly.domein.huur.Moles.SStationhuur.InitializeStub">
            <summary>Initializes a new instance of type SStationhuur</summary>
        </member>
        <member name="P:Monopoly.domein.huur.Moles.SStationhuur.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Monopoly.domein.huur.Moles.SStationhuur.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="T:Monopoly.domein.velden.Moles.SStraat">
            <summary>Stub type of <see cref="T:Monopoly.domein.velden.Straat"/>
            .</summary>
        </member>
        <member name="M:Monopoly.domein.velden.Moles.SStraat.#ctor(System.String,System.Int32,Monopoly.domein.Straathuur)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="F:Monopoly.domein.velden.Moles.SStraat.AddObserverIHuurObserver">
            <summary>Sets the stub of <see cref="M:Monopoly.domein.velden.Straat.addObserver(Monopoly.domein.velden.IHuurObserver)"/>
            </summary>
        </member>
        <member name="M:Monopoly.domein.velden.Moles.SStraat.BepaalGebeurtenis">
            <summary>Sets the stub of <see cref="M:Monopoly.domein.velden.Straat.BepaalGebeurtenis"/>
            </summary>
        </member>
        <member name="F:Monopoly.domein.velden.Moles.SStraat.BepaalGebeurtenis01">
            <summary>Sets the stub of <see cref="M:Monopoly.domein.velden.Straat.BepaalGebeurtenis"/>
            </summary>
        </member>
        <member name="M:Monopoly.domein.velden.Moles.SStraat.Equals(System.Object)">
            <summary>Sets the stub of <see cref="M:Monopoly.domein.velden.Veld.Equals(System.Object)"/>
            </summary>
        </member>
        <member name="F:Monopoly.domein.velden.Moles.SStraat.EqualsObject">
            <summary>Sets the stub of <see cref="M:Monopoly.domein.velden.Veld.Equals(System.Object)"/>
            </summary>
        </member>
        <member name="M:Monopoly.domein.velden.Moles.SStraat.GetHashCode">
            <summary>Sets the stub of <see cref="M:Monopoly.domein.velden.Veld.GetHashCode"/>
            </summary>
        </member>
        <member name="F:Monopoly.domein.velden.Moles.SStraat.GetHashCode01">
            <summary>Sets the stub of <see cref="M:Monopoly.domein.velden.Veld.GetHashCode"/>
            </summary>
        </member>
        <member name="M:Monopoly.domein.velden.Moles.SStraat.InitializeStub">
            <summary>Initializes a new instance of type SStraat</summary>
        </member>
        <member name="M:Monopoly.domein.velden.Moles.SStraat.ToString">
            <summary>Sets the stub of <see cref="M:Monopoly.domein.velden.Veld.ToString"/>
            </summary>
        </member>
        <member name="F:Monopoly.domein.velden.Moles.SStraat.ToString01">
            <summary>Sets the stub of <see cref="M:Monopoly.domein.velden.Veld.ToString"/>
            </summary>
        </member>
        <member name="M:Monopoly.domein.velden.Moles.SStraat.addObserver(Monopoly.domein.velden.IHuurObserver)">
            <summary>Sets the stub of <see cref="M:Monopoly.domein.velden.Straat.addObserver(Monopoly.domein.velden.IHuurObserver)"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.velden.Moles.SStraat.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Monopoly.domein.velden.Moles.SStraat.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="T:Monopoly.builders.Moles.SStraatbuilder">
            <summary>Stub type of <see cref="T:Monopoly.builders.Straatbuilder"/>
            .</summary>
        </member>
        <member name="M:Monopoly.builders.Moles.SStraatbuilder.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Monopoly.builders.Moles.SStraatbuilder.InitializeStub">
            <summary>Initializes a new instance of type SStraatbuilder</summary>
        </member>
        <member name="P:Monopoly.builders.Moles.SStraatbuilder.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Monopoly.builders.Moles.SStraatbuilder.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="T:Monopoly.domein.Moles.SStraathuur">
            <summary>Stub type of <see cref="T:Monopoly.domein.Straathuur"/>
            .</summary>
        </member>
        <member name="M:Monopoly.domein.Moles.SStraathuur.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Monopoly.domein.Moles.SStraathuur.InitializeStub">
            <summary>Initializes a new instance of type SStraathuur</summary>
        </member>
        <member name="P:Monopoly.domein.Moles.SStraathuur.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Monopoly.domein.Moles.SStraathuur.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="T:Monopoly.domein.velden.Moles.SVeld">
            <summary>Stub type of <see cref="T:Monopoly.domein.velden.Veld"/>
            .</summary>
        </member>
        <member name="M:Monopoly.domein.velden.Moles.SVeld.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="F:Monopoly.domein.velden.Moles.SVeld.AddObserverIHuurObserver">
            <summary>Sets the stub of <see cref="M:Monopoly.domein.velden.Veld.addObserver(Monopoly.domein.velden.IHuurObserver)"/>
            </summary>
        </member>
        <member name="M:Monopoly.domein.velden.Moles.SVeld.BepaalGebeurtenis">
            <summary>Sets the stub of <see cref="M:Monopoly.domein.velden.Veld.BepaalGebeurtenis"/>
            </summary>
        </member>
        <member name="F:Monopoly.domein.velden.Moles.SVeld.BepaalGebeurtenis01">
            <summary>Sets the stub of <see cref="M:Monopoly.domein.velden.Veld.BepaalGebeurtenis"/>
            </summary>
        </member>
        <member name="M:Monopoly.domein.velden.Moles.SVeld.Equals(System.Object)">
            <summary>Sets the stub of <see cref="M:Monopoly.domein.velden.Veld.Equals(System.Object)"/>
            </summary>
        </member>
        <member name="F:Monopoly.domein.velden.Moles.SVeld.EqualsObject">
            <summary>Sets the stub of <see cref="M:Monopoly.domein.velden.Veld.Equals(System.Object)"/>
            </summary>
        </member>
        <member name="M:Monopoly.domein.velden.Moles.SVeld.GetHashCode">
            <summary>Sets the stub of <see cref="M:Monopoly.domein.velden.Veld.GetHashCode"/>
            </summary>
        </member>
        <member name="F:Monopoly.domein.velden.Moles.SVeld.GetHashCode01">
            <summary>Sets the stub of <see cref="M:Monopoly.domein.velden.Veld.GetHashCode"/>
            </summary>
        </member>
        <member name="M:Monopoly.domein.velden.Moles.SVeld.InitializeStub">
            <summary>Initializes a new instance of type SVeld</summary>
        </member>
        <member name="M:Monopoly.domein.velden.Moles.SVeld.ToString">
            <summary>Sets the stub of <see cref="M:Monopoly.domein.velden.Veld.ToString"/>
            </summary>
        </member>
        <member name="F:Monopoly.domein.velden.Moles.SVeld.ToString01">
            <summary>Sets the stub of <see cref="M:Monopoly.domein.velden.Veld.ToString"/>
            </summary>
        </member>
        <member name="M:Monopoly.domein.velden.Moles.SVeld.addObserver(Monopoly.domein.velden.IHuurObserver)">
            <summary>Sets the stub of <see cref="M:Monopoly.domein.velden.Veld.addObserver(Monopoly.domein.velden.IHuurObserver)"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.velden.Moles.SVeld.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Monopoly.domein.velden.Moles.SVeld.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="T:Monopoly.domein.labels.Moles.SVeldnamen">
            <summary>Stub type of <see cref="T:Monopoly.domein.labels.Veldnamen"/>
            .</summary>
        </member>
        <member name="M:Monopoly.domein.labels.Moles.SVeldnamen.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Monopoly.domein.labels.Moles.SVeldnamen.InitializeStub">
            <summary>Initializes a new instance of type SVeldnamen</summary>
        </member>
        <member name="P:Monopoly.domein.labels.Moles.SVeldnamen.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Monopoly.domein.labels.Moles.SVeldnamen.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="T:Monopoly.domein.gebeurtenissen.Moles.SVerkoopHuis">
            <summary>Stub type of <see cref="T:Monopoly.domein.gebeurtenissen.VerkoopHuis"/>
            .</summary>
        </member>
        <member name="M:Monopoly.domein.gebeurtenissen.Moles.SVerkoopHuis.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Monopoly.domein.gebeurtenissen.Moles.SVerkoopHuis.Equals(System.Object)">
            <summary>Sets the stub of <see cref="M:Monopoly.domein.gebeurtenissen.Gebeurtenis.Equals(System.Object)"/>
            </summary>
        </member>
        <member name="F:Monopoly.domein.gebeurtenissen.Moles.SVerkoopHuis.EqualsObject">
            <summary>Sets the stub of <see cref="M:Monopoly.domein.gebeurtenissen.Gebeurtenis.Equals(System.Object)"/>
            </summary>
        </member>
        <member name="M:Monopoly.domein.gebeurtenissen.Moles.SVerkoopHuis.GetHashCode">
            <summary>Sets the stub of <see cref="M:Monopoly.domein.gebeurtenissen.Gebeurtenis.GetHashCode"/>
            </summary>
        </member>
        <member name="F:Monopoly.domein.gebeurtenissen.Moles.SVerkoopHuis.GetHashCode01">
            <summary>Sets the stub of <see cref="M:Monopoly.domein.gebeurtenissen.Gebeurtenis.GetHashCode"/>
            </summary>
        </member>
        <member name="M:Monopoly.domein.gebeurtenissen.Moles.SVerkoopHuis.InitializeStub">
            <summary>Initializes a new instance of type SVerkoopHuis</summary>
        </member>
        <member name="M:Monopoly.domein.gebeurtenissen.Moles.SVerkoopHuis.IsUitvoerbaar(Monopoly.domein.Speler)">
            <summary>Sets the stub of <see cref="M:Monopoly.domein.gebeurtenissen.VerkoopHuis.IsUitvoerbaar(Monopoly.domein.Speler)"/>
            </summary>
        </member>
        <member name="F:Monopoly.domein.gebeurtenissen.Moles.SVerkoopHuis.IsUitvoerbaarSpeler">
            <summary>Sets the stub of <see cref="M:Monopoly.domein.gebeurtenissen.VerkoopHuis.IsUitvoerbaar(Monopoly.domein.Speler)"/>
            </summary>
        </member>
        <member name="M:Monopoly.domein.gebeurtenissen.Moles.SVerkoopHuis.IsVerplicht">
            <summary>Sets the stub of <see cref="M:Monopoly.domein.gebeurtenissen.VerkoopHuis.IsVerplicht"/>
            </summary>
        </member>
        <member name="F:Monopoly.domein.gebeurtenissen.Moles.SVerkoopHuis.IsVerplicht01">
            <summary>Sets the stub of <see cref="M:Monopoly.domein.gebeurtenissen.VerkoopHuis.IsVerplicht"/>
            </summary>
        </member>
        <member name="M:Monopoly.domein.gebeurtenissen.Moles.SVerkoopHuis.ToString">
            <summary>Sets the stub of <see cref="M:Monopoly.domein.gebeurtenissen.Gebeurtenis.ToString"/>
            </summary>
        </member>
        <member name="F:Monopoly.domein.gebeurtenissen.Moles.SVerkoopHuis.ToString01">
            <summary>Sets the stub of <see cref="M:Monopoly.domein.gebeurtenissen.Gebeurtenis.ToString"/>
            </summary>
        </member>
        <member name="M:Monopoly.domein.gebeurtenissen.Moles.SVerkoopHuis.Voeruit(Monopoly.domein.Speler)">
            <summary>Sets the stub of <see cref="M:Monopoly.domein.gebeurtenissen.VerkoopHuis.Voeruit(Monopoly.domein.Speler)"/>
            </summary>
        </member>
        <member name="F:Monopoly.domein.gebeurtenissen.Moles.SVerkoopHuis.VoeruitSpeler">
            <summary>Sets the stub of <see cref="M:Monopoly.domein.gebeurtenissen.VerkoopHuis.Voeruit(Monopoly.domein.Speler)"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.gebeurtenissen.Moles.SVerkoopHuis.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Monopoly.domein.gebeurtenissen.Moles.SVerkoopHuis.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="T:Monopoly.domein.gebeurtenissen.Moles.SVrij">
            <summary>Stub type of <see cref="T:Monopoly.domein.gebeurtenissen.Vrij"/>
            .</summary>
        </member>
        <member name="M:Monopoly.domein.gebeurtenissen.Moles.SVrij.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Monopoly.domein.gebeurtenissen.Moles.SVrij.Equals(System.Object)">
            <summary>Sets the stub of <see cref="M:Monopoly.domein.gebeurtenissen.Gebeurtenis.Equals(System.Object)"/>
            </summary>
        </member>
        <member name="F:Monopoly.domein.gebeurtenissen.Moles.SVrij.EqualsObject">
            <summary>Sets the stub of <see cref="M:Monopoly.domein.gebeurtenissen.Gebeurtenis.Equals(System.Object)"/>
            </summary>
        </member>
        <member name="M:Monopoly.domein.gebeurtenissen.Moles.SVrij.GetHashCode">
            <summary>Sets the stub of <see cref="M:Monopoly.domein.gebeurtenissen.Gebeurtenis.GetHashCode"/>
            </summary>
        </member>
        <member name="F:Monopoly.domein.gebeurtenissen.Moles.SVrij.GetHashCode01">
            <summary>Sets the stub of <see cref="M:Monopoly.domein.gebeurtenissen.Gebeurtenis.GetHashCode"/>
            </summary>
        </member>
        <member name="M:Monopoly.domein.gebeurtenissen.Moles.SVrij.InitializeStub">
            <summary>Initializes a new instance of type SVrij</summary>
        </member>
        <member name="M:Monopoly.domein.gebeurtenissen.Moles.SVrij.IsUitvoerbaar(Monopoly.domein.Speler)">
            <summary>Sets the stub of <see cref="M:Monopoly.domein.gebeurtenissen.Vrij.IsUitvoerbaar(Monopoly.domein.Speler)"/>
            </summary>
        </member>
        <member name="F:Monopoly.domein.gebeurtenissen.Moles.SVrij.IsUitvoerbaarSpeler">
            <summary>Sets the stub of <see cref="M:Monopoly.domein.gebeurtenissen.Vrij.IsUitvoerbaar(Monopoly.domein.Speler)"/>
            </summary>
        </member>
        <member name="M:Monopoly.domein.gebeurtenissen.Moles.SVrij.IsVerplicht">
            <summary>Sets the stub of <see cref="M:Monopoly.domein.gebeurtenissen.Vrij.IsVerplicht"/>
            </summary>
        </member>
        <member name="F:Monopoly.domein.gebeurtenissen.Moles.SVrij.IsVerplicht01">
            <summary>Sets the stub of <see cref="M:Monopoly.domein.gebeurtenissen.Vrij.IsVerplicht"/>
            </summary>
        </member>
        <member name="M:Monopoly.domein.gebeurtenissen.Moles.SVrij.ToString">
            <summary>Sets the stub of <see cref="M:Monopoly.domein.gebeurtenissen.Gebeurtenis.ToString"/>
            </summary>
        </member>
        <member name="F:Monopoly.domein.gebeurtenissen.Moles.SVrij.ToString01">
            <summary>Sets the stub of <see cref="M:Monopoly.domein.gebeurtenissen.Gebeurtenis.ToString"/>
            </summary>
        </member>
        <member name="M:Monopoly.domein.gebeurtenissen.Moles.SVrij.Voeruit(Monopoly.domein.Speler)">
            <summary>Sets the stub of <see cref="M:Monopoly.domein.gebeurtenissen.Vrij.Voeruit(Monopoly.domein.Speler)"/>
            </summary>
        </member>
        <member name="F:Monopoly.domein.gebeurtenissen.Moles.SVrij.VoeruitSpeler">
            <summary>Sets the stub of <see cref="M:Monopoly.domein.gebeurtenissen.Vrij.Voeruit(Monopoly.domein.Speler)"/>
            </summary>
        </member>
        <member name="P:Monopoly.domein.gebeurtenissen.Moles.SVrij.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Monopoly.domein.gebeurtenissen.Moles.SVrij.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
    </members>
</doc>
