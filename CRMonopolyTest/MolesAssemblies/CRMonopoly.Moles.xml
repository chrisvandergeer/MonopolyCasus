<?xml version="1.0"?>
<doc>
    <assembly>
        <name>CRMonopoly.Moles</name>
    </assembly>
    <members>
        <member name="T:CRMonopoly.domein.gebeurtenis.Moles.MAbstractGebeurtenis">
            <summary>Mole type of <see cref="T:CRMonopoly.domein.gebeurtenis.AbstractGebeurtenis"/>
            .</summary>
        </member>
        <member name="M:CRMonopoly.domein.gebeurtenis.Moles.MAbstractGebeurtenis.#ctor(CRMonopoly.domein.gebeurtenis.AbstractGebeurtenis)">
            <summary>Initializes a new mole for the given instance</summary>
        </member>
        <member name="M:CRMonopoly.domein.gebeurtenis.Moles.MAbstractGebeurtenis.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:CRMonopoly.domein.gebeurtenis.Moles.MAbstractGebeurtenis.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:CRMonopoly.domein.gebeurtenis.Moles.MAbstractGebeurtenis.Bind(CRMonopoly.domein.gebeurtenis.Gebeurtenis)">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="P:CRMonopoly.domein.gebeurtenis.Moles.MAbstractGebeurtenis.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:CRMonopoly.domein.gebeurtenis.Moles.MAbstractGebeurtenis.ConstructorString">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.gebeurtenis.AbstractGebeurtenis.#ctor(System.String)"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.gebeurtenis.Moles.MAbstractGebeurtenis.EqualsObject">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.gebeurtenis.AbstractGebeurtenis.Equals(System.Object)"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.gebeurtenis.Moles.MAbstractGebeurtenis.GebeurtenisnaamGet">
            <summary>Sets the mole of <see cref="P:CRMonopoly.domein.gebeurtenis.AbstractGebeurtenis.Gebeurtenisnaam"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.gebeurtenis.Moles.MAbstractGebeurtenis.GebeurtenisnaamSetString">
            <summary>Sets the mole of <see cref="P:CRMonopoly.domein.gebeurtenis.AbstractGebeurtenis.Gebeurtenisnaam"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.gebeurtenis.Moles.MAbstractGebeurtenis.GetHashCode">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.gebeurtenis.AbstractGebeurtenis.GetHashCode"/>
            </summary>
        </member>
        <member name="T:CRMonopoly.domein.gebeurtenis.Moles.MAbstractGebeurtenis.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="P:CRMonopoly.domein.gebeurtenis.Moles.MAbstractGebeurtenis.AllInstances.EqualsObject">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.gebeurtenis.AbstractGebeurtenis.Equals(System.Object)"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.gebeurtenis.Moles.MAbstractGebeurtenis.AllInstances.GebeurtenisnaamGet">
            <summary>Sets the mole of <see cref="P:CRMonopoly.domein.gebeurtenis.AbstractGebeurtenis.Gebeurtenisnaam"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.gebeurtenis.Moles.MAbstractGebeurtenis.AllInstances.GebeurtenisnaamSetString">
            <summary>Sets the mole of <see cref="P:CRMonopoly.domein.gebeurtenis.AbstractGebeurtenis.Gebeurtenisnaam"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.gebeurtenis.Moles.MAbstractGebeurtenis.AllInstances.GetHashCode01">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.gebeurtenis.AbstractGebeurtenis.GetHashCode"/>
            </summary>
        </member>
        <member name="T:CRMonopoly.domein.velden.Moles.MBelastingVeld">
            <summary>Mole type of <see cref="T:CRMonopoly.domein.velden.BelastingVeld"/>
            .</summary>
        </member>
        <member name="M:CRMonopoly.domein.velden.Moles.MBelastingVeld.#ctor">
            <summary>Initializes a new mole</summary>
        </member>
        <member name="M:CRMonopoly.domein.velden.Moles.MBelastingVeld.#ctor(CRMonopoly.domein.velden.BelastingVeld)">
            <summary>Initializes a new mole for the given instance</summary>
        </member>
        <member name="M:CRMonopoly.domein.velden.Moles.MBelastingVeld.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:CRMonopoly.domein.velden.Moles.MBelastingVeld.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="P:CRMonopoly.domein.velden.Moles.MBelastingVeld.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:CRMonopoly.domein.velden.Moles.MBelastingVeld.ConstructorStringInt32">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.velden.BelastingVeld.#ctor(System.String,System.Int32)"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.velden.Moles.MBelastingVeld.bepaalGebeurtenisSpeler">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.velden.BelastingVeld.bepaalGebeurtenis(CRMonopoly.domein.Speler)"/>
            </summary>
        </member>
        <member name="T:CRMonopoly.domein.velden.Moles.MBelastingVeld.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="P:CRMonopoly.domein.velden.Moles.MBelastingVeld.AllInstances.bepaalGebeurtenisSpeler">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.velden.BelastingVeld.bepaalGebeurtenis(CRMonopoly.domein.Speler)"/>
            </summary>
        </member>
        <member name="T:CRMonopoly.domein.Moles.MBelastingVelden">
            <summary>Mole type of <see cref="T:CRMonopoly.domein.BelastingVelden"/>
            .</summary>
        </member>
        <member name="M:CRMonopoly.domein.Moles.MBelastingVelden.#ctor">
            <summary>Initializes a new mole</summary>
        </member>
        <member name="M:CRMonopoly.domein.Moles.MBelastingVelden.#ctor(CRMonopoly.domein.BelastingVelden)">
            <summary>Initializes a new mole for the given instance</summary>
        </member>
        <member name="M:CRMonopoly.domein.Moles.MBelastingVelden.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:CRMonopoly.domein.Moles.MBelastingVelden.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MBelastingVelden.AddBelastingVeld">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.BelastingVelden.Add(CRMonopoly.domein.velden.BelastingVeld)"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MBelastingVelden.AlleBelastingVeldenGet">
            <summary>Sets the mole of <see cref="P:CRMonopoly.domein.BelastingVelden.AlleBelastingVelden"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MBelastingVelden.AlleBelastingVeldenSetListOfBelastingVeld">
            <summary>Sets the mole of <see cref="P:CRMonopoly.domein.BelastingVelden.AlleBelastingVelden"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MBelastingVelden.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MBelastingVelden.Constructor">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.BelastingVelden.#ctor"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MBelastingVelden.getBelastingveldByNameString">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.BelastingVelden.getBelastingveldByName(System.String)"/>
            </summary>
        </member>
        <member name="T:CRMonopoly.domein.Moles.MBelastingVelden.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MBelastingVelden.AllInstances.AddBelastingVeld">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.BelastingVelden.Add(CRMonopoly.domein.velden.BelastingVeld)"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MBelastingVelden.AllInstances.AlleBelastingVeldenGet">
            <summary>Sets the mole of <see cref="P:CRMonopoly.domein.BelastingVelden.AlleBelastingVelden"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MBelastingVelden.AllInstances.AlleBelastingVeldenSetListOfBelastingVeld">
            <summary>Sets the mole of <see cref="P:CRMonopoly.domein.BelastingVelden.AlleBelastingVelden"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MBelastingVelden.AllInstances.getBelastingveldByNameString">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.BelastingVelden.getBelastingveldByName(System.String)"/>
            </summary>
        </member>
        <member name="T:CRMonopoly.domein.gebeurtenis.kans.Moles.MBetaalGeld">
            <summary>Mole type of <see cref="T:CRMonopoly.domein.gebeurtenis.kans.BetaalGeld"/>
            .</summary>
        </member>
        <member name="M:CRMonopoly.domein.gebeurtenis.kans.Moles.MBetaalGeld.#ctor">
            <summary>Initializes a new mole</summary>
        </member>
        <member name="M:CRMonopoly.domein.gebeurtenis.kans.Moles.MBetaalGeld.#ctor(CRMonopoly.domein.gebeurtenis.kans.BetaalGeld)">
            <summary>Initializes a new mole for the given instance</summary>
        </member>
        <member name="M:CRMonopoly.domein.gebeurtenis.kans.Moles.MBetaalGeld.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:CRMonopoly.domein.gebeurtenis.kans.Moles.MBetaalGeld.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:CRMonopoly.domein.gebeurtenis.kans.Moles.MBetaalGeld.Bind(CRMonopoly.domein.gebeurtenis.Gebeurtenis)">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="P:CRMonopoly.domein.gebeurtenis.kans.Moles.MBetaalGeld.BedragGet">
            <summary>Sets the mole of <see cref="P:CRMonopoly.domein.gebeurtenis.kans.BetaalGeld.Bedrag"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.gebeurtenis.kans.Moles.MBetaalGeld.BedragSetInt32">
            <summary>Sets the mole of <see cref="P:CRMonopoly.domein.gebeurtenis.kans.BetaalGeld.Bedrag"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.gebeurtenis.kans.Moles.MBetaalGeld.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:CRMonopoly.domein.gebeurtenis.kans.Moles.MBetaalGeld.ConstructorInt32String">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.gebeurtenis.kans.BetaalGeld.#ctor(System.Int32,System.String)"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.gebeurtenis.kans.Moles.MBetaalGeld.IsVerplicht">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.gebeurtenis.kans.BetaalGeld.IsVerplicht"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.gebeurtenis.kans.Moles.MBetaalGeld.VoerUitSpeler">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.gebeurtenis.kans.BetaalGeld.VoerUit(CRMonopoly.domein.Speler)"/>
            </summary>
        </member>
        <member name="T:CRMonopoly.domein.gebeurtenis.kans.Moles.MBetaalGeld.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="P:CRMonopoly.domein.gebeurtenis.kans.Moles.MBetaalGeld.AllInstances.BedragGet">
            <summary>Sets the mole of <see cref="P:CRMonopoly.domein.gebeurtenis.kans.BetaalGeld.Bedrag"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.gebeurtenis.kans.Moles.MBetaalGeld.AllInstances.BedragSetInt32">
            <summary>Sets the mole of <see cref="P:CRMonopoly.domein.gebeurtenis.kans.BetaalGeld.Bedrag"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.gebeurtenis.kans.Moles.MBetaalGeld.AllInstances.IsVerplicht">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.gebeurtenis.kans.BetaalGeld.IsVerplicht"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.gebeurtenis.kans.Moles.MBetaalGeld.AllInstances.VoerUitSpeler">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.gebeurtenis.kans.BetaalGeld.VoerUit(CRMonopoly.domein.Speler)"/>
            </summary>
        </member>
        <member name="T:CRMonopoly.domein.Moles.MDobbelsteen">
            <summary>Mole type of <see cref="T:CRMonopoly.domein.Dobbelsteen"/>
            .</summary>
        </member>
        <member name="M:CRMonopoly.domein.Moles.MDobbelsteen.#ctor">
            <summary>Initializes a new mole</summary>
        </member>
        <member name="M:CRMonopoly.domein.Moles.MDobbelsteen.#ctor(CRMonopoly.domein.Dobbelsteen)">
            <summary>Initializes a new mole for the given instance</summary>
        </member>
        <member name="M:CRMonopoly.domein.Moles.MDobbelsteen.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:CRMonopoly.domein.Moles.MDobbelsteen.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MDobbelsteen.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MDobbelsteen.Constructor">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.Dobbelsteen.#ctor"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MDobbelsteen.Gooi">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.Dobbelsteen.Gooi"/>
            </summary>
        </member>
        <member name="T:CRMonopoly.domein.Moles.MDobbelsteen.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MDobbelsteen.AllInstances.Gooi">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.Dobbelsteen.Gooi"/>
            </summary>
        </member>
        <member name="T:CRMonopoly.domein.gebeurtenis.Moles.MGebeurtenisResult">
            <summary>Mole type of <see cref="T:CRMonopoly.domein.gebeurtenis.GebeurtenisResult"/>
            .</summary>
        </member>
        <member name="M:CRMonopoly.domein.gebeurtenis.Moles.MGebeurtenisResult.#ctor">
            <summary>Initializes a new mole</summary>
        </member>
        <member name="M:CRMonopoly.domein.gebeurtenis.Moles.MGebeurtenisResult.#ctor(CRMonopoly.domein.gebeurtenis.GebeurtenisResult)">
            <summary>Initializes a new mole for the given instance</summary>
        </member>
        <member name="M:CRMonopoly.domein.gebeurtenis.Moles.MGebeurtenisResult.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:CRMonopoly.domein.gebeurtenis.Moles.MGebeurtenisResult.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="P:CRMonopoly.domein.gebeurtenis.Moles.MGebeurtenisResult.AppendString">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.gebeurtenis.GebeurtenisResult.Append(System.String)"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.gebeurtenis.Moles.MGebeurtenisResult.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:CRMonopoly.domein.gebeurtenis.Moles.MGebeurtenisResult.Constructor">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.gebeurtenis.GebeurtenisResult.#ctor"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.gebeurtenis.Moles.MGebeurtenisResult.IsUitgevoerdGet">
            <summary>Sets the mole of <see cref="P:CRMonopoly.domein.gebeurtenis.GebeurtenisResult.IsUitgevoerd"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.gebeurtenis.Moles.MGebeurtenisResult.IsUitgevoerdSetBoolean">
            <summary>Sets the mole of <see cref="P:CRMonopoly.domein.gebeurtenis.GebeurtenisResult.IsUitgevoerd"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.gebeurtenis.Moles.MGebeurtenisResult.LogUitgevoerdeGebeurtenis">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.gebeurtenis.GebeurtenisResult.LogUitgevoerdeGebeurtenis"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.gebeurtenis.Moles.MGebeurtenisResult.MeldingGet">
            <summary>Sets the mole of <see cref="P:CRMonopoly.domein.gebeurtenis.GebeurtenisResult.Melding"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.gebeurtenis.Moles.MGebeurtenisResult.MeldingSetString">
            <summary>Sets the mole of <see cref="P:CRMonopoly.domein.gebeurtenis.GebeurtenisResult.Melding"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.gebeurtenis.Moles.MGebeurtenisResult.NewGebeurtenisBooleanObjectArray">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.gebeurtenis.GebeurtenisResult.NewGebeurtenis(System.Boolean,System.Object[])"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.gebeurtenis.Moles.MGebeurtenisResult.NietUitgevoerdObjectArray">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.gebeurtenis.GebeurtenisResult.NietUitgevoerd(System.Object[])"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.gebeurtenis.Moles.MGebeurtenisResult.UitgevoerdObjectArray">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.gebeurtenis.GebeurtenisResult.Uitgevoerd(System.Object[])"/>
            </summary>
        </member>
        <member name="T:CRMonopoly.domein.gebeurtenis.Moles.MGebeurtenisResult.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="P:CRMonopoly.domein.gebeurtenis.Moles.MGebeurtenisResult.AllInstances.AppendString">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.gebeurtenis.GebeurtenisResult.Append(System.String)"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.gebeurtenis.Moles.MGebeurtenisResult.AllInstances.IsUitgevoerdGet">
            <summary>Sets the mole of <see cref="P:CRMonopoly.domein.gebeurtenis.GebeurtenisResult.IsUitgevoerd"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.gebeurtenis.Moles.MGebeurtenisResult.AllInstances.IsUitgevoerdSetBoolean">
            <summary>Sets the mole of <see cref="P:CRMonopoly.domein.gebeurtenis.GebeurtenisResult.IsUitgevoerd"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.gebeurtenis.Moles.MGebeurtenisResult.AllInstances.LogUitgevoerdeGebeurtenis">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.gebeurtenis.GebeurtenisResult.LogUitgevoerdeGebeurtenis"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.gebeurtenis.Moles.MGebeurtenisResult.AllInstances.MeldingGet">
            <summary>Sets the mole of <see cref="P:CRMonopoly.domein.gebeurtenis.GebeurtenisResult.Melding"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.gebeurtenis.Moles.MGebeurtenisResult.AllInstances.MeldingSetString">
            <summary>Sets the mole of <see cref="P:CRMonopoly.domein.gebeurtenis.GebeurtenisResult.Melding"/>
            </summary>
        </member>
        <member name="T:CRMonopoly.domein.gebeurtenis.Moles.MGebeurtenissen">
            <summary>Mole type of <see cref="T:CRMonopoly.domein.gebeurtenis.Gebeurtenissen"/>
            .</summary>
        </member>
        <member name="M:CRMonopoly.domein.gebeurtenis.Moles.MGebeurtenissen.#ctor">
            <summary>Initializes a new mole</summary>
        </member>
        <member name="M:CRMonopoly.domein.gebeurtenis.Moles.MGebeurtenissen.#ctor(CRMonopoly.domein.gebeurtenis.Gebeurtenissen)">
            <summary>Initializes a new mole for the given instance</summary>
        </member>
        <member name="M:CRMonopoly.domein.gebeurtenis.Moles.MGebeurtenissen.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:CRMonopoly.domein.gebeurtenis.Moles.MGebeurtenissen.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:CRMonopoly.domein.gebeurtenis.Moles.MGebeurtenissen.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="P:CRMonopoly.domein.gebeurtenis.Moles.MGebeurtenissen.AddGebeurtenis">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.gebeurtenis.Gebeurtenissen.Add(CRMonopoly.domein.gebeurtenis.Gebeurtenis)"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.gebeurtenis.Moles.MGebeurtenissen.AddGebeurtenisResult">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.gebeurtenis.Gebeurtenissen.Add(CRMonopoly.domein.gebeurtenis.GebeurtenisResult)"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.gebeurtenis.Moles.MGebeurtenissen.AddGebeurtenissen">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.gebeurtenis.Gebeurtenissen.Add(CRMonopoly.domein.gebeurtenis.Gebeurtenissen)"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.gebeurtenis.Moles.MGebeurtenissen.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:CRMonopoly.domein.gebeurtenis.Moles.MGebeurtenissen.BevatGooiDobbelstenenGebeurtenis">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.gebeurtenis.Gebeurtenissen.BevatGooiDobbelstenenGebeurtenis"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.gebeurtenis.Moles.MGebeurtenissen.BevatVerplichteGebeurtenis">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.gebeurtenis.Gebeurtenissen.BevatVerplichteGebeurtenis"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.gebeurtenis.Moles.MGebeurtenissen.Constructor">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.gebeurtenis.Gebeurtenissen.#ctor"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.gebeurtenis.Moles.MGebeurtenissen.GebeurtenissenCount">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.gebeurtenis.Gebeurtenissen.GebeurtenissenCount"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.gebeurtenis.Moles.MGebeurtenissen.GebeurtenissenResultCount">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.gebeurtenis.Gebeurtenissen.GebeurtenissenResultCount"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.gebeurtenis.Moles.MGebeurtenissen.GeefDobbelstenenGebeurtenis">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.gebeurtenis.Gebeurtenissen.GeefDobbelstenenGebeurtenis"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.gebeurtenis.Moles.MGebeurtenissen.GeefGebeurtenisString">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.gebeurtenis.Gebeurtenissen.GeefGebeurtenis(System.String)"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.gebeurtenis.Moles.MGebeurtenissen.GeefOptioneleGebeurtenissen">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.gebeurtenis.Gebeurtenissen.GeefOptioneleGebeurtenissen"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.gebeurtenis.Moles.MGebeurtenissen.GeefVerplichteGebeurtenissen">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.gebeurtenis.Gebeurtenissen.GeefVerplichteGebeurtenissen"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.gebeurtenis.Moles.MGebeurtenissen.GetEnumerator">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.gebeurtenis.Gebeurtenissen.GetEnumerator"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.gebeurtenis.Moles.MGebeurtenissen.LogUitgevoerdeGebeurtenissen">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.gebeurtenis.Gebeurtenissen.LogUitgevoerdeGebeurtenissen"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.gebeurtenis.Moles.MGebeurtenissen.RemoveGebeurtenis">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.gebeurtenis.Gebeurtenissen.Remove(CRMonopoly.domein.gebeurtenis.Gebeurtenis)"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.gebeurtenis.Moles.MGebeurtenissen.VoerUitSpeler">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.gebeurtenis.Gebeurtenissen.VoerUit(CRMonopoly.domein.Speler)"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.gebeurtenis.Moles.MGebeurtenissen._BevatVerplichteGebeurtenisb__6Gebeurtenis">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.gebeurtenis.Gebeurtenissen.&lt;BevatVerplichteGebeurtenis&gt;b__6(CRMonopoly.domein.gebeurtenis.Gebeurtenis)"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.gebeurtenis.Moles.MGebeurtenissen.bevatGebeurtenisString">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.gebeurtenis.Gebeurtenissen.bevatGebeurtenis(System.String)"/>
            </summary>
        </member>
        <member name="T:CRMonopoly.domein.gebeurtenis.Moles.MGebeurtenissen.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="P:CRMonopoly.domein.gebeurtenis.Moles.MGebeurtenissen.AllInstances.AddGebeurtenis">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.gebeurtenis.Gebeurtenissen.Add(CRMonopoly.domein.gebeurtenis.Gebeurtenis)"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.gebeurtenis.Moles.MGebeurtenissen.AllInstances.AddGebeurtenisResult">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.gebeurtenis.Gebeurtenissen.Add(CRMonopoly.domein.gebeurtenis.GebeurtenisResult)"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.gebeurtenis.Moles.MGebeurtenissen.AllInstances.AddGebeurtenissen">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.gebeurtenis.Gebeurtenissen.Add(CRMonopoly.domein.gebeurtenis.Gebeurtenissen)"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.gebeurtenis.Moles.MGebeurtenissen.AllInstances.BevatGooiDobbelstenenGebeurtenis">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.gebeurtenis.Gebeurtenissen.BevatGooiDobbelstenenGebeurtenis"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.gebeurtenis.Moles.MGebeurtenissen.AllInstances.BevatVerplichteGebeurtenis">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.gebeurtenis.Gebeurtenissen.BevatVerplichteGebeurtenis"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.gebeurtenis.Moles.MGebeurtenissen.AllInstances.GebeurtenissenCount">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.gebeurtenis.Gebeurtenissen.GebeurtenissenCount"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.gebeurtenis.Moles.MGebeurtenissen.AllInstances.GebeurtenissenResultCount">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.gebeurtenis.Gebeurtenissen.GebeurtenissenResultCount"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.gebeurtenis.Moles.MGebeurtenissen.AllInstances.GeefDobbelstenenGebeurtenis">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.gebeurtenis.Gebeurtenissen.GeefDobbelstenenGebeurtenis"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.gebeurtenis.Moles.MGebeurtenissen.AllInstances.GeefGebeurtenisString">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.gebeurtenis.Gebeurtenissen.GeefGebeurtenis(System.String)"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.gebeurtenis.Moles.MGebeurtenissen.AllInstances.GeefOptioneleGebeurtenissen">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.gebeurtenis.Gebeurtenissen.GeefOptioneleGebeurtenissen"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.gebeurtenis.Moles.MGebeurtenissen.AllInstances.GeefVerplichteGebeurtenissen">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.gebeurtenis.Gebeurtenissen.GeefVerplichteGebeurtenissen"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.gebeurtenis.Moles.MGebeurtenissen.AllInstances.GetEnumerator">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.gebeurtenis.Gebeurtenissen.GetEnumerator"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.gebeurtenis.Moles.MGebeurtenissen.AllInstances.LogUitgevoerdeGebeurtenissen">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.gebeurtenis.Gebeurtenissen.LogUitgevoerdeGebeurtenissen"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.gebeurtenis.Moles.MGebeurtenissen.AllInstances.RemoveGebeurtenis">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.gebeurtenis.Gebeurtenissen.Remove(CRMonopoly.domein.gebeurtenis.Gebeurtenis)"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.gebeurtenis.Moles.MGebeurtenissen.AllInstances.VoerUitSpeler">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.gebeurtenis.Gebeurtenissen.VoerUit(CRMonopoly.domein.Speler)"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.gebeurtenis.Moles.MGebeurtenissen.AllInstances.bevatGebeurtenisString">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.gebeurtenis.Gebeurtenissen.bevatGebeurtenis(System.String)"/>
            </summary>
        </member>
        <member name="T:CRMonopoly.domein.gebeurtenis.creator.Moles.MGebeurtenissenCreator">
            <summary>Mole type of <see cref="T:CRMonopoly.domein.gebeurtenis.creator.GebeurtenissenCreator"/>
            .</summary>
        </member>
        <member name="M:CRMonopoly.domein.gebeurtenis.creator.Moles.MGebeurtenissenCreator.#ctor">
            <summary>Initializes a new mole</summary>
        </member>
        <member name="M:CRMonopoly.domein.gebeurtenis.creator.Moles.MGebeurtenissenCreator.#ctor(CRMonopoly.domein.gebeurtenis.creator.GebeurtenissenCreator)">
            <summary>Initializes a new mole for the given instance</summary>
        </member>
        <member name="M:CRMonopoly.domein.gebeurtenis.creator.Moles.MGebeurtenissenCreator.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:CRMonopoly.domein.gebeurtenis.creator.Moles.MGebeurtenissenCreator.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="P:CRMonopoly.domein.gebeurtenis.creator.Moles.MGebeurtenissenCreator.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:CRMonopoly.domein.gebeurtenis.creator.Moles.MGebeurtenissenCreator.Constructor">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.gebeurtenis.creator.GebeurtenissenCreator.#ctor"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.gebeurtenis.creator.Moles.MGebeurtenissenCreator.Instance01">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.gebeurtenis.creator.GebeurtenissenCreator.Instance"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.gebeurtenis.creator.Moles.MGebeurtenissenCreator.createGebeurtenissenSpeler">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.gebeurtenis.creator.GebeurtenissenCreator.createGebeurtenissen(CRMonopoly.domein.Speler)"/>
            </summary>
        </member>
        <member name="T:CRMonopoly.domein.gebeurtenis.creator.Moles.MGebeurtenissenCreator.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="P:CRMonopoly.domein.gebeurtenis.creator.Moles.MGebeurtenissenCreator.AllInstances.createGebeurtenissenSpeler">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.gebeurtenis.creator.GebeurtenissenCreator.createGebeurtenissen(CRMonopoly.domein.Speler)"/>
            </summary>
        </member>
        <member name="T:CRMonopoly.domein.velden.Moles.MGevangenis">
            <summary>Mole type of <see cref="T:CRMonopoly.domein.velden.Gevangenis"/>
            .</summary>
        </member>
        <member name="M:CRMonopoly.domein.velden.Moles.MGevangenis.#ctor">
            <summary>Initializes a new mole</summary>
        </member>
        <member name="M:CRMonopoly.domein.velden.Moles.MGevangenis.#ctor(CRMonopoly.domein.velden.Gevangenis)">
            <summary>Initializes a new mole for the given instance</summary>
        </member>
        <member name="M:CRMonopoly.domein.velden.Moles.MGevangenis.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:CRMonopoly.domein.velden.Moles.MGevangenis.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="P:CRMonopoly.domein.velden.Moles.MGevangenis.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:CRMonopoly.domein.velden.Moles.MGevangenis.Constructor">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.velden.Gevangenis.#ctor"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.velden.Moles.MGevangenis.GevangenenGet">
            <summary>Sets the mole of <see cref="P:CRMonopoly.domein.velden.Gevangenis.Gevangenen"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.velden.Moles.MGevangenis.GevangenenSetDictionaryOfSpelerInt32">
            <summary>Sets the mole of <see cref="P:CRMonopoly.domein.velden.Gevangenis.Gevangenen"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.velden.Moles.MGevangenis.IsGevangeneSpeler">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.velden.Gevangenis.IsGevangene(CRMonopoly.domein.Speler)"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.velden.Moles.MGevangenis.LaatVrijSpeler">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.velden.Gevangenis.LaatVrij(CRMonopoly.domein.Speler)"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.velden.Moles.MGevangenis.NieuweGevangeneSpeler">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.velden.Gevangenis.NieuweGevangene(CRMonopoly.domein.Speler)"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.velden.Moles.MGevangenis.WachtBeurtSpeler">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.velden.Gevangenis.WachtBeurt(CRMonopoly.domein.Speler)"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.velden.Moles.MGevangenis.bepaalGebeurtenisSpeler">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.velden.Gevangenis.bepaalGebeurtenis(CRMonopoly.domein.Speler)"/>
            </summary>
        </member>
        <member name="T:CRMonopoly.domein.velden.Moles.MGevangenis.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="P:CRMonopoly.domein.velden.Moles.MGevangenis.AllInstances.GevangenenGet">
            <summary>Sets the mole of <see cref="P:CRMonopoly.domein.velden.Gevangenis.Gevangenen"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.velden.Moles.MGevangenis.AllInstances.GevangenenSetDictionaryOfSpelerInt32">
            <summary>Sets the mole of <see cref="P:CRMonopoly.domein.velden.Gevangenis.Gevangenen"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.velden.Moles.MGevangenis.AllInstances.IsGevangeneSpeler">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.velden.Gevangenis.IsGevangene(CRMonopoly.domein.Speler)"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.velden.Moles.MGevangenis.AllInstances.LaatVrijSpeler">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.velden.Gevangenis.LaatVrij(CRMonopoly.domein.Speler)"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.velden.Moles.MGevangenis.AllInstances.NieuweGevangeneSpeler">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.velden.Gevangenis.NieuweGevangene(CRMonopoly.domein.Speler)"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.velden.Moles.MGevangenis.AllInstances.WachtBeurtSpeler">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.velden.Gevangenis.WachtBeurt(CRMonopoly.domein.Speler)"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.velden.Moles.MGevangenis.AllInstances.bepaalGebeurtenisSpeler">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.velden.Gevangenis.bepaalGebeurtenis(CRMonopoly.domein.Speler)"/>
            </summary>
        </member>
        <member name="T:CRMonopoly.domein.gebeurtenis.Moles.MGevangenisGebeurtenis">
            <summary>Mole type of <see cref="T:CRMonopoly.domein.gebeurtenis.GevangenisGebeurtenis"/>
            .</summary>
        </member>
        <member name="M:CRMonopoly.domein.gebeurtenis.Moles.MGevangenisGebeurtenis.#ctor">
            <summary>Initializes a new mole</summary>
        </member>
        <member name="M:CRMonopoly.domein.gebeurtenis.Moles.MGevangenisGebeurtenis.#ctor(CRMonopoly.domein.gebeurtenis.GevangenisGebeurtenis)">
            <summary>Initializes a new mole for the given instance</summary>
        </member>
        <member name="M:CRMonopoly.domein.gebeurtenis.Moles.MGevangenisGebeurtenis.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:CRMonopoly.domein.gebeurtenis.Moles.MGevangenisGebeurtenis.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:CRMonopoly.domein.gebeurtenis.Moles.MGevangenisGebeurtenis.Bind(CRMonopoly.domein.gebeurtenis.Gebeurtenis)">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="P:CRMonopoly.domein.gebeurtenis.Moles.MGevangenisGebeurtenis.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:CRMonopoly.domein.gebeurtenis.Moles.MGevangenisGebeurtenis.ConstructorGevangenis">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.gebeurtenis.GevangenisGebeurtenis.#ctor(CRMonopoly.domein.velden.Gevangenis)"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.gebeurtenis.Moles.MGevangenisGebeurtenis.DeGevangenisGet">
            <summary>Sets the mole of <see cref="P:CRMonopoly.domein.gebeurtenis.GevangenisGebeurtenis.DeGevangenis"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.gebeurtenis.Moles.MGevangenisGebeurtenis.DeGevangenisSetGevangenis">
            <summary>Sets the mole of <see cref="P:CRMonopoly.domein.gebeurtenis.GevangenisGebeurtenis.DeGevangenis"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.gebeurtenis.Moles.MGevangenisGebeurtenis.IsVerplicht">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.gebeurtenis.GevangenisGebeurtenis.IsVerplicht"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.gebeurtenis.Moles.MGevangenisGebeurtenis.VoerUitSpeler">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.gebeurtenis.GevangenisGebeurtenis.VoerUit(CRMonopoly.domein.Speler)"/>
            </summary>
        </member>
        <member name="T:CRMonopoly.domein.gebeurtenis.Moles.MGevangenisGebeurtenis.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="P:CRMonopoly.domein.gebeurtenis.Moles.MGevangenisGebeurtenis.AllInstances.DeGevangenisGet">
            <summary>Sets the mole of <see cref="P:CRMonopoly.domein.gebeurtenis.GevangenisGebeurtenis.DeGevangenis"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.gebeurtenis.Moles.MGevangenisGebeurtenis.AllInstances.DeGevangenisSetGevangenis">
            <summary>Sets the mole of <see cref="P:CRMonopoly.domein.gebeurtenis.GevangenisGebeurtenis.DeGevangenis"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.gebeurtenis.Moles.MGevangenisGebeurtenis.AllInstances.IsVerplicht">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.gebeurtenis.GevangenisGebeurtenis.IsVerplicht"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.gebeurtenis.Moles.MGevangenisGebeurtenis.AllInstances.VoerUitSpeler">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.gebeurtenis.GevangenisGebeurtenis.VoerUit(CRMonopoly.domein.Speler)"/>
            </summary>
        </member>
        <member name="T:CRMonopoly.domein.Moles.MHuur">
            <summary>Mole type of <see cref="T:CRMonopoly.domein.Huur"/>
            .</summary>
        </member>
        <member name="M:CRMonopoly.domein.Moles.MHuur.#ctor">
            <summary>Initializes a new mole</summary>
        </member>
        <member name="M:CRMonopoly.domein.Moles.MHuur.#ctor(CRMonopoly.domein.Huur)">
            <summary>Initializes a new mole for the given instance</summary>
        </member>
        <member name="M:CRMonopoly.domein.Moles.MHuur.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:CRMonopoly.domein.Moles.MHuur.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MHuur.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MHuur.ConstructorInt32Int32Int32Int32Int32Int32">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.Huur.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MHuur.GeefTeBetalenHuurStraat">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.Huur.GeefTeBetalenHuur(CRMonopoly.domein.Straat)"/>
            </summary>
        </member>
        <member name="T:CRMonopoly.domein.Moles.MHuur.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MHuur.AllInstances.GeefTeBetalenHuurStraat">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.Huur.GeefTeBetalenHuur(CRMonopoly.domein.Straat)"/>
            </summary>
        </member>
        <member name="T:CRMonopoly.domein.velden.Moles.MKansEnAlgemeenfondsVeld">
            <summary>Mole type of <see cref="T:CRMonopoly.domein.velden.KansEnAlgemeenfondsVeld"/>
            .</summary>
        </member>
        <member name="M:CRMonopoly.domein.velden.Moles.MKansEnAlgemeenfondsVeld.#ctor">
            <summary>Initializes a new mole</summary>
        </member>
        <member name="M:CRMonopoly.domein.velden.Moles.MKansEnAlgemeenfondsVeld.#ctor(CRMonopoly.domein.velden.KansEnAlgemeenfondsVeld)">
            <summary>Initializes a new mole for the given instance</summary>
        </member>
        <member name="M:CRMonopoly.domein.velden.Moles.MKansEnAlgemeenfondsVeld.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:CRMonopoly.domein.velden.Moles.MKansEnAlgemeenfondsVeld.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="P:CRMonopoly.domein.velden.Moles.MKansEnAlgemeenfondsVeld.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:CRMonopoly.domein.velden.Moles.MKansEnAlgemeenfondsVeld.BuilderGet">
            <summary>Sets the mole of <see cref="P:CRMonopoly.domein.velden.KansEnAlgemeenfondsVeld.Builder"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.velden.Moles.MKansEnAlgemeenfondsVeld.BuilderSetKaartenBuilder">
            <summary>Sets the mole of <see cref="P:CRMonopoly.domein.velden.KansEnAlgemeenfondsVeld.Builder"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.velden.Moles.MKansEnAlgemeenfondsVeld.ConstructorString">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.velden.KansEnAlgemeenfondsVeld.#ctor(System.String)"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.velden.Moles.MKansEnAlgemeenfondsVeld.KaartenGet">
            <summary>Sets the mole of <see cref="P:CRMonopoly.domein.velden.KansEnAlgemeenfondsVeld.Kaarten"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.velden.Moles.MKansEnAlgemeenfondsVeld.KaartenSetListOfGebeurtenis">
            <summary>Sets the mole of <see cref="P:CRMonopoly.domein.velden.KansEnAlgemeenfondsVeld.Kaarten"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.velden.Moles.MKansEnAlgemeenfondsVeld.bepaalGebeurtenisSpeler">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.velden.KansEnAlgemeenfondsVeld.bepaalGebeurtenis(CRMonopoly.domein.Speler)"/>
            </summary>
        </member>
        <member name="T:CRMonopoly.domein.velden.Moles.MKansEnAlgemeenfondsVeld.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="P:CRMonopoly.domein.velden.Moles.MKansEnAlgemeenfondsVeld.AllInstances.BuilderGet">
            <summary>Sets the mole of <see cref="P:CRMonopoly.domein.velden.KansEnAlgemeenfondsVeld.Builder"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.velden.Moles.MKansEnAlgemeenfondsVeld.AllInstances.BuilderSetKaartenBuilder">
            <summary>Sets the mole of <see cref="P:CRMonopoly.domein.velden.KansEnAlgemeenfondsVeld.Builder"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.velden.Moles.MKansEnAlgemeenfondsVeld.AllInstances.KaartenGet">
            <summary>Sets the mole of <see cref="P:CRMonopoly.domein.velden.KansEnAlgemeenfondsVeld.Kaarten"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.velden.Moles.MKansEnAlgemeenfondsVeld.AllInstances.KaartenSetListOfGebeurtenis">
            <summary>Sets the mole of <see cref="P:CRMonopoly.domein.velden.KansEnAlgemeenfondsVeld.Kaarten"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.velden.Moles.MKansEnAlgemeenfondsVeld.AllInstances.bepaalGebeurtenisSpeler">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.velden.KansEnAlgemeenfondsVeld.bepaalGebeurtenis(CRMonopoly.domein.Speler)"/>
            </summary>
        </member>
        <member name="T:CRMonopoly.domein.Moles.MMonopolybord">
            <summary>Mole type of <see cref="T:CRMonopoly.domein.Monopolybord"/>
            .</summary>
        </member>
        <member name="M:CRMonopoly.domein.Moles.MMonopolybord.#ctor">
            <summary>Initializes a new mole</summary>
        </member>
        <member name="M:CRMonopoly.domein.Moles.MMonopolybord.#ctor(CRMonopoly.domein.Monopolybord)">
            <summary>Initializes a new mole for the given instance</summary>
        </member>
        <member name="M:CRMonopoly.domein.Moles.MMonopolybord.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:CRMonopoly.domein.Moles.MMonopolybord.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MMonopolybord.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MMonopolybord.Constructor">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.Monopolybord.#ctor"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MMonopolybord.DeGevangenisGet">
            <summary>Sets the mole of <see cref="P:CRMonopoly.domein.Monopolybord.DeGevangenis"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MMonopolybord.DeGevangenisSetGevangenis">
            <summary>Sets the mole of <see cref="P:CRMonopoly.domein.Monopolybord.DeGevangenis"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MMonopolybord.GeefPositieVeld">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.Monopolybord.GeefPositie(CRMonopoly.domein.Veld)"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MMonopolybord.GeefStationWest">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.Monopolybord.GeefStationWest"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MMonopolybord.GeefVeldString">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.Monopolybord.GeefVeld(System.String)"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MMonopolybord.GeefVeldVeldWorp">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.Monopolybord.GeefVeld(CRMonopoly.domein.Veld,CRMonopoly.domein.Worp)"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MMonopolybord.IsLangsStartGekomenVeldVeld">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.Monopolybord.IsLangsStartGekomen(CRMonopoly.domein.Veld,CRMonopoly.domein.Veld)"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MMonopolybord.LoggerGet">
            <summary>Sets the mole of <see cref="P:CRMonopoly.domein.Monopolybord.Logger"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MMonopolybord.LoggerSetSpelinfoLogger">
            <summary>Sets the mole of <see cref="P:CRMonopoly.domein.Monopolybord.Logger"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MMonopolybord.StartVeld">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.Monopolybord.StartVeld"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MMonopolybord.StraatString">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.Monopolybord.Straat(System.String)"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MMonopolybord._ctorb__0Veld">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.Monopolybord.&lt;.ctor&gt;b__0(CRMonopoly.domein.Veld)"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MMonopolybord.getBarteljorisstraat">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.Monopolybord.getBarteljorisstraat"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MMonopolybord.layoutBord">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.Monopolybord.layoutBord"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MMonopolybord.layoutBottomRowIncludingCorners">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.Monopolybord.layoutBottomRowIncludingCorners"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MMonopolybord.layoutLeftRowWithoutCorners">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.Monopolybord.layoutLeftRowWithoutCorners"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MMonopolybord.layoutRightRowWithoutCorners">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.Monopolybord.layoutRightRowWithoutCorners"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MMonopolybord.layoutTopRowIncludingCorners">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.Monopolybord.layoutTopRowIncludingCorners"/>
            </summary>
        </member>
        <member name="T:CRMonopoly.domein.Moles.MMonopolybord.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MMonopolybord.AllInstances.DeGevangenisGet">
            <summary>Sets the mole of <see cref="P:CRMonopoly.domein.Monopolybord.DeGevangenis"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MMonopolybord.AllInstances.DeGevangenisSetGevangenis">
            <summary>Sets the mole of <see cref="P:CRMonopoly.domein.Monopolybord.DeGevangenis"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MMonopolybord.AllInstances.GeefPositieVeld">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.Monopolybord.GeefPositie(CRMonopoly.domein.Veld)"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MMonopolybord.AllInstances.GeefStationWest">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.Monopolybord.GeefStationWest"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MMonopolybord.AllInstances.GeefVeldString">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.Monopolybord.GeefVeld(System.String)"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MMonopolybord.AllInstances.GeefVeldVeldWorp">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.Monopolybord.GeefVeld(CRMonopoly.domein.Veld,CRMonopoly.domein.Worp)"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MMonopolybord.AllInstances.IsLangsStartGekomenVeldVeld">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.Monopolybord.IsLangsStartGekomen(CRMonopoly.domein.Veld,CRMonopoly.domein.Veld)"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MMonopolybord.AllInstances.LoggerGet">
            <summary>Sets the mole of <see cref="P:CRMonopoly.domein.Monopolybord.Logger"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MMonopolybord.AllInstances.LoggerSetSpelinfoLogger">
            <summary>Sets the mole of <see cref="P:CRMonopoly.domein.Monopolybord.Logger"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MMonopolybord.AllInstances.StartVeld">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.Monopolybord.StartVeld"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MMonopolybord.AllInstances.StraatString">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.Monopolybord.Straat(System.String)"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MMonopolybord.AllInstances._ctorb__0Veld">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.Monopolybord.&lt;.ctor&gt;b__0(CRMonopoly.domein.Veld)"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MMonopolybord.AllInstances.getBarteljorisstraat">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.Monopolybord.getBarteljorisstraat"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MMonopolybord.AllInstances.layoutBord">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.Monopolybord.layoutBord"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MMonopolybord.AllInstances.layoutBottomRowIncludingCorners">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.Monopolybord.layoutBottomRowIncludingCorners"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MMonopolybord.AllInstances.layoutLeftRowWithoutCorners">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.Monopolybord.layoutLeftRowWithoutCorners"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MMonopolybord.AllInstances.layoutRightRowWithoutCorners">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.Monopolybord.layoutRightRowWithoutCorners"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MMonopolybord.AllInstances.layoutTopRowIncludingCorners">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.Monopolybord.layoutTopRowIncludingCorners"/>
            </summary>
        </member>
        <member name="T:CRMonopoly.domein.Moles.MMonopolyspel">
            <summary>Mole type of <see cref="T:CRMonopoly.domein.Monopolyspel"/>
            .</summary>
        </member>
        <member name="M:CRMonopoly.domein.Moles.MMonopolyspel.#ctor">
            <summary>Initializes a new mole</summary>
        </member>
        <member name="M:CRMonopoly.domein.Moles.MMonopolyspel.#ctor(CRMonopoly.domein.Monopolyspel)">
            <summary>Initializes a new mole for the given instance</summary>
        </member>
        <member name="M:CRMonopoly.domein.Moles.MMonopolyspel.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:CRMonopoly.domein.Moles.MMonopolyspel.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MMonopolyspel.AantalSpelers">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.Monopolyspel.AantalSpelers"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MMonopolyspel.AddSpeler">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.Monopolyspel.Add(CRMonopoly.domein.Speler)"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MMonopolyspel.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MMonopolyspel.BordGet">
            <summary>Sets the mole of <see cref="P:CRMonopoly.domein.Monopolyspel.Bord"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MMonopolyspel.BordSetMonopolybord">
            <summary>Sets the mole of <see cref="P:CRMonopoly.domein.Monopolyspel.Bord"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MMonopolyspel.Constructor">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.Monopolyspel.#ctor"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MMonopolyspel.ErIsEenVerliezer">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.Monopolyspel.ErIsEenVerliezer"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MMonopolyspel.SpelersGet">
            <summary>Sets the mole of <see cref="P:CRMonopoly.domein.Monopolyspel.Spelers"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MMonopolyspel.SpelersSetListOfSpeler">
            <summary>Sets the mole of <see cref="P:CRMonopoly.domein.Monopolyspel.Spelers"/>
            </summary>
        </member>
        <member name="T:CRMonopoly.domein.Moles.MMonopolyspel.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MMonopolyspel.AllInstances.AantalSpelers">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.Monopolyspel.AantalSpelers"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MMonopolyspel.AllInstances.AddSpeler">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.Monopolyspel.Add(CRMonopoly.domein.Speler)"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MMonopolyspel.AllInstances.BordGet">
            <summary>Sets the mole of <see cref="P:CRMonopoly.domein.Monopolyspel.Bord"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MMonopolyspel.AllInstances.BordSetMonopolybord">
            <summary>Sets the mole of <see cref="P:CRMonopoly.domein.Monopolyspel.Bord"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MMonopolyspel.AllInstances.ErIsEenVerliezer">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.Monopolyspel.ErIsEenVerliezer"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MMonopolyspel.AllInstances.SpelersGet">
            <summary>Sets the mole of <see cref="P:CRMonopoly.domein.Monopolyspel.Spelers"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MMonopolyspel.AllInstances.SpelersSetListOfSpeler">
            <summary>Sets the mole of <see cref="P:CRMonopoly.domein.Monopolyspel.Spelers"/>
            </summary>
        </member>
        <member name="T:CRMonopoly.domein.Moles.MMonopolyspelController">
            <summary>Mole type of <see cref="T:CRMonopoly.domein.MonopolyspelController"/>
            .</summary>
        </member>
        <member name="M:CRMonopoly.domein.Moles.MMonopolyspelController.#ctor">
            <summary>Initializes a new mole</summary>
        </member>
        <member name="M:CRMonopoly.domein.Moles.MMonopolyspelController.#ctor(CRMonopoly.domein.MonopolyspelController)">
            <summary>Initializes a new mole for the given instance</summary>
        </member>
        <member name="M:CRMonopoly.domein.Moles.MMonopolyspelController.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:CRMonopoly.domein.Moles.MMonopolyspelController.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MMonopolyspelController.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MMonopolyspelController.ConstructorMonopolyspel">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.MonopolyspelController.#ctor(CRMonopoly.domein.Monopolyspel)"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MMonopolyspelController.EindeBeurtSpeler">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.MonopolyspelController.EindeBeurt(CRMonopoly.domein.Speler)"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MMonopolyspelController.SpelGet">
            <summary>Sets the mole of <see cref="P:CRMonopoly.domein.MonopolyspelController.Spel"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MMonopolyspelController.SpelSetMonopolyspel">
            <summary>Sets the mole of <see cref="P:CRMonopoly.domein.MonopolyspelController.Spel"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MMonopolyspelController.StartBeurtSpeler">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.MonopolyspelController.StartBeurt(CRMonopoly.domein.Speler)"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MMonopolyspelController.StartSpel">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.MonopolyspelController.StartSpel"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MMonopolyspelController.addSpelerString">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.MonopolyspelController.addSpeler(System.String)"/>
            </summary>
        </member>
        <member name="T:CRMonopoly.domein.Moles.MMonopolyspelController.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MMonopolyspelController.AllInstances.EindeBeurtSpeler">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.MonopolyspelController.EindeBeurt(CRMonopoly.domein.Speler)"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MMonopolyspelController.AllInstances.SpelGet">
            <summary>Sets the mole of <see cref="P:CRMonopoly.domein.MonopolyspelController.Spel"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MMonopolyspelController.AllInstances.SpelSetMonopolyspel">
            <summary>Sets the mole of <see cref="P:CRMonopoly.domein.MonopolyspelController.Spel"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MMonopolyspelController.AllInstances.StartBeurtSpeler">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.MonopolyspelController.StartBeurt(CRMonopoly.domein.Speler)"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MMonopolyspelController.AllInstances.StartSpel">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.MonopolyspelController.StartSpel"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MMonopolyspelController.AllInstances.addSpelerString">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.MonopolyspelController.addSpeler(System.String)"/>
            </summary>
        </member>
        <member name="T:CRMonopoly.domein.velden.Moles.MNutsbedrijf">
            <summary>Mole type of <see cref="T:CRMonopoly.domein.velden.Nutsbedrijf"/>
            .</summary>
        </member>
        <member name="M:CRMonopoly.domein.velden.Moles.MNutsbedrijf.#ctor">
            <summary>Initializes a new mole</summary>
        </member>
        <member name="M:CRMonopoly.domein.velden.Moles.MNutsbedrijf.#ctor(CRMonopoly.domein.velden.Nutsbedrijf)">
            <summary>Initializes a new mole for the given instance</summary>
        </member>
        <member name="M:CRMonopoly.domein.velden.Moles.MNutsbedrijf.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:CRMonopoly.domein.velden.Moles.MNutsbedrijf.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:CRMonopoly.domein.velden.Moles.MNutsbedrijf.Bind(CRMonopoly.domein.velden.VerkoopbaarVeld)">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="P:CRMonopoly.domein.velden.Moles.MNutsbedrijf.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:CRMonopoly.domein.velden.Moles.MNutsbedrijf.ConstructorString">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.velden.Nutsbedrijf.#ctor(System.String)"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.velden.Moles.MNutsbedrijf.EigenaarGet">
            <summary>Sets the mole of <see cref="P:CRMonopoly.domein.velden.Nutsbedrijf.Eigenaar"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.velden.Moles.MNutsbedrijf.EigenaarSetSpeler">
            <summary>Sets the mole of <see cref="P:CRMonopoly.domein.velden.Nutsbedrijf.Eigenaar"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.velden.Moles.MNutsbedrijf.EqualsObject">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.velden.Nutsbedrijf.Equals(System.Object)"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.velden.Moles.MNutsbedrijf.GeefAankoopprijs">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.velden.Nutsbedrijf.GeefAankoopprijs"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.velden.Moles.MNutsbedrijf.GeefEigenaar">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.velden.Nutsbedrijf.GeefEigenaar"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.velden.Moles.MNutsbedrijf.GeefTeBetalenHuurSpeler">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.velden.Nutsbedrijf.GeefTeBetalenHuur(CRMonopoly.domein.Speler)"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.velden.Moles.MNutsbedrijf.GetHashCode">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.velden.Nutsbedrijf.GetHashCode"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.velden.Moles.MNutsbedrijf.bepaalGebeurtenisSpeler">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.velden.Nutsbedrijf.bepaalGebeurtenis(CRMonopoly.domein.Speler)"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.velden.Moles.MNutsbedrijf.getMultiplier">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.velden.Nutsbedrijf.getMultiplier"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.velden.Moles.MNutsbedrijf.isVerkocht">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.velden.Nutsbedrijf.isVerkocht"/>
            </summary>
        </member>
        <member name="T:CRMonopoly.domein.velden.Moles.MNutsbedrijf.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="P:CRMonopoly.domein.velden.Moles.MNutsbedrijf.AllInstances.EigenaarGet">
            <summary>Sets the mole of <see cref="P:CRMonopoly.domein.velden.Nutsbedrijf.Eigenaar"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.velden.Moles.MNutsbedrijf.AllInstances.EigenaarSetSpeler">
            <summary>Sets the mole of <see cref="P:CRMonopoly.domein.velden.Nutsbedrijf.Eigenaar"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.velden.Moles.MNutsbedrijf.AllInstances.EqualsObject">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.velden.Nutsbedrijf.Equals(System.Object)"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.velden.Moles.MNutsbedrijf.AllInstances.GeefAankoopprijs">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.velden.Nutsbedrijf.GeefAankoopprijs"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.velden.Moles.MNutsbedrijf.AllInstances.GeefEigenaar">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.velden.Nutsbedrijf.GeefEigenaar"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.velden.Moles.MNutsbedrijf.AllInstances.GeefTeBetalenHuurSpeler">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.velden.Nutsbedrijf.GeefTeBetalenHuur(CRMonopoly.domein.Speler)"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.velden.Moles.MNutsbedrijf.AllInstances.GetHashCode01">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.velden.Nutsbedrijf.GetHashCode"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.velden.Moles.MNutsbedrijf.AllInstances.bepaalGebeurtenisSpeler">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.velden.Nutsbedrijf.bepaalGebeurtenis(CRMonopoly.domein.Speler)"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.velden.Moles.MNutsbedrijf.AllInstances.getMultiplier">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.velden.Nutsbedrijf.getMultiplier"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.velden.Moles.MNutsbedrijf.AllInstances.isVerkocht">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.velden.Nutsbedrijf.isVerkocht"/>
            </summary>
        </member>
        <member name="T:CRMonopoly.domein.Moles.MNutsbedrijven">
            <summary>Mole type of <see cref="T:CRMonopoly.domein.Nutsbedrijven"/>
            .</summary>
        </member>
        <member name="M:CRMonopoly.domein.Moles.MNutsbedrijven.#ctor">
            <summary>Initializes a new mole</summary>
        </member>
        <member name="M:CRMonopoly.domein.Moles.MNutsbedrijven.#ctor(CRMonopoly.domein.Nutsbedrijven)">
            <summary>Initializes a new mole for the given instance</summary>
        </member>
        <member name="M:CRMonopoly.domein.Moles.MNutsbedrijven.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:CRMonopoly.domein.Moles.MNutsbedrijven.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MNutsbedrijven.AddNutsbedrijf">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.Nutsbedrijven.Add(CRMonopoly.domein.velden.Nutsbedrijf)"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MNutsbedrijven.AlleNutsBedrijvenGet">
            <summary>Sets the mole of <see cref="P:CRMonopoly.domein.Nutsbedrijven.AlleNutsBedrijven"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MNutsbedrijven.AlleNutsBedrijvenSetListOfNutsbedrijf">
            <summary>Sets the mole of <see cref="P:CRMonopoly.domein.Nutsbedrijven.AlleNutsBedrijven"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MNutsbedrijven.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MNutsbedrijven.Constructor">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.Nutsbedrijven.#ctor"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MNutsbedrijven.getBedrijfByNameString">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.Nutsbedrijven.getBedrijfByName(System.String)"/>
            </summary>
        </member>
        <member name="T:CRMonopoly.domein.Moles.MNutsbedrijven.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MNutsbedrijven.AllInstances.AddNutsbedrijf">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.Nutsbedrijven.Add(CRMonopoly.domein.velden.Nutsbedrijf)"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MNutsbedrijven.AllInstances.AlleNutsBedrijvenGet">
            <summary>Sets the mole of <see cref="P:CRMonopoly.domein.Nutsbedrijven.AlleNutsBedrijven"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MNutsbedrijven.AllInstances.AlleNutsBedrijvenSetListOfNutsbedrijf">
            <summary>Sets the mole of <see cref="P:CRMonopoly.domein.Nutsbedrijven.AlleNutsBedrijven"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MNutsbedrijven.AllInstances.getBedrijfByNameString">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.Nutsbedrijven.getBedrijfByName(System.String)"/>
            </summary>
        </member>
        <member name="T:CRMonopoly.domein.gebeurtenis.creator.Moles.MSpeelVerlaatDeGevangenisGebeurtenisCreator">
            <summary>Mole type of <see cref="T:CRMonopoly.domein.gebeurtenis.creator.SpeelVerlaatDeGevangenisGebeurtenisCreator"/>
            .</summary>
        </member>
        <member name="M:CRMonopoly.domein.gebeurtenis.creator.Moles.MSpeelVerlaatDeGevangenisGebeurtenisCreator.#ctor">
            <summary>Initializes a new mole</summary>
        </member>
        <member name="M:CRMonopoly.domein.gebeurtenis.creator.Moles.MSpeelVerlaatDeGevangenisGebeurtenisCreator.#ctor(CRMonopoly.domein.gebeurtenis.creator.SpeelVerlaatDeGevangenisGebeurtenisCreator)">
            <summary>Initializes a new mole for the given instance</summary>
        </member>
        <member name="M:CRMonopoly.domein.gebeurtenis.creator.Moles.MSpeelVerlaatDeGevangenisGebeurtenisCreator.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:CRMonopoly.domein.gebeurtenis.creator.Moles.MSpeelVerlaatDeGevangenisGebeurtenisCreator.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="P:CRMonopoly.domein.gebeurtenis.creator.Moles.MSpeelVerlaatDeGevangenisGebeurtenisCreator.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:CRMonopoly.domein.gebeurtenis.creator.Moles.MSpeelVerlaatDeGevangenisGebeurtenisCreator.Constructor">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.gebeurtenis.creator.SpeelVerlaatDeGevangenisGebeurtenisCreator.#ctor"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.gebeurtenis.creator.Moles.MSpeelVerlaatDeGevangenisGebeurtenisCreator.IsGebeurtenisVoorSpelerSpeler">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.gebeurtenis.creator.SpeelVerlaatDeGevangenisGebeurtenisCreator.IsGebeurtenisVoorSpeler(CRMonopoly.domein.Speler)"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.gebeurtenis.creator.Moles.MSpeelVerlaatDeGevangenisGebeurtenisCreator.MaakGebeurtenisSpeler">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.gebeurtenis.creator.SpeelVerlaatDeGevangenisGebeurtenisCreator.MaakGebeurtenis(CRMonopoly.domein.Speler)"/>
            </summary>
        </member>
        <member name="T:CRMonopoly.domein.gebeurtenis.creator.Moles.MSpeelVerlaatDeGevangenisGebeurtenisCreator.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="P:CRMonopoly.domein.gebeurtenis.creator.Moles.MSpeelVerlaatDeGevangenisGebeurtenisCreator.AllInstances.IsGebeurtenisVoorSpelerSpeler">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.gebeurtenis.creator.SpeelVerlaatDeGevangenisGebeurtenisCreator.IsGebeurtenisVoorSpeler(CRMonopoly.domein.Speler)"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.gebeurtenis.creator.Moles.MSpeelVerlaatDeGevangenisGebeurtenisCreator.AllInstances.MaakGebeurtenisSpeler">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.gebeurtenis.creator.SpeelVerlaatDeGevangenisGebeurtenisCreator.MaakGebeurtenis(CRMonopoly.domein.Speler)"/>
            </summary>
        </member>
        <member name="T:CRMonopoly.domein.Moles.MSpeler">
            <summary>Mole type of <see cref="T:CRMonopoly.domein.Speler"/>
            .</summary>
        </member>
        <member name="M:CRMonopoly.domein.Moles.MSpeler.#ctor">
            <summary>Initializes a new mole</summary>
        </member>
        <member name="M:CRMonopoly.domein.Moles.MSpeler.#ctor(CRMonopoly.domein.Speler)">
            <summary>Initializes a new mole for the given instance</summary>
        </member>
        <member name="M:CRMonopoly.domein.Moles.MSpeler.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:CRMonopoly.domein.Moles.MSpeler.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MSpeler.AantalNutsbedrijven">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.Speler.AantalNutsbedrijven"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MSpeler.AantalStations">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.Speler.AantalStations"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MSpeler.AddVerkoopbaarVeld">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.Speler.Add(CRMonopoly.domein.velden.VerkoopbaarVeld)"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MSpeler.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MSpeler.BepaalStartgebeurtenissen">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.Speler.BepaalStartgebeurtenissen"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MSpeler.BetaalInt32Speler">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.Speler.Betaal(System.Int32,CRMonopoly.domein.Speler)"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MSpeler.BordGet">
            <summary>Sets the mole of <see cref="P:CRMonopoly.domein.Speler.Bord"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MSpeler.BordSetMonopolybord">
            <summary>Sets the mole of <see cref="P:CRMonopoly.domein.Speler.Bord"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MSpeler.ConstructorString">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.Speler.#ctor(System.String)"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MSpeler.GeefVerlaatDeGevangeniskaart">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.Speler.GeefVerlaatDeGevangeniskaart"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MSpeler.GeldeenhedenGet">
            <summary>Sets the mole of <see cref="P:CRMonopoly.domein.Speler.Geldeenheden"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MSpeler.GeldeenhedenSetInt32">
            <summary>Sets the mole of <see cref="P:CRMonopoly.domein.Speler.Geldeenheden"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MSpeler.GooiDobbelstenen">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.Speler.GooiDobbelstenen"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MSpeler.HeeftVerlaatDeGevangenisKaart">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.Speler.HeeftVerlaatDeGevangenisKaart"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MSpeler.HuidigePositieGet">
            <summary>Sets the mole of <see cref="P:CRMonopoly.domein.Speler.HuidigePositie"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MSpeler.HuidigePositieSetVeld">
            <summary>Sets the mole of <see cref="P:CRMonopoly.domein.Speler.HuidigePositie"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MSpeler.InGevangenisGet">
            <summary>Sets the mole of <see cref="P:CRMonopoly.domein.Speler.InGevangenis"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MSpeler.InGevangenisSetBoolean">
            <summary>Sets the mole of <see cref="P:CRMonopoly.domein.Speler.InGevangenis"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MSpeler.IsNogEenKeerGooien">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.Speler.IsNogEenKeerGooien"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MSpeler.LeverInVerlaatDeGevangenisKaartVerlaatDeGevangenis">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.Speler.LeverInVerlaatDeGevangenisKaart(CRMonopoly.domein.gebeurtenis.kans.VerlaatDeGevangenis)"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MSpeler.NameGet">
            <summary>Sets the mole of <see cref="P:CRMonopoly.domein.Speler.Name"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MSpeler.NameSetString">
            <summary>Sets the mole of <see cref="P:CRMonopoly.domein.Speler.Name"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MSpeler.OntvangInt32">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.Speler.Ontvang(System.Int32)"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MSpeler.OntvangVerlaatDeGevangenisKaartVerlaatDeGevangenis">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.Speler.OntvangVerlaatDeGevangenisKaart(CRMonopoly.domein.gebeurtenis.kans.VerlaatDeGevangenis)"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MSpeler.StratenInBezitGet">
            <summary>Sets the mole of <see cref="P:CRMonopoly.domein.Speler.StratenInBezit"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MSpeler.StratenInBezitSetListOfVerkoopbaarVeld">
            <summary>Sets the mole of <see cref="P:CRMonopoly.domein.Speler.StratenInBezit"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MSpeler.ToString">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.Speler.ToString"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MSpeler.UitTeVoerenGebeurtenissenGet">
            <summary>Sets the mole of <see cref="P:CRMonopoly.domein.Speler.UitTeVoerenGebeurtenissen"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MSpeler.UitTeVoerenGebeurtenissenSetGebeurtenissen">
            <summary>Sets the mole of <see cref="P:CRMonopoly.domein.Speler.UitTeVoerenGebeurtenissen"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MSpeler.VerlaatDeGevangenisKaartenGet">
            <summary>Sets the mole of <see cref="P:CRMonopoly.domein.Speler.VerlaatDeGevangenisKaarten"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MSpeler.VerlaatDeGevangenisKaartenSetListOfVerlaatDeGevangenis">
            <summary>Sets the mole of <see cref="P:CRMonopoly.domein.Speler.VerlaatDeGevangenisKaarten"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MSpeler.Verplaats">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.Speler.Verplaats"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MSpeler.VerplaatsVeld">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.Speler.Verplaats(CRMonopoly.domein.Veld)"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MSpeler.WorpenInHuidigeBeurtGet">
            <summary>Sets the mole of <see cref="P:CRMonopoly.domein.Speler.WorpenInHuidigeBeurt"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MSpeler.WorpenInHuidigeBeurtSetWorpen">
            <summary>Sets the mole of <see cref="P:CRMonopoly.domein.Speler.WorpenInHuidigeBeurt"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MSpeler._AantalNutsbedrijvenb__0VerkoopbaarVeld">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.Speler.&lt;AantalNutsbedrijven&gt;b__0(CRMonopoly.domein.velden.VerkoopbaarVeld)"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MSpeler._AantalStationsb__2VerkoopbaarVeld">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.Speler.&lt;AantalStations&gt;b__2(CRMonopoly.domein.velden.VerkoopbaarVeld)"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MSpeler.getStraten">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.Speler.getStraten"/>
            </summary>
        </member>
        <member name="T:CRMonopoly.domein.Moles.MSpeler.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MSpeler.AllInstances.AantalNutsbedrijven">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.Speler.AantalNutsbedrijven"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MSpeler.AllInstances.AantalStations">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.Speler.AantalStations"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MSpeler.AllInstances.AddVerkoopbaarVeld">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.Speler.Add(CRMonopoly.domein.velden.VerkoopbaarVeld)"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MSpeler.AllInstances.BepaalStartgebeurtenissen">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.Speler.BepaalStartgebeurtenissen"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MSpeler.AllInstances.BetaalInt32Speler">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.Speler.Betaal(System.Int32,CRMonopoly.domein.Speler)"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MSpeler.AllInstances.BordGet">
            <summary>Sets the mole of <see cref="P:CRMonopoly.domein.Speler.Bord"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MSpeler.AllInstances.BordSetMonopolybord">
            <summary>Sets the mole of <see cref="P:CRMonopoly.domein.Speler.Bord"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MSpeler.AllInstances.GeefVerlaatDeGevangeniskaart">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.Speler.GeefVerlaatDeGevangeniskaart"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MSpeler.AllInstances.GeldeenhedenGet">
            <summary>Sets the mole of <see cref="P:CRMonopoly.domein.Speler.Geldeenheden"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MSpeler.AllInstances.GeldeenhedenSetInt32">
            <summary>Sets the mole of <see cref="P:CRMonopoly.domein.Speler.Geldeenheden"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MSpeler.AllInstances.GooiDobbelstenen">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.Speler.GooiDobbelstenen"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MSpeler.AllInstances.HeeftVerlaatDeGevangenisKaart">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.Speler.HeeftVerlaatDeGevangenisKaart"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MSpeler.AllInstances.HuidigePositieGet">
            <summary>Sets the mole of <see cref="P:CRMonopoly.domein.Speler.HuidigePositie"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MSpeler.AllInstances.HuidigePositieSetVeld">
            <summary>Sets the mole of <see cref="P:CRMonopoly.domein.Speler.HuidigePositie"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MSpeler.AllInstances.InGevangenisGet">
            <summary>Sets the mole of <see cref="P:CRMonopoly.domein.Speler.InGevangenis"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MSpeler.AllInstances.InGevangenisSetBoolean">
            <summary>Sets the mole of <see cref="P:CRMonopoly.domein.Speler.InGevangenis"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MSpeler.AllInstances.IsNogEenKeerGooien">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.Speler.IsNogEenKeerGooien"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MSpeler.AllInstances.LeverInVerlaatDeGevangenisKaartVerlaatDeGevangenis">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.Speler.LeverInVerlaatDeGevangenisKaart(CRMonopoly.domein.gebeurtenis.kans.VerlaatDeGevangenis)"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MSpeler.AllInstances.NameGet">
            <summary>Sets the mole of <see cref="P:CRMonopoly.domein.Speler.Name"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MSpeler.AllInstances.NameSetString">
            <summary>Sets the mole of <see cref="P:CRMonopoly.domein.Speler.Name"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MSpeler.AllInstances.OntvangInt32">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.Speler.Ontvang(System.Int32)"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MSpeler.AllInstances.OntvangVerlaatDeGevangenisKaartVerlaatDeGevangenis">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.Speler.OntvangVerlaatDeGevangenisKaart(CRMonopoly.domein.gebeurtenis.kans.VerlaatDeGevangenis)"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MSpeler.AllInstances.StratenInBezitGet">
            <summary>Sets the mole of <see cref="P:CRMonopoly.domein.Speler.StratenInBezit"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MSpeler.AllInstances.StratenInBezitSetListOfVerkoopbaarVeld">
            <summary>Sets the mole of <see cref="P:CRMonopoly.domein.Speler.StratenInBezit"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MSpeler.AllInstances.ToString01">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.Speler.ToString"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MSpeler.AllInstances.UitTeVoerenGebeurtenissenGet">
            <summary>Sets the mole of <see cref="P:CRMonopoly.domein.Speler.UitTeVoerenGebeurtenissen"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MSpeler.AllInstances.UitTeVoerenGebeurtenissenSetGebeurtenissen">
            <summary>Sets the mole of <see cref="P:CRMonopoly.domein.Speler.UitTeVoerenGebeurtenissen"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MSpeler.AllInstances.VerlaatDeGevangenisKaartenGet">
            <summary>Sets the mole of <see cref="P:CRMonopoly.domein.Speler.VerlaatDeGevangenisKaarten"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MSpeler.AllInstances.VerlaatDeGevangenisKaartenSetListOfVerlaatDeGevangenis">
            <summary>Sets the mole of <see cref="P:CRMonopoly.domein.Speler.VerlaatDeGevangenisKaarten"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MSpeler.AllInstances.Verplaats">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.Speler.Verplaats"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MSpeler.AllInstances.VerplaatsVeld">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.Speler.Verplaats(CRMonopoly.domein.Veld)"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MSpeler.AllInstances.WorpenInHuidigeBeurtGet">
            <summary>Sets the mole of <see cref="P:CRMonopoly.domein.Speler.WorpenInHuidigeBeurt"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MSpeler.AllInstances.WorpenInHuidigeBeurtSetWorpen">
            <summary>Sets the mole of <see cref="P:CRMonopoly.domein.Speler.WorpenInHuidigeBeurt"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MSpeler.AllInstances.getStraten">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.Speler.getStraten"/>
            </summary>
        </member>
        <member name="T:CRMonopoly.Moles.MSpelinfoLogger">
            <summary>Mole type of <see cref="T:CRMonopoly.SpelinfoLogger"/>
            .</summary>
        </member>
        <member name="M:CRMonopoly.Moles.MSpelinfoLogger.#ctor">
            <summary>Initializes a new mole</summary>
        </member>
        <member name="M:CRMonopoly.Moles.MSpelinfoLogger.#ctor(CRMonopoly.SpelinfoLogger)">
            <summary>Initializes a new mole for the given instance</summary>
        </member>
        <member name="M:CRMonopoly.Moles.MSpelinfoLogger.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:CRMonopoly.Moles.MSpelinfoLogger.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="P:CRMonopoly.Moles.MSpelinfoLogger.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:CRMonopoly.Moles.MSpelinfoLogger.Constructor">
            <summary>Sets the mole of <see cref="M:CRMonopoly.SpelinfoLogger.#ctor"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.Moles.MSpelinfoLogger.LogObjectArray">
            <summary>Sets the mole of <see cref="M:CRMonopoly.SpelinfoLogger.Log(System.Object[])"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.Moles.MSpelinfoLogger.LogSpelInfoMonopolyspel">
            <summary>Sets the mole of <see cref="M:CRMonopoly.SpelinfoLogger.LogSpelInfo(CRMonopoly.domein.Monopolyspel)"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.Moles.MSpelinfoLogger.LogString">
            <summary>Sets the mole of <see cref="M:CRMonopoly.SpelinfoLogger.Log(System.String)"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.Moles.MSpelinfoLogger.NewlineLogObjectArray">
            <summary>Sets the mole of <see cref="M:CRMonopoly.SpelinfoLogger.NewlineLog(System.Object[])"/>
            </summary>
        </member>
        <member name="T:CRMonopoly.Moles.MSpelinfoLogger.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="T:CRMonopoly.domein.Moles.MStad">
            <summary>Mole type of <see cref="T:CRMonopoly.domein.Stad"/>
            .</summary>
        </member>
        <member name="M:CRMonopoly.domein.Moles.MStad.#ctor">
            <summary>Initializes a new mole</summary>
        </member>
        <member name="M:CRMonopoly.domein.Moles.MStad.#ctor(CRMonopoly.domein.Stad)">
            <summary>Initializes a new mole for the given instance</summary>
        </member>
        <member name="M:CRMonopoly.domein.Moles.MStad.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:CRMonopoly.domein.Moles.MStad.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MStad.AddStraat">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.Stad.Add(CRMonopoly.domein.Straat)"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MStad.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MStad.ConstructorStringInt32">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.Stad.#ctor(System.String,System.Int32)"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MStad.HeeftAlleSratenInBezitSpeler">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.Stad.HeeftAlleSratenInBezit(CRMonopoly.domein.Speler)"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MStad.HuisprijsGet">
            <summary>Sets the mole of <see cref="P:CRMonopoly.domein.Stad.Huisprijs"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MStad.HuisprijsSetInt32">
            <summary>Sets the mole of <see cref="P:CRMonopoly.domein.Stad.Huisprijs"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MStad.NaamGet">
            <summary>Sets the mole of <see cref="P:CRMonopoly.domein.Stad.Naam"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MStad.NaamSetString">
            <summary>Sets the mole of <see cref="P:CRMonopoly.domein.Stad.Naam"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MStad.StratenGet">
            <summary>Sets the mole of <see cref="P:CRMonopoly.domein.Stad.Straten"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MStad.StratenSetListOfStraat">
            <summary>Sets the mole of <see cref="P:CRMonopoly.domein.Stad.Straten"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MStad.getStraatByIndexInt32">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.Stad.getStraatByIndex(System.Int32)"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MStad.getStraatByNameString">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.Stad.getStraatByName(System.String)"/>
            </summary>
        </member>
        <member name="T:CRMonopoly.domein.Moles.MStad.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MStad.AllInstances.AddStraat">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.Stad.Add(CRMonopoly.domein.Straat)"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MStad.AllInstances.HeeftAlleSratenInBezitSpeler">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.Stad.HeeftAlleSratenInBezit(CRMonopoly.domein.Speler)"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MStad.AllInstances.HuisprijsGet">
            <summary>Sets the mole of <see cref="P:CRMonopoly.domein.Stad.Huisprijs"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MStad.AllInstances.HuisprijsSetInt32">
            <summary>Sets the mole of <see cref="P:CRMonopoly.domein.Stad.Huisprijs"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MStad.AllInstances.NaamGet">
            <summary>Sets the mole of <see cref="P:CRMonopoly.domein.Stad.Naam"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MStad.AllInstances.NaamSetString">
            <summary>Sets the mole of <see cref="P:CRMonopoly.domein.Stad.Naam"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MStad.AllInstances.StratenGet">
            <summary>Sets the mole of <see cref="P:CRMonopoly.domein.Stad.Straten"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MStad.AllInstances.StratenSetListOfStraat">
            <summary>Sets the mole of <see cref="P:CRMonopoly.domein.Stad.Straten"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MStad.AllInstances.getStraatByIndexInt32">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.Stad.getStraatByIndex(System.Int32)"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MStad.AllInstances.getStraatByNameString">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.Stad.getStraatByName(System.String)"/>
            </summary>
        </member>
        <member name="T:CRMonopoly.domein.velden.Moles.MStation">
            <summary>Mole type of <see cref="T:CRMonopoly.domein.velden.Station"/>
            .</summary>
        </member>
        <member name="M:CRMonopoly.domein.velden.Moles.MStation.#ctor">
            <summary>Initializes a new mole</summary>
        </member>
        <member name="M:CRMonopoly.domein.velden.Moles.MStation.#ctor(CRMonopoly.domein.velden.Station)">
            <summary>Initializes a new mole for the given instance</summary>
        </member>
        <member name="M:CRMonopoly.domein.velden.Moles.MStation.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:CRMonopoly.domein.velden.Moles.MStation.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:CRMonopoly.domein.velden.Moles.MStation.Bind(CRMonopoly.domein.velden.VerkoopbaarVeld)">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="P:CRMonopoly.domein.velden.Moles.MStation.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:CRMonopoly.domein.velden.Moles.MStation.ConstructorString">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.velden.Station.#ctor(System.String)"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.velden.Moles.MStation.ConstructorStringDictionaryOfStringStation">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.velden.Station.#ctor(System.String,System.Collections.Generic.Dictionary`2{System.String,CRMonopoly.domein.velden.Station})"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.velden.Moles.MStation.EigenaarGet">
            <summary>Sets the mole of <see cref="P:CRMonopoly.domein.velden.Station.Eigenaar"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.velden.Moles.MStation.EigenaarSetSpeler">
            <summary>Sets the mole of <see cref="P:CRMonopoly.domein.velden.Station.Eigenaar"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.velden.Moles.MStation.EqualsObject">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.velden.Station.Equals(System.Object)"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.velden.Moles.MStation.GeefAankoopprijs">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.velden.Station.GeefAankoopprijs"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.velden.Moles.MStation.GeefEigenaar">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.velden.Station.GeefEigenaar"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.velden.Moles.MStation.GeefTeBetalenHuurSpeler">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.velden.Station.GeefTeBetalenHuur(CRMonopoly.domein.Speler)"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.velden.Moles.MStation.GetHashCode">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.velden.Station.GetHashCode"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.velden.Moles.MStation.StationsGet">
            <summary>Sets the mole of <see cref="P:CRMonopoly.domein.velden.Station.Stations"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.velden.Moles.MStation.StationsSetDictionaryOfStringStation">
            <summary>Sets the mole of <see cref="P:CRMonopoly.domein.velden.Station.Stations"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.velden.Moles.MStation.bepaalGebeurtenisSpeler">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.velden.Station.bepaalGebeurtenis(CRMonopoly.domein.Speler)"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.velden.Moles.MStation.geefAantalStationsInBezitVanEigenaar">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.velden.Station.geefAantalStationsInBezitVanEigenaar"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.velden.Moles.MStation.isVerkocht">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.velden.Station.isVerkocht"/>
            </summary>
        </member>
        <member name="T:CRMonopoly.domein.velden.Moles.MStation.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="P:CRMonopoly.domein.velden.Moles.MStation.AllInstances.EigenaarGet">
            <summary>Sets the mole of <see cref="P:CRMonopoly.domein.velden.Station.Eigenaar"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.velden.Moles.MStation.AllInstances.EigenaarSetSpeler">
            <summary>Sets the mole of <see cref="P:CRMonopoly.domein.velden.Station.Eigenaar"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.velden.Moles.MStation.AllInstances.EqualsObject">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.velden.Station.Equals(System.Object)"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.velden.Moles.MStation.AllInstances.GeefAankoopprijs">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.velden.Station.GeefAankoopprijs"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.velden.Moles.MStation.AllInstances.GeefEigenaar">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.velden.Station.GeefEigenaar"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.velden.Moles.MStation.AllInstances.GeefTeBetalenHuurSpeler">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.velden.Station.GeefTeBetalenHuur(CRMonopoly.domein.Speler)"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.velden.Moles.MStation.AllInstances.GetHashCode01">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.velden.Station.GetHashCode"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.velden.Moles.MStation.AllInstances.StationsGet">
            <summary>Sets the mole of <see cref="P:CRMonopoly.domein.velden.Station.Stations"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.velden.Moles.MStation.AllInstances.StationsSetDictionaryOfStringStation">
            <summary>Sets the mole of <see cref="P:CRMonopoly.domein.velden.Station.Stations"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.velden.Moles.MStation.AllInstances.bepaalGebeurtenisSpeler">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.velden.Station.bepaalGebeurtenis(CRMonopoly.domein.Speler)"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.velden.Moles.MStation.AllInstances.geefAantalStationsInBezitVanEigenaar">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.velden.Station.geefAantalStationsInBezitVanEigenaar"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.velden.Moles.MStation.AllInstances.isVerkocht">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.velden.Station.isVerkocht"/>
            </summary>
        </member>
        <member name="T:CRMonopoly.domein.Moles.MStraat">
            <summary>Mole type of <see cref="T:CRMonopoly.domein.Straat"/>
            .</summary>
        </member>
        <member name="M:CRMonopoly.domein.Moles.MStraat.#ctor">
            <summary>Initializes a new mole</summary>
        </member>
        <member name="M:CRMonopoly.domein.Moles.MStraat.#ctor(CRMonopoly.domein.Straat)">
            <summary>Initializes a new mole for the given instance</summary>
        </member>
        <member name="M:CRMonopoly.domein.Moles.MStraat.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:CRMonopoly.domein.Moles.MStraat.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:CRMonopoly.domein.Moles.MStraat.Bind(CRMonopoly.domein.velden.VerkoopbaarVeld)">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MStraat.AankoopprijsGet">
            <summary>Sets the mole of <see cref="P:CRMonopoly.domein.Straat.Aankoopprijs"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MStraat.AankoopprijsSetInt32">
            <summary>Sets the mole of <see cref="P:CRMonopoly.domein.Straat.Aankoopprijs"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MStraat.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MStraat.ConstructorString">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.Straat.#ctor(System.String)"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MStraat.ConstructorStringInt32Huur">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.Straat.#ctor(System.String,System.Int32,CRMonopoly.domein.Huur)"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MStraat.EigenaarGet">
            <summary>Sets the mole of <see cref="P:CRMonopoly.domein.Straat.Eigenaar"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MStraat.EigenaarSetSpeler">
            <summary>Sets the mole of <see cref="P:CRMonopoly.domein.Straat.Eigenaar"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MStraat.EqualsObject">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.Straat.Equals(System.Object)"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MStraat.GeefAankoopprijs">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.Straat.GeefAankoopprijs"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MStraat.GeefAantalHuizen">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.Straat.GeefAantalHuizen"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MStraat.GeefEigenaar">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.Straat.GeefEigenaar"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MStraat.GeefTeBetalenHuurSpeler">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.Straat.GeefTeBetalenHuur(CRMonopoly.domein.Speler)"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MStraat.GetHashCode">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.Straat.GetHashCode"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MStraat.HeeftHotel">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.Straat.HeeftHotel"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MStraat.HuurprijzenGet">
            <summary>Sets the mole of <see cref="P:CRMonopoly.domein.Straat.Huurprijzen"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MStraat.HuurprijzenSetHuur">
            <summary>Sets the mole of <see cref="P:CRMonopoly.domein.Straat.Huurprijzen"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MStraat.KoopHotel">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.Straat.KoopHotel"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MStraat.KoopHuis">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.Straat.KoopHuis"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MStraat.KoopHuisInt32">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.Straat.KoopHuis(System.Int32)"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MStraat.MagHotelKopen">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.Straat.MagHotelKopen"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MStraat.MagHuisKopen">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.Straat.MagHuisKopen"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MStraat.MagHuisKopenInt32">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.Straat.MagHuisKopen(System.Int32)"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MStraat.StadGet">
            <summary>Sets the mole of <see cref="P:CRMonopoly.domein.Straat.Stad"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MStraat.StadSetStad">
            <summary>Sets the mole of <see cref="P:CRMonopoly.domein.Straat.Stad"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MStraat.bepaalGebeurtenisSpeler">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.Straat.bepaalGebeurtenis(CRMonopoly.domein.Speler)"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MStraat.isVerkocht">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.Straat.isVerkocht"/>
            </summary>
        </member>
        <member name="T:CRMonopoly.domein.Moles.MStraat.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MStraat.AllInstances.AankoopprijsGet">
            <summary>Sets the mole of <see cref="P:CRMonopoly.domein.Straat.Aankoopprijs"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MStraat.AllInstances.AankoopprijsSetInt32">
            <summary>Sets the mole of <see cref="P:CRMonopoly.domein.Straat.Aankoopprijs"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MStraat.AllInstances.EigenaarGet">
            <summary>Sets the mole of <see cref="P:CRMonopoly.domein.Straat.Eigenaar"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MStraat.AllInstances.EigenaarSetSpeler">
            <summary>Sets the mole of <see cref="P:CRMonopoly.domein.Straat.Eigenaar"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MStraat.AllInstances.EqualsObject">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.Straat.Equals(System.Object)"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MStraat.AllInstances.GeefAankoopprijs">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.Straat.GeefAankoopprijs"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MStraat.AllInstances.GeefAantalHuizen">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.Straat.GeefAantalHuizen"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MStraat.AllInstances.GeefEigenaar">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.Straat.GeefEigenaar"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MStraat.AllInstances.GeefTeBetalenHuurSpeler">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.Straat.GeefTeBetalenHuur(CRMonopoly.domein.Speler)"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MStraat.AllInstances.GetHashCode01">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.Straat.GetHashCode"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MStraat.AllInstances.HeeftHotel">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.Straat.HeeftHotel"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MStraat.AllInstances.HuurprijzenGet">
            <summary>Sets the mole of <see cref="P:CRMonopoly.domein.Straat.Huurprijzen"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MStraat.AllInstances.HuurprijzenSetHuur">
            <summary>Sets the mole of <see cref="P:CRMonopoly.domein.Straat.Huurprijzen"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MStraat.AllInstances.KoopHotel">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.Straat.KoopHotel"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MStraat.AllInstances.KoopHuis">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.Straat.KoopHuis"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MStraat.AllInstances.KoopHuisInt32">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.Straat.KoopHuis(System.Int32)"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MStraat.AllInstances.MagHotelKopen">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.Straat.MagHotelKopen"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MStraat.AllInstances.MagHuisKopen">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.Straat.MagHuisKopen"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MStraat.AllInstances.MagHuisKopenInt32">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.Straat.MagHuisKopen(System.Int32)"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MStraat.AllInstances.StadGet">
            <summary>Sets the mole of <see cref="P:CRMonopoly.domein.Straat.Stad"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MStraat.AllInstances.StadSetStad">
            <summary>Sets the mole of <see cref="P:CRMonopoly.domein.Straat.Stad"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MStraat.AllInstances.bepaalGebeurtenisSpeler">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.Straat.bepaalGebeurtenis(CRMonopoly.domein.Speler)"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MStraat.AllInstances.isVerkocht">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.Straat.isVerkocht"/>
            </summary>
        </member>
        <member name="T:CRMonopoly.domein.Moles.MVeld">
            <summary>Mole type of <see cref="T:CRMonopoly.domein.Veld"/>
            .</summary>
        </member>
        <member name="M:CRMonopoly.domein.Moles.MVeld.#ctor(CRMonopoly.domein.Veld)">
            <summary>Initializes a new mole for the given instance</summary>
        </member>
        <member name="M:CRMonopoly.domein.Moles.MVeld.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:CRMonopoly.domein.Moles.MVeld.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MVeld.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MVeld.BordGet">
            <summary>Sets the mole of <see cref="P:CRMonopoly.domein.Veld.Bord"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MVeld.BordSetMonopolybord">
            <summary>Sets the mole of <see cref="P:CRMonopoly.domein.Veld.Bord"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MVeld.ConstructorString">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.Veld.#ctor(System.String)"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MVeld.NaamGet">
            <summary>Sets the mole of <see cref="P:CRMonopoly.domein.Veld.Naam"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MVeld.NaamSetString">
            <summary>Sets the mole of <see cref="P:CRMonopoly.domein.Veld.Naam"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MVeld.ToString">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.Veld.ToString"/>
            </summary>
        </member>
        <member name="T:CRMonopoly.domein.Moles.MVeld.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MVeld.AllInstances.BordGet">
            <summary>Sets the mole of <see cref="P:CRMonopoly.domein.Veld.Bord"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MVeld.AllInstances.BordSetMonopolybord">
            <summary>Sets the mole of <see cref="P:CRMonopoly.domein.Veld.Bord"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MVeld.AllInstances.NaamGet">
            <summary>Sets the mole of <see cref="P:CRMonopoly.domein.Veld.Naam"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MVeld.AllInstances.NaamSetString">
            <summary>Sets the mole of <see cref="P:CRMonopoly.domein.Veld.Naam"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MVeld.AllInstances.ToString01">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.Veld.ToString"/>
            </summary>
        </member>
        <member name="T:CRMonopoly.domein.gebeurtenis.kans.Moles.MVerlaatDeGevangenis">
            <summary>Mole type of <see cref="T:CRMonopoly.domein.gebeurtenis.kans.VerlaatDeGevangenis"/>
            .</summary>
        </member>
        <member name="M:CRMonopoly.domein.gebeurtenis.kans.Moles.MVerlaatDeGevangenis.#ctor">
            <summary>Initializes a new mole</summary>
        </member>
        <member name="M:CRMonopoly.domein.gebeurtenis.kans.Moles.MVerlaatDeGevangenis.#ctor(CRMonopoly.domein.gebeurtenis.kans.VerlaatDeGevangenis)">
            <summary>Initializes a new mole for the given instance</summary>
        </member>
        <member name="M:CRMonopoly.domein.gebeurtenis.kans.Moles.MVerlaatDeGevangenis.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:CRMonopoly.domein.gebeurtenis.kans.Moles.MVerlaatDeGevangenis.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:CRMonopoly.domein.gebeurtenis.kans.Moles.MVerlaatDeGevangenis.Bind(CRMonopoly.domein.gebeurtenis.Gebeurtenis)">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="P:CRMonopoly.domein.gebeurtenis.kans.Moles.MVerlaatDeGevangenis.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:CRMonopoly.domein.gebeurtenis.kans.Moles.MVerlaatDeGevangenis.ConstructorListOfGebeurtenis">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.gebeurtenis.kans.VerlaatDeGevangenis.#ctor(System.Collections.Generic.List`1{CRMonopoly.domein.gebeurtenis.Gebeurtenis})"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.gebeurtenis.kans.Moles.MVerlaatDeGevangenis.IsVerplicht">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.gebeurtenis.kans.VerlaatDeGevangenis.IsVerplicht"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.gebeurtenis.kans.Moles.MVerlaatDeGevangenis.KaartLigtOpStapelGet">
            <summary>Sets the mole of <see cref="P:CRMonopoly.domein.gebeurtenis.kans.VerlaatDeGevangenis.KaartLigtOpStapel"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.gebeurtenis.kans.Moles.MVerlaatDeGevangenis.KaartLigtOpStapelSetBoolean">
            <summary>Sets the mole of <see cref="P:CRMonopoly.domein.gebeurtenis.kans.VerlaatDeGevangenis.KaartLigtOpStapel"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.gebeurtenis.kans.Moles.MVerlaatDeGevangenis.KaartstapelGet">
            <summary>Sets the mole of <see cref="P:CRMonopoly.domein.gebeurtenis.kans.VerlaatDeGevangenis.Kaartstapel"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.gebeurtenis.kans.Moles.MVerlaatDeGevangenis.KaartstapelSetListOfGebeurtenis">
            <summary>Sets the mole of <see cref="P:CRMonopoly.domein.gebeurtenis.kans.VerlaatDeGevangenis.Kaartstapel"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.gebeurtenis.kans.Moles.MVerlaatDeGevangenis.VoerUitSpeler">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.gebeurtenis.kans.VerlaatDeGevangenis.VoerUit(CRMonopoly.domein.Speler)"/>
            </summary>
        </member>
        <member name="T:CRMonopoly.domein.gebeurtenis.kans.Moles.MVerlaatDeGevangenis.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="P:CRMonopoly.domein.gebeurtenis.kans.Moles.MVerlaatDeGevangenis.AllInstances.IsVerplicht">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.gebeurtenis.kans.VerlaatDeGevangenis.IsVerplicht"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.gebeurtenis.kans.Moles.MVerlaatDeGevangenis.AllInstances.KaartLigtOpStapelGet">
            <summary>Sets the mole of <see cref="P:CRMonopoly.domein.gebeurtenis.kans.VerlaatDeGevangenis.KaartLigtOpStapel"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.gebeurtenis.kans.Moles.MVerlaatDeGevangenis.AllInstances.KaartLigtOpStapelSetBoolean">
            <summary>Sets the mole of <see cref="P:CRMonopoly.domein.gebeurtenis.kans.VerlaatDeGevangenis.KaartLigtOpStapel"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.gebeurtenis.kans.Moles.MVerlaatDeGevangenis.AllInstances.KaartstapelGet">
            <summary>Sets the mole of <see cref="P:CRMonopoly.domein.gebeurtenis.kans.VerlaatDeGevangenis.Kaartstapel"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.gebeurtenis.kans.Moles.MVerlaatDeGevangenis.AllInstances.KaartstapelSetListOfGebeurtenis">
            <summary>Sets the mole of <see cref="P:CRMonopoly.domein.gebeurtenis.kans.VerlaatDeGevangenis.Kaartstapel"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.gebeurtenis.kans.Moles.MVerlaatDeGevangenis.AllInstances.VoerUitSpeler">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.gebeurtenis.kans.VerlaatDeGevangenis.VoerUit(CRMonopoly.domein.Speler)"/>
            </summary>
        </member>
        <member name="T:CRMonopoly.domein.Moles.MWorp">
            <summary>Mole type of <see cref="T:CRMonopoly.domein.Worp"/>
            .</summary>
        </member>
        <member name="M:CRMonopoly.domein.Moles.MWorp.#ctor">
            <summary>Initializes a new mole</summary>
        </member>
        <member name="M:CRMonopoly.domein.Moles.MWorp.#ctor(CRMonopoly.domein.Worp)">
            <summary>Initializes a new mole for the given instance</summary>
        </member>
        <member name="M:CRMonopoly.domein.Moles.MWorp.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:CRMonopoly.domein.Moles.MWorp.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MWorp.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MWorp.Constructor">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.Worp.#ctor"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MWorp.Gedobbeldeworp1Get">
            <summary>Sets the mole of <see cref="P:CRMonopoly.domein.Worp.Gedobbeldeworp1"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MWorp.Gedobbeldeworp1SetInt32">
            <summary>Sets the mole of <see cref="P:CRMonopoly.domein.Worp.Gedobbeldeworp1"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MWorp.Gedobbeldeworp2Get">
            <summary>Sets the mole of <see cref="P:CRMonopoly.domein.Worp.Gedobbeldeworp2"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MWorp.Gedobbeldeworp2SetInt32">
            <summary>Sets the mole of <see cref="P:CRMonopoly.domein.Worp.Gedobbeldeworp2"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MWorp.GooiDobbelstenen">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.Worp.GooiDobbelstenen"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MWorp.IsDubbelGegooid">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.Worp.IsDubbelGegooid"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MWorp.ToString">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.Worp.ToString"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MWorp.Totaal">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.Worp.Totaal"/>
            </summary>
        </member>
        <member name="T:CRMonopoly.domein.Moles.MWorp.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MWorp.AllInstances.Gedobbeldeworp1Get">
            <summary>Sets the mole of <see cref="P:CRMonopoly.domein.Worp.Gedobbeldeworp1"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MWorp.AllInstances.Gedobbeldeworp1SetInt32">
            <summary>Sets the mole of <see cref="P:CRMonopoly.domein.Worp.Gedobbeldeworp1"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MWorp.AllInstances.Gedobbeldeworp2Get">
            <summary>Sets the mole of <see cref="P:CRMonopoly.domein.Worp.Gedobbeldeworp2"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MWorp.AllInstances.Gedobbeldeworp2SetInt32">
            <summary>Sets the mole of <see cref="P:CRMonopoly.domein.Worp.Gedobbeldeworp2"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MWorp.AllInstances.IsDubbelGegooid">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.Worp.IsDubbelGegooid"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MWorp.AllInstances.ToString01">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.Worp.ToString"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MWorp.AllInstances.Totaal">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.Worp.Totaal"/>
            </summary>
        </member>
        <member name="T:CRMonopoly.domein.Moles.MWorpen">
            <summary>Mole type of <see cref="T:CRMonopoly.domein.Worpen"/>
            .</summary>
        </member>
        <member name="M:CRMonopoly.domein.Moles.MWorpen.#ctor">
            <summary>Initializes a new mole</summary>
        </member>
        <member name="M:CRMonopoly.domein.Moles.MWorpen.#ctor(CRMonopoly.domein.Worpen)">
            <summary>Initializes a new mole for the given instance</summary>
        </member>
        <member name="M:CRMonopoly.domein.Moles.MWorpen.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:CRMonopoly.domein.Moles.MWorpen.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MWorpen.AddWorp">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.Worpen.Add(CRMonopoly.domein.Worp)"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MWorpen.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MWorpen.Constructor">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.Worpen.#ctor"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MWorpen.Is3XDubbelGegooit">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.Worpen.Is3XDubbelGegooit"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MWorpen.LaatsteWorp">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.Worpen.LaatsteWorp"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MWorpen.Reset">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.Worpen.Reset"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MWorpen.WorpListGet">
            <summary>Sets the mole of <see cref="P:CRMonopoly.domein.Worpen.WorpList"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MWorpen.WorpListSetListOfWorp">
            <summary>Sets the mole of <see cref="P:CRMonopoly.domein.Worpen.WorpList"/>
            </summary>
        </member>
        <member name="T:CRMonopoly.domein.Moles.MWorpen.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MWorpen.AllInstances.AddWorp">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.Worpen.Add(CRMonopoly.domein.Worp)"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MWorpen.AllInstances.Is3XDubbelGegooit">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.Worpen.Is3XDubbelGegooit"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MWorpen.AllInstances.LaatsteWorp">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.Worpen.LaatsteWorp"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MWorpen.AllInstances.Reset">
            <summary>Sets the mole of <see cref="M:CRMonopoly.domein.Worpen.Reset"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MWorpen.AllInstances.WorpListGet">
            <summary>Sets the mole of <see cref="P:CRMonopoly.domein.Worpen.WorpList"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.MWorpen.AllInstances.WorpListSetListOfWorp">
            <summary>Sets the mole of <see cref="P:CRMonopoly.domein.Worpen.WorpList"/>
            </summary>
        </member>
        <member name="T:CRMonopoly.domein.gebeurtenis.Moles.SAbstractGebeurtenis">
            <summary>Stub type of <see cref="T:CRMonopoly.domein.gebeurtenis.AbstractGebeurtenis"/>
            .</summary>
        </member>
        <member name="M:CRMonopoly.domein.gebeurtenis.Moles.SAbstractGebeurtenis.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:CRMonopoly.domein.gebeurtenis.Moles.SAbstractGebeurtenis.Equals(System.Object)">
            <summary>Sets the stub of <see cref="M:CRMonopoly.domein.gebeurtenis.AbstractGebeurtenis.Equals(System.Object)"/>
            </summary>
        </member>
        <member name="F:CRMonopoly.domein.gebeurtenis.Moles.SAbstractGebeurtenis.EqualsObject">
            <summary>Sets the stub of <see cref="M:CRMonopoly.domein.gebeurtenis.AbstractGebeurtenis.Equals(System.Object)"/>
            </summary>
        </member>
        <member name="M:CRMonopoly.domein.gebeurtenis.Moles.SAbstractGebeurtenis.GetHashCode">
            <summary>Sets the stub of <see cref="M:CRMonopoly.domein.gebeurtenis.AbstractGebeurtenis.GetHashCode"/>
            </summary>
        </member>
        <member name="F:CRMonopoly.domein.gebeurtenis.Moles.SAbstractGebeurtenis.GetHashCode01">
            <summary>Sets the stub of <see cref="M:CRMonopoly.domein.gebeurtenis.AbstractGebeurtenis.GetHashCode"/>
            </summary>
        </member>
        <member name="M:CRMonopoly.domein.gebeurtenis.Moles.SAbstractGebeurtenis.InitializeStub">
            <summary>Initializes a new instance of type SAbstractGebeurtenis</summary>
        </member>
        <member name="M:CRMonopoly.domein.gebeurtenis.Moles.SAbstractGebeurtenis.IsVerplicht">
            <summary>Sets the stub of <see cref="M:CRMonopoly.domein.gebeurtenis.AbstractGebeurtenis.IsVerplicht"/>
            </summary>
        </member>
        <member name="F:CRMonopoly.domein.gebeurtenis.Moles.SAbstractGebeurtenis.IsVerplicht01">
            <summary>Sets the stub of <see cref="M:CRMonopoly.domein.gebeurtenis.AbstractGebeurtenis.IsVerplicht"/>
            </summary>
        </member>
        <member name="M:CRMonopoly.domein.gebeurtenis.Moles.SAbstractGebeurtenis.VoerUit(CRMonopoly.domein.Speler)">
            <summary>Sets the stub of <see cref="M:CRMonopoly.domein.gebeurtenis.AbstractGebeurtenis.VoerUit(CRMonopoly.domein.Speler)"/>
            </summary>
        </member>
        <member name="F:CRMonopoly.domein.gebeurtenis.Moles.SAbstractGebeurtenis.VoerUitSpeler">
            <summary>Sets the stub of <see cref="M:CRMonopoly.domein.gebeurtenis.AbstractGebeurtenis.VoerUit(CRMonopoly.domein.Speler)"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.gebeurtenis.Moles.SAbstractGebeurtenis.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:CRMonopoly.domein.gebeurtenis.Moles.SAbstractGebeurtenis.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="T:CRMonopoly.domein.velden.Moles.SBelastingVeld">
            <summary>Stub type of <see cref="T:CRMonopoly.domein.velden.BelastingVeld"/>
            .</summary>
        </member>
        <member name="M:CRMonopoly.domein.velden.Moles.SBelastingVeld.#ctor(System.String,System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="F:CRMonopoly.domein.velden.Moles.SBelastingVeld.BepaalGebeurtenisSpeler">
            <summary>Sets the stub of <see cref="M:CRMonopoly.domein.velden.BelastingVeld.bepaalGebeurtenis(CRMonopoly.domein.Speler)"/>
            </summary>
        </member>
        <member name="M:CRMonopoly.domein.velden.Moles.SBelastingVeld.InitializeStub">
            <summary>Initializes a new instance of type SBelastingVeld</summary>
        </member>
        <member name="M:CRMonopoly.domein.velden.Moles.SBelastingVeld.ToString">
            <summary>Sets the stub of <see cref="M:CRMonopoly.domein.Veld.ToString"/>
            </summary>
        </member>
        <member name="F:CRMonopoly.domein.velden.Moles.SBelastingVeld.ToString01">
            <summary>Sets the stub of <see cref="M:CRMonopoly.domein.Veld.ToString"/>
            </summary>
        </member>
        <member name="M:CRMonopoly.domein.velden.Moles.SBelastingVeld.bepaalGebeurtenis(CRMonopoly.domein.Speler)">
            <summary>Sets the stub of <see cref="M:CRMonopoly.domein.velden.BelastingVeld.bepaalGebeurtenis(CRMonopoly.domein.Speler)"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.velden.Moles.SBelastingVeld.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:CRMonopoly.domein.velden.Moles.SBelastingVeld.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="T:CRMonopoly.domein.Moles.SBelastingVelden">
            <summary>Stub type of <see cref="T:CRMonopoly.domein.BelastingVelden"/>
            .</summary>
        </member>
        <member name="M:CRMonopoly.domein.Moles.SBelastingVelden.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:CRMonopoly.domein.Moles.SBelastingVelden.InitializeStub">
            <summary>Initializes a new instance of type SBelastingVelden</summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.SBelastingVelden.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.SBelastingVelden.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="T:CRMonopoly.domein.gebeurtenis.kans.Moles.SBetaalGeld">
            <summary>Stub type of <see cref="T:CRMonopoly.domein.gebeurtenis.kans.BetaalGeld"/>
            .</summary>
        </member>
        <member name="M:CRMonopoly.domein.gebeurtenis.kans.Moles.SBetaalGeld.#ctor(System.Int32,System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:CRMonopoly.domein.gebeurtenis.kans.Moles.SBetaalGeld.Equals(System.Object)">
            <summary>Sets the stub of <see cref="M:CRMonopoly.domein.gebeurtenis.AbstractGebeurtenis.Equals(System.Object)"/>
            </summary>
        </member>
        <member name="F:CRMonopoly.domein.gebeurtenis.kans.Moles.SBetaalGeld.EqualsObject">
            <summary>Sets the stub of <see cref="M:CRMonopoly.domein.gebeurtenis.AbstractGebeurtenis.Equals(System.Object)"/>
            </summary>
        </member>
        <member name="M:CRMonopoly.domein.gebeurtenis.kans.Moles.SBetaalGeld.GetHashCode">
            <summary>Sets the stub of <see cref="M:CRMonopoly.domein.gebeurtenis.AbstractGebeurtenis.GetHashCode"/>
            </summary>
        </member>
        <member name="F:CRMonopoly.domein.gebeurtenis.kans.Moles.SBetaalGeld.GetHashCode01">
            <summary>Sets the stub of <see cref="M:CRMonopoly.domein.gebeurtenis.AbstractGebeurtenis.GetHashCode"/>
            </summary>
        </member>
        <member name="M:CRMonopoly.domein.gebeurtenis.kans.Moles.SBetaalGeld.InitializeStub">
            <summary>Initializes a new instance of type SBetaalGeld</summary>
        </member>
        <member name="M:CRMonopoly.domein.gebeurtenis.kans.Moles.SBetaalGeld.IsVerplicht">
            <summary>Sets the stub of <see cref="M:CRMonopoly.domein.gebeurtenis.kans.BetaalGeld.IsVerplicht"/>
            </summary>
        </member>
        <member name="F:CRMonopoly.domein.gebeurtenis.kans.Moles.SBetaalGeld.IsVerplicht01">
            <summary>Sets the stub of <see cref="M:CRMonopoly.domein.gebeurtenis.kans.BetaalGeld.IsVerplicht"/>
            </summary>
        </member>
        <member name="M:CRMonopoly.domein.gebeurtenis.kans.Moles.SBetaalGeld.VoerUit(CRMonopoly.domein.Speler)">
            <summary>Sets the stub of <see cref="M:CRMonopoly.domein.gebeurtenis.kans.BetaalGeld.VoerUit(CRMonopoly.domein.Speler)"/>
            </summary>
        </member>
        <member name="F:CRMonopoly.domein.gebeurtenis.kans.Moles.SBetaalGeld.VoerUitSpeler">
            <summary>Sets the stub of <see cref="M:CRMonopoly.domein.gebeurtenis.kans.BetaalGeld.VoerUit(CRMonopoly.domein.Speler)"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.gebeurtenis.kans.Moles.SBetaalGeld.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:CRMonopoly.domein.gebeurtenis.kans.Moles.SBetaalGeld.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="T:CRMonopoly.domein.Moles.SDobbelsteen">
            <summary>Stub type of <see cref="T:CRMonopoly.domein.Dobbelsteen"/>
            .</summary>
        </member>
        <member name="M:CRMonopoly.domein.Moles.SDobbelsteen.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:CRMonopoly.domein.Moles.SDobbelsteen.InitializeStub">
            <summary>Initializes a new instance of type SDobbelsteen</summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.SDobbelsteen.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.SDobbelsteen.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="T:CRMonopoly.domein.gebeurtenis.Moles.SGebeurtenis">
            <summary>Stub type of <see cref="T:CRMonopoly.domein.gebeurtenis.Gebeurtenis"/>
            .</summary>
        </member>
        <member name="M:CRMonopoly.domein.gebeurtenis.Moles.SGebeurtenis.#ctor">
            <summary>Initializes a new instance of type SGebeurtenis</summary>
        </member>
        <member name="M:CRMonopoly.domein.gebeurtenis.Moles.SGebeurtenis.crm::CRMonopoly#domein#gebeurtenis#Gebeurtenis#IsVerplicht">
            <summary>Sets the stub of <see cref="M:CRMonopoly.domein.gebeurtenis.Gebeurtenis.IsVerplicht"/>
            </summary>
        </member>
        <member name="M:CRMonopoly.domein.gebeurtenis.Moles.SGebeurtenis.crm::CRMonopoly#domein#gebeurtenis#Gebeurtenis#VoerUit(CRMonopoly.domein.Speler)">
            <summary>Sets the stub of <see cref="M:CRMonopoly.domein.gebeurtenis.Gebeurtenis.VoerUit(CRMonopoly.domein.Speler)"/>
            </summary>
        </member>
        <member name="F:CRMonopoly.domein.gebeurtenis.Moles.SGebeurtenis.GebeurtenisnaamGet">
            <summary>Sets the stub of <see cref="P:CRMonopoly.domein.gebeurtenis.Gebeurtenis.Gebeurtenisnaam"/>
            </summary>
        </member>
        <member name="F:CRMonopoly.domein.gebeurtenis.Moles.SGebeurtenis.IsVerplicht">
            <summary>Sets the stub of <see cref="M:CRMonopoly.domein.gebeurtenis.Gebeurtenis.IsVerplicht"/>
            </summary>
        </member>
        <member name="F:CRMonopoly.domein.gebeurtenis.Moles.SGebeurtenis.VoerUitSpeler">
            <summary>Sets the stub of <see cref="M:CRMonopoly.domein.gebeurtenis.Gebeurtenis.VoerUit(CRMonopoly.domein.Speler)"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.gebeurtenis.Moles.SGebeurtenis.crm::CRMonopoly#domein#gebeurtenis#Gebeurtenis#Gebeurtenisnaam">
            <summary>Sets the stub of <see cref="P:CRMonopoly.domein.gebeurtenis.Gebeurtenis.Gebeurtenisnaam"/>
            </summary>
        </member>
        <member name="T:CRMonopoly.domein.gebeurtenis.Moles.SGebeurtenissen">
            <summary>Stub type of <see cref="T:CRMonopoly.domein.gebeurtenis.Gebeurtenissen"/>
            .</summary>
        </member>
        <member name="M:CRMonopoly.domein.gebeurtenis.Moles.SGebeurtenissen.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:CRMonopoly.domein.gebeurtenis.Moles.SGebeurtenissen.InitializeStub">
            <summary>Initializes a new instance of type SGebeurtenissen</summary>
        </member>
        <member name="P:CRMonopoly.domein.gebeurtenis.Moles.SGebeurtenissen.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:CRMonopoly.domein.gebeurtenis.Moles.SGebeurtenissen.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="T:CRMonopoly.domein.velden.Moles.SGevangenis">
            <summary>Stub type of <see cref="T:CRMonopoly.domein.velden.Gevangenis"/>
            .</summary>
        </member>
        <member name="M:CRMonopoly.domein.velden.Moles.SGevangenis.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="F:CRMonopoly.domein.velden.Moles.SGevangenis.BepaalGebeurtenisSpeler">
            <summary>Sets the stub of <see cref="M:CRMonopoly.domein.velden.Gevangenis.bepaalGebeurtenis(CRMonopoly.domein.Speler)"/>
            </summary>
        </member>
        <member name="M:CRMonopoly.domein.velden.Moles.SGevangenis.InitializeStub">
            <summary>Initializes a new instance of type SGevangenis</summary>
        </member>
        <member name="M:CRMonopoly.domein.velden.Moles.SGevangenis.ToString">
            <summary>Sets the stub of <see cref="M:CRMonopoly.domein.Veld.ToString"/>
            </summary>
        </member>
        <member name="F:CRMonopoly.domein.velden.Moles.SGevangenis.ToString01">
            <summary>Sets the stub of <see cref="M:CRMonopoly.domein.Veld.ToString"/>
            </summary>
        </member>
        <member name="M:CRMonopoly.domein.velden.Moles.SGevangenis.bepaalGebeurtenis(CRMonopoly.domein.Speler)">
            <summary>Sets the stub of <see cref="M:CRMonopoly.domein.velden.Gevangenis.bepaalGebeurtenis(CRMonopoly.domein.Speler)"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.velden.Moles.SGevangenis.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:CRMonopoly.domein.velden.Moles.SGevangenis.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="T:CRMonopoly.domein.gebeurtenis.Moles.SGevangenisGebeurtenis">
            <summary>Stub type of <see cref="T:CRMonopoly.domein.gebeurtenis.GevangenisGebeurtenis"/>
            .</summary>
        </member>
        <member name="M:CRMonopoly.domein.gebeurtenis.Moles.SGevangenisGebeurtenis.#ctor(CRMonopoly.domein.velden.Gevangenis)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:CRMonopoly.domein.gebeurtenis.Moles.SGevangenisGebeurtenis.Equals(System.Object)">
            <summary>Sets the stub of <see cref="M:CRMonopoly.domein.gebeurtenis.AbstractGebeurtenis.Equals(System.Object)"/>
            </summary>
        </member>
        <member name="F:CRMonopoly.domein.gebeurtenis.Moles.SGevangenisGebeurtenis.EqualsObject">
            <summary>Sets the stub of <see cref="M:CRMonopoly.domein.gebeurtenis.AbstractGebeurtenis.Equals(System.Object)"/>
            </summary>
        </member>
        <member name="M:CRMonopoly.domein.gebeurtenis.Moles.SGevangenisGebeurtenis.GetHashCode">
            <summary>Sets the stub of <see cref="M:CRMonopoly.domein.gebeurtenis.AbstractGebeurtenis.GetHashCode"/>
            </summary>
        </member>
        <member name="F:CRMonopoly.domein.gebeurtenis.Moles.SGevangenisGebeurtenis.GetHashCode01">
            <summary>Sets the stub of <see cref="M:CRMonopoly.domein.gebeurtenis.AbstractGebeurtenis.GetHashCode"/>
            </summary>
        </member>
        <member name="M:CRMonopoly.domein.gebeurtenis.Moles.SGevangenisGebeurtenis.InitializeStub">
            <summary>Initializes a new instance of type SGevangenisGebeurtenis</summary>
        </member>
        <member name="M:CRMonopoly.domein.gebeurtenis.Moles.SGevangenisGebeurtenis.IsVerplicht">
            <summary>Sets the stub of <see cref="M:CRMonopoly.domein.gebeurtenis.GevangenisGebeurtenis.IsVerplicht"/>
            </summary>
        </member>
        <member name="F:CRMonopoly.domein.gebeurtenis.Moles.SGevangenisGebeurtenis.IsVerplicht01">
            <summary>Sets the stub of <see cref="M:CRMonopoly.domein.gebeurtenis.GevangenisGebeurtenis.IsVerplicht"/>
            </summary>
        </member>
        <member name="M:CRMonopoly.domein.gebeurtenis.Moles.SGevangenisGebeurtenis.VoerUit(CRMonopoly.domein.Speler)">
            <summary>Sets the stub of <see cref="M:CRMonopoly.domein.gebeurtenis.GevangenisGebeurtenis.VoerUit(CRMonopoly.domein.Speler)"/>
            </summary>
        </member>
        <member name="F:CRMonopoly.domein.gebeurtenis.Moles.SGevangenisGebeurtenis.VoerUitSpeler">
            <summary>Sets the stub of <see cref="M:CRMonopoly.domein.gebeurtenis.GevangenisGebeurtenis.VoerUit(CRMonopoly.domein.Speler)"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.gebeurtenis.Moles.SGevangenisGebeurtenis.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:CRMonopoly.domein.gebeurtenis.Moles.SGevangenisGebeurtenis.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="T:CRMonopoly.domein.Moles.SHuur">
            <summary>Stub type of <see cref="T:CRMonopoly.domein.Huur"/>
            .</summary>
        </member>
        <member name="M:CRMonopoly.domein.Moles.SHuur.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:CRMonopoly.domein.Moles.SHuur.InitializeStub">
            <summary>Initializes a new instance of type SHuur</summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.SHuur.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.SHuur.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="T:CRMonopoly.builders.Moles.SKaartenBuilder">
            <summary>Stub type of <see cref="T:CRMonopoly.builders.KaartenBuilder"/>
            .</summary>
        </member>
        <member name="M:CRMonopoly.builders.Moles.SKaartenBuilder.#ctor">
            <summary>Initializes a new instance of type SKaartenBuilder</summary>
        </member>
        <member name="M:CRMonopoly.builders.Moles.SKaartenBuilder.crm::CRMonopoly#builders#KaartenBuilder#getStapelKaarten">
            <summary>Sets the stub of <see cref="M:CRMonopoly.builders.KaartenBuilder.getStapelKaarten"/>
            </summary>
        </member>
        <member name="F:CRMonopoly.builders.Moles.SKaartenBuilder.GetStapelKaarten">
            <summary>Sets the stub of <see cref="M:CRMonopoly.builders.KaartenBuilder.getStapelKaarten"/>
            </summary>
        </member>
        <member name="T:CRMonopoly.domein.velden.Moles.SKansEnAlgemeenfondsVeld">
            <summary>Stub type of <see cref="T:CRMonopoly.domein.velden.KansEnAlgemeenfondsVeld"/>
            .</summary>
        </member>
        <member name="M:CRMonopoly.domein.velden.Moles.SKansEnAlgemeenfondsVeld.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="F:CRMonopoly.domein.velden.Moles.SKansEnAlgemeenfondsVeld.BepaalGebeurtenisSpeler">
            <summary>Sets the stub of <see cref="M:CRMonopoly.domein.velden.KansEnAlgemeenfondsVeld.bepaalGebeurtenis(CRMonopoly.domein.Speler)"/>
            </summary>
        </member>
        <member name="M:CRMonopoly.domein.velden.Moles.SKansEnAlgemeenfondsVeld.InitializeStub">
            <summary>Initializes a new instance of type SKansEnAlgemeenfondsVeld</summary>
        </member>
        <member name="M:CRMonopoly.domein.velden.Moles.SKansEnAlgemeenfondsVeld.ToString">
            <summary>Sets the stub of <see cref="M:CRMonopoly.domein.Veld.ToString"/>
            </summary>
        </member>
        <member name="F:CRMonopoly.domein.velden.Moles.SKansEnAlgemeenfondsVeld.ToString01">
            <summary>Sets the stub of <see cref="M:CRMonopoly.domein.Veld.ToString"/>
            </summary>
        </member>
        <member name="M:CRMonopoly.domein.velden.Moles.SKansEnAlgemeenfondsVeld.bepaalGebeurtenis(CRMonopoly.domein.Speler)">
            <summary>Sets the stub of <see cref="M:CRMonopoly.domein.velden.KansEnAlgemeenfondsVeld.bepaalGebeurtenis(CRMonopoly.domein.Speler)"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.velden.Moles.SKansEnAlgemeenfondsVeld.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:CRMonopoly.domein.velden.Moles.SKansEnAlgemeenfondsVeld.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="T:CRMonopoly.domein.Moles.SMonopolybord">
            <summary>Stub type of <see cref="T:CRMonopoly.domein.Monopolybord"/>
            .</summary>
        </member>
        <member name="M:CRMonopoly.domein.Moles.SMonopolybord.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:CRMonopoly.domein.Moles.SMonopolybord.InitializeStub">
            <summary>Initializes a new instance of type SMonopolybord</summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.SMonopolybord.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.SMonopolybord.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="T:CRMonopoly.domein.Moles.SMonopolyspel">
            <summary>Stub type of <see cref="T:CRMonopoly.domein.Monopolyspel"/>
            .</summary>
        </member>
        <member name="M:CRMonopoly.domein.Moles.SMonopolyspel.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:CRMonopoly.domein.Moles.SMonopolyspel.InitializeStub">
            <summary>Initializes a new instance of type SMonopolyspel</summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.SMonopolyspel.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.SMonopolyspel.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="T:CRMonopoly.domein.Moles.SMonopolyspelController">
            <summary>Stub type of <see cref="T:CRMonopoly.domein.MonopolyspelController"/>
            .</summary>
        </member>
        <member name="M:CRMonopoly.domein.Moles.SMonopolyspelController.#ctor(CRMonopoly.domein.Monopolyspel)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:CRMonopoly.domein.Moles.SMonopolyspelController.InitializeStub">
            <summary>Initializes a new instance of type SMonopolyspelController</summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.SMonopolyspelController.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.SMonopolyspelController.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="T:CRMonopoly.domein.velden.Moles.SNutsbedrijf">
            <summary>Stub type of <see cref="T:CRMonopoly.domein.velden.Nutsbedrijf"/>
            .</summary>
        </member>
        <member name="M:CRMonopoly.domein.velden.Moles.SNutsbedrijf.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="F:CRMonopoly.domein.velden.Moles.SNutsbedrijf.BepaalGebeurtenisSpeler">
            <summary>Sets the stub of <see cref="M:CRMonopoly.domein.velden.Nutsbedrijf.bepaalGebeurtenis(CRMonopoly.domein.Speler)"/>
            </summary>
        </member>
        <member name="M:CRMonopoly.domein.velden.Moles.SNutsbedrijf.Equals(System.Object)">
            <summary>Sets the stub of <see cref="M:CRMonopoly.domein.velden.Nutsbedrijf.Equals(System.Object)"/>
            </summary>
        </member>
        <member name="F:CRMonopoly.domein.velden.Moles.SNutsbedrijf.EqualsObject">
            <summary>Sets the stub of <see cref="M:CRMonopoly.domein.velden.Nutsbedrijf.Equals(System.Object)"/>
            </summary>
        </member>
        <member name="M:CRMonopoly.domein.velden.Moles.SNutsbedrijf.GetHashCode">
            <summary>Sets the stub of <see cref="M:CRMonopoly.domein.velden.Nutsbedrijf.GetHashCode"/>
            </summary>
        </member>
        <member name="F:CRMonopoly.domein.velden.Moles.SNutsbedrijf.GetHashCode01">
            <summary>Sets the stub of <see cref="M:CRMonopoly.domein.velden.Nutsbedrijf.GetHashCode"/>
            </summary>
        </member>
        <member name="M:CRMonopoly.domein.velden.Moles.SNutsbedrijf.InitializeStub">
            <summary>Initializes a new instance of type SNutsbedrijf</summary>
        </member>
        <member name="M:CRMonopoly.domein.velden.Moles.SNutsbedrijf.ToString">
            <summary>Sets the stub of <see cref="M:CRMonopoly.domein.Veld.ToString"/>
            </summary>
        </member>
        <member name="F:CRMonopoly.domein.velden.Moles.SNutsbedrijf.ToString01">
            <summary>Sets the stub of <see cref="M:CRMonopoly.domein.Veld.ToString"/>
            </summary>
        </member>
        <member name="M:CRMonopoly.domein.velden.Moles.SNutsbedrijf.bepaalGebeurtenis(CRMonopoly.domein.Speler)">
            <summary>Sets the stub of <see cref="M:CRMonopoly.domein.velden.Nutsbedrijf.bepaalGebeurtenis(CRMonopoly.domein.Speler)"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.velden.Moles.SNutsbedrijf.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:CRMonopoly.domein.velden.Moles.SNutsbedrijf.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="T:CRMonopoly.domein.Moles.SNutsbedrijven">
            <summary>Stub type of <see cref="T:CRMonopoly.domein.Nutsbedrijven"/>
            .</summary>
        </member>
        <member name="M:CRMonopoly.domein.Moles.SNutsbedrijven.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:CRMonopoly.domein.Moles.SNutsbedrijven.InitializeStub">
            <summary>Initializes a new instance of type SNutsbedrijven</summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.SNutsbedrijven.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.SNutsbedrijven.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="T:CRMonopoly.domein.gebeurtenis.creator.Moles.SSpeelVerlaatDeGevangenisGebeurtenisCreator">
            <summary>Stub type of <see cref="T:CRMonopoly.domein.gebeurtenis.creator.SpeelVerlaatDeGevangenisGebeurtenisCreator"/>
            .</summary>
        </member>
        <member name="M:CRMonopoly.domein.gebeurtenis.creator.Moles.SSpeelVerlaatDeGevangenisGebeurtenisCreator.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:CRMonopoly.domein.gebeurtenis.creator.Moles.SSpeelVerlaatDeGevangenisGebeurtenisCreator.InitializeStub">
            <summary>Initializes a new instance of type SSpeelVerlaatDeGevangenisGebeurtenisCreator</summary>
        </member>
        <member name="P:CRMonopoly.domein.gebeurtenis.creator.Moles.SSpeelVerlaatDeGevangenisGebeurtenisCreator.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:CRMonopoly.domein.gebeurtenis.creator.Moles.SSpeelVerlaatDeGevangenisGebeurtenisCreator.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="T:CRMonopoly.domein.Moles.SSpeler">
            <summary>Stub type of <see cref="T:CRMonopoly.domein.Speler"/>
            .</summary>
        </member>
        <member name="M:CRMonopoly.domein.Moles.SSpeler.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:CRMonopoly.domein.Moles.SSpeler.InitializeStub">
            <summary>Initializes a new instance of type SSpeler</summary>
        </member>
        <member name="M:CRMonopoly.domein.Moles.SSpeler.ToString">
            <summary>Sets the stub of <see cref="M:CRMonopoly.domein.Speler.ToString"/>
            </summary>
        </member>
        <member name="F:CRMonopoly.domein.Moles.SSpeler.ToString01">
            <summary>Sets the stub of <see cref="M:CRMonopoly.domein.Speler.ToString"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.SSpeler.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.SSpeler.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="T:CRMonopoly.domein.Moles.SStad">
            <summary>Stub type of <see cref="T:CRMonopoly.domein.Stad"/>
            .</summary>
        </member>
        <member name="M:CRMonopoly.domein.Moles.SStad.#ctor(System.String,System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:CRMonopoly.domein.Moles.SStad.InitializeStub">
            <summary>Initializes a new instance of type SStad</summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.SStad.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.SStad.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="T:CRMonopoly.domein.velden.Moles.SStation">
            <summary>Stub type of <see cref="T:CRMonopoly.domein.velden.Station"/>
            .</summary>
        </member>
        <member name="M:CRMonopoly.domein.velden.Moles.SStation.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:CRMonopoly.domein.velden.Moles.SStation.#ctor(System.String,System.Collections.Generic.Dictionary{System.String,CRMonopoly.domein.velden.Station})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="F:CRMonopoly.domein.velden.Moles.SStation.BepaalGebeurtenisSpeler">
            <summary>Sets the stub of <see cref="M:CRMonopoly.domein.velden.Station.bepaalGebeurtenis(CRMonopoly.domein.Speler)"/>
            </summary>
        </member>
        <member name="M:CRMonopoly.domein.velden.Moles.SStation.Equals(System.Object)">
            <summary>Sets the stub of <see cref="M:CRMonopoly.domein.velden.Station.Equals(System.Object)"/>
            </summary>
        </member>
        <member name="F:CRMonopoly.domein.velden.Moles.SStation.EqualsObject">
            <summary>Sets the stub of <see cref="M:CRMonopoly.domein.velden.Station.Equals(System.Object)"/>
            </summary>
        </member>
        <member name="M:CRMonopoly.domein.velden.Moles.SStation.GetHashCode">
            <summary>Sets the stub of <see cref="M:CRMonopoly.domein.velden.Station.GetHashCode"/>
            </summary>
        </member>
        <member name="F:CRMonopoly.domein.velden.Moles.SStation.GetHashCode01">
            <summary>Sets the stub of <see cref="M:CRMonopoly.domein.velden.Station.GetHashCode"/>
            </summary>
        </member>
        <member name="M:CRMonopoly.domein.velden.Moles.SStation.InitializeStub">
            <summary>Initializes a new instance of type SStation</summary>
        </member>
        <member name="M:CRMonopoly.domein.velden.Moles.SStation.ToString">
            <summary>Sets the stub of <see cref="M:CRMonopoly.domein.Veld.ToString"/>
            </summary>
        </member>
        <member name="F:CRMonopoly.domein.velden.Moles.SStation.ToString01">
            <summary>Sets the stub of <see cref="M:CRMonopoly.domein.Veld.ToString"/>
            </summary>
        </member>
        <member name="M:CRMonopoly.domein.velden.Moles.SStation.bepaalGebeurtenis(CRMonopoly.domein.Speler)">
            <summary>Sets the stub of <see cref="M:CRMonopoly.domein.velden.Station.bepaalGebeurtenis(CRMonopoly.domein.Speler)"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.velden.Moles.SStation.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:CRMonopoly.domein.velden.Moles.SStation.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="T:CRMonopoly.domein.Moles.SStraat">
            <summary>Stub type of <see cref="T:CRMonopoly.domein.Straat"/>
            .</summary>
        </member>
        <member name="M:CRMonopoly.domein.Moles.SStraat.#ctor(System.String,System.Int32,CRMonopoly.domein.Huur)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="F:CRMonopoly.domein.Moles.SStraat.BepaalGebeurtenisSpeler">
            <summary>Sets the stub of <see cref="M:CRMonopoly.domein.Straat.bepaalGebeurtenis(CRMonopoly.domein.Speler)"/>
            </summary>
        </member>
        <member name="M:CRMonopoly.domein.Moles.SStraat.Equals(System.Object)">
            <summary>Sets the stub of <see cref="M:CRMonopoly.domein.Straat.Equals(System.Object)"/>
            </summary>
        </member>
        <member name="F:CRMonopoly.domein.Moles.SStraat.EqualsObject">
            <summary>Sets the stub of <see cref="M:CRMonopoly.domein.Straat.Equals(System.Object)"/>
            </summary>
        </member>
        <member name="M:CRMonopoly.domein.Moles.SStraat.GetHashCode">
            <summary>Sets the stub of <see cref="M:CRMonopoly.domein.Straat.GetHashCode"/>
            </summary>
        </member>
        <member name="F:CRMonopoly.domein.Moles.SStraat.GetHashCode01">
            <summary>Sets the stub of <see cref="M:CRMonopoly.domein.Straat.GetHashCode"/>
            </summary>
        </member>
        <member name="M:CRMonopoly.domein.Moles.SStraat.InitializeStub">
            <summary>Initializes a new instance of type SStraat</summary>
        </member>
        <member name="M:CRMonopoly.domein.Moles.SStraat.ToString">
            <summary>Sets the stub of <see cref="M:CRMonopoly.domein.Veld.ToString"/>
            </summary>
        </member>
        <member name="F:CRMonopoly.domein.Moles.SStraat.ToString01">
            <summary>Sets the stub of <see cref="M:CRMonopoly.domein.Veld.ToString"/>
            </summary>
        </member>
        <member name="M:CRMonopoly.domein.Moles.SStraat.bepaalGebeurtenis(CRMonopoly.domein.Speler)">
            <summary>Sets the stub of <see cref="M:CRMonopoly.domein.Straat.bepaalGebeurtenis(CRMonopoly.domein.Speler)"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.SStraat.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.SStraat.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="T:CRMonopoly.domein.Moles.SVeld">
            <summary>Stub type of <see cref="T:CRMonopoly.domein.Veld"/>
            .</summary>
        </member>
        <member name="M:CRMonopoly.domein.Moles.SVeld.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="F:CRMonopoly.domein.Moles.SVeld.BepaalGebeurtenisSpeler">
            <summary>Sets the stub of <see cref="M:CRMonopoly.domein.Veld.bepaalGebeurtenis(CRMonopoly.domein.Speler)"/>
            </summary>
        </member>
        <member name="M:CRMonopoly.domein.Moles.SVeld.InitializeStub">
            <summary>Initializes a new instance of type SVeld</summary>
        </member>
        <member name="M:CRMonopoly.domein.Moles.SVeld.ToString">
            <summary>Sets the stub of <see cref="M:CRMonopoly.domein.Veld.ToString"/>
            </summary>
        </member>
        <member name="F:CRMonopoly.domein.Moles.SVeld.ToString01">
            <summary>Sets the stub of <see cref="M:CRMonopoly.domein.Veld.ToString"/>
            </summary>
        </member>
        <member name="M:CRMonopoly.domein.Moles.SVeld.bepaalGebeurtenis(CRMonopoly.domein.Speler)">
            <summary>Sets the stub of <see cref="M:CRMonopoly.domein.Veld.bepaalGebeurtenis(CRMonopoly.domein.Speler)"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.SVeld.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.SVeld.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="T:CRMonopoly.domein.velden.Moles.SVerkoopbaarVeld">
            <summary>Stub type of <see cref="T:CRMonopoly.domein.velden.VerkoopbaarVeld"/>
            .</summary>
        </member>
        <member name="M:CRMonopoly.domein.velden.Moles.SVerkoopbaarVeld.#ctor">
            <summary>Initializes a new instance of type SVerkoopbaarVeld</summary>
        </member>
        <member name="M:CRMonopoly.domein.velden.Moles.SVerkoopbaarVeld.AttachBackingFieldToEigenaar">
            <summary>Attaches delegates to emulate SVerkoopbaarVeld.Eigenaar as a property with a backing field</summary>
        </member>
        <member name="M:CRMonopoly.domein.velden.Moles.SVerkoopbaarVeld.AttachBackingFieldToNaam">
            <summary>Attaches delegates to emulate SVerkoopbaarVeld.Naam as a property with a backing field</summary>
        </member>
        <member name="M:CRMonopoly.domein.velden.Moles.SVerkoopbaarVeld.crm::CRMonopoly#domein#velden#VerkoopbaarVeld#GeefAankoopprijs">
            <summary>Sets the stub of <see cref="M:CRMonopoly.domein.velden.VerkoopbaarVeld.GeefAankoopprijs"/>
            </summary>
        </member>
        <member name="M:CRMonopoly.domein.velden.Moles.SVerkoopbaarVeld.crm::CRMonopoly#domein#velden#VerkoopbaarVeld#GeefTeBetalenHuur(CRMonopoly.domein.Speler)">
            <summary>Sets the stub of <see cref="M:CRMonopoly.domein.velden.VerkoopbaarVeld.GeefTeBetalenHuur(CRMonopoly.domein.Speler)"/>
            </summary>
        </member>
        <member name="F:CRMonopoly.domein.velden.Moles.SVerkoopbaarVeld.EigenaarGet">
            <summary>Sets the stub of <see cref="P:CRMonopoly.domein.velden.VerkoopbaarVeld.Eigenaar"/>
            </summary>
        </member>
        <member name="F:CRMonopoly.domein.velden.Moles.SVerkoopbaarVeld.EigenaarSetSpeler">
            <summary>Sets the stub of <see cref="P:CRMonopoly.domein.velden.VerkoopbaarVeld.Eigenaar"/>
            </summary>
        </member>
        <member name="F:CRMonopoly.domein.velden.Moles.SVerkoopbaarVeld.GeefAankoopprijs">
            <summary>Sets the stub of <see cref="M:CRMonopoly.domein.velden.VerkoopbaarVeld.GeefAankoopprijs"/>
            </summary>
        </member>
        <member name="F:CRMonopoly.domein.velden.Moles.SVerkoopbaarVeld.GeefTeBetalenHuurSpeler">
            <summary>Sets the stub of <see cref="M:CRMonopoly.domein.velden.VerkoopbaarVeld.GeefTeBetalenHuur(CRMonopoly.domein.Speler)"/>
            </summary>
        </member>
        <member name="F:CRMonopoly.domein.velden.Moles.SVerkoopbaarVeld.NaamGet">
            <summary>Sets the stub of <see cref="P:CRMonopoly.domein.velden.VerkoopbaarVeld.Naam"/>
            </summary>
        </member>
        <member name="F:CRMonopoly.domein.velden.Moles.SVerkoopbaarVeld.NaamSetString">
            <summary>Sets the stub of <see cref="P:CRMonopoly.domein.velden.VerkoopbaarVeld.Naam"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.velden.Moles.SVerkoopbaarVeld.crm::CRMonopoly#domein#velden#VerkoopbaarVeld#Eigenaar">
            <summary>Sets the stub of <see cref="P:CRMonopoly.domein.velden.VerkoopbaarVeld.Eigenaar"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.velden.Moles.SVerkoopbaarVeld.crm::CRMonopoly#domein#velden#VerkoopbaarVeld#Naam">
            <summary>Sets the stub of <see cref="P:CRMonopoly.domein.velden.VerkoopbaarVeld.Naam"/>
            </summary>
        </member>
        <member name="T:CRMonopoly.domein.gebeurtenis.kans.Moles.SVerlaatDeGevangenis">
            <summary>Stub type of <see cref="T:CRMonopoly.domein.gebeurtenis.kans.VerlaatDeGevangenis"/>
            .</summary>
        </member>
        <member name="M:CRMonopoly.domein.gebeurtenis.kans.Moles.SVerlaatDeGevangenis.#ctor(System.Collections.Generic.List{CRMonopoly.domein.gebeurtenis.Gebeurtenis})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:CRMonopoly.domein.gebeurtenis.kans.Moles.SVerlaatDeGevangenis.Equals(System.Object)">
            <summary>Sets the stub of <see cref="M:CRMonopoly.domein.gebeurtenis.AbstractGebeurtenis.Equals(System.Object)"/>
            </summary>
        </member>
        <member name="F:CRMonopoly.domein.gebeurtenis.kans.Moles.SVerlaatDeGevangenis.EqualsObject">
            <summary>Sets the stub of <see cref="M:CRMonopoly.domein.gebeurtenis.AbstractGebeurtenis.Equals(System.Object)"/>
            </summary>
        </member>
        <member name="M:CRMonopoly.domein.gebeurtenis.kans.Moles.SVerlaatDeGevangenis.GetHashCode">
            <summary>Sets the stub of <see cref="M:CRMonopoly.domein.gebeurtenis.AbstractGebeurtenis.GetHashCode"/>
            </summary>
        </member>
        <member name="F:CRMonopoly.domein.gebeurtenis.kans.Moles.SVerlaatDeGevangenis.GetHashCode01">
            <summary>Sets the stub of <see cref="M:CRMonopoly.domein.gebeurtenis.AbstractGebeurtenis.GetHashCode"/>
            </summary>
        </member>
        <member name="M:CRMonopoly.domein.gebeurtenis.kans.Moles.SVerlaatDeGevangenis.InitializeStub">
            <summary>Initializes a new instance of type SVerlaatDeGevangenis</summary>
        </member>
        <member name="M:CRMonopoly.domein.gebeurtenis.kans.Moles.SVerlaatDeGevangenis.IsVerplicht">
            <summary>Sets the stub of <see cref="M:CRMonopoly.domein.gebeurtenis.kans.VerlaatDeGevangenis.IsVerplicht"/>
            </summary>
        </member>
        <member name="F:CRMonopoly.domein.gebeurtenis.kans.Moles.SVerlaatDeGevangenis.IsVerplicht01">
            <summary>Sets the stub of <see cref="M:CRMonopoly.domein.gebeurtenis.kans.VerlaatDeGevangenis.IsVerplicht"/>
            </summary>
        </member>
        <member name="M:CRMonopoly.domein.gebeurtenis.kans.Moles.SVerlaatDeGevangenis.VoerUit(CRMonopoly.domein.Speler)">
            <summary>Sets the stub of <see cref="M:CRMonopoly.domein.gebeurtenis.kans.VerlaatDeGevangenis.VoerUit(CRMonopoly.domein.Speler)"/>
            </summary>
        </member>
        <member name="F:CRMonopoly.domein.gebeurtenis.kans.Moles.SVerlaatDeGevangenis.VoerUitSpeler">
            <summary>Sets the stub of <see cref="M:CRMonopoly.domein.gebeurtenis.kans.VerlaatDeGevangenis.VoerUit(CRMonopoly.domein.Speler)"/>
            </summary>
        </member>
        <member name="P:CRMonopoly.domein.gebeurtenis.kans.Moles.SVerlaatDeGevangenis.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:CRMonopoly.domein.gebeurtenis.kans.Moles.SVerlaatDeGevangenis.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="T:CRMonopoly.domein.Moles.SWorpen">
            <summary>Stub type of <see cref="T:CRMonopoly.domein.Worpen"/>
            .</summary>
        </member>
        <member name="M:CRMonopoly.domein.Moles.SWorpen.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:CRMonopoly.domein.Moles.SWorpen.InitializeStub">
            <summary>Initializes a new instance of type SWorpen</summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.SWorpen.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:CRMonopoly.domein.Moles.SWorpen.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
    </members>
</doc>
